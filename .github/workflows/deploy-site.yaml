name: Deploy Site

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-site:
    name: Build Site
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.17.6"
      - name: Build Site
        run: |
          npm ci
          npm run build
          touch ./out/.nojekyll
        env:
          PUBLIC_URL: https://nadundesilva.github.io
      - name: Upload Site
        uses: actions/upload-artifact@v2
        with:
          name: site
          path: out/

  links-check:
    name: Check Links in Website
    runs-on: ubuntu-20.04
    needs: build-site
    steps:
      - name: Download Site
        uses: actions/download-artifact@v2
        with:
          name: site
          path: _site/
      - name: Link Checker
        id: lychee
        uses: lycheeverse/lychee-action@v1.0.6
        with:
          args: --verbose --no-progress --base="./_site/" --exclude="^https?://www.googletagmanager.com/$" --exclude="^https://fonts.googleapis.com/$" --exclude="^https://fonts.gstatic.com/$" --exclude="^https://www.linkedin.com/in/nadundesilva$" --exclude="^https://twitter.com/nadunrds" ./_site/**/*.html
      - name: Upload Link Checker Report
        uses: actions/upload-artifact@v2
        with:
          name: Link Checker Report
          path: ./lychee/out.md
      - name: Fail on Link Errors
        run: exit ${{ steps.lychee.outputs.exit_code }}

  integration-tests:
    strategy:
      matrix:
        browser: [ electron, chrome ]
    name: Run Integration Tests (${{ matrix.browser }})
    runs-on: ubuntu-20.04
    needs: build-site
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Site
        uses: actions/download-artifact@v2
        with:
          name: site
          path: _site/
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.17.6"
      - name: Run End to End Tests
        run: |
          openssl req -newkey rsa:4096 \
            -x509 \
            -sha256 \
            -days 3650 \
            -nodes \
            -out $PWD/server.crt \
            -subj "/C=AU/ST=NSW/L=Sydney/O=nadunrds/OU=nadun/CN=nadundesilva.github.io/emailAddress=nadunrds@gmail.com" \
            -keyout $PWD/server.key
          export NODE_EXTRA_CA_CERTS=$PWD/server.crt

          sudo echo "127.0.0.1 nadundesilva.github.io" | sudo tee -a /etc/hosts
          npx serve ./_site --no-port-switching --debug --single --ssl-cert $PWD/server.crt --ssl-key $PWD/server.key --listen tcp://nadundesilva.github.io:8080 </dev/null &
          SERVE_PID=${!}
          sudo iptables -t nat -A OUTPUT -o lo -p tcp --dport 443 -j REDIRECT --to-port 8080
          npx wait-on -t 10000 -i 1000 --verbose https://nadundesilva.github.io

          npm ci
          docker run --network host --rm -t -v $PWD:/test -w /test -e CYPRESS_BASE_URL=https://nadundesilva.github.io \
            cypress/included:7.4.0 run --headless --browser ${{ matrix.browser }} \
            --reporter cypress-image-snapshot/reporter
          sudo kill -9 ${SERVE_PID}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.browser }}
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/snapshots/**/__diff_output__/**

  deploy-site:
    name: Deploy Site
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    needs:
      - links-check
      - integration-tests
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Site
        uses: actions/download-artifact@v2
        with:
          name: site
          path: _site/
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: "14.17.6"
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.1
        with:
          dry-run: ${{ github.event_name != 'push' }}
          branch: gh-pages
          folder: _site
          commit-message: |
            [Automated] Update Site (Source Commit: ${{ github.sha }})
