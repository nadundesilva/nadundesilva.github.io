{"version":3,"sources":["serviceWorkerRegistration.ts","reportWebVitals.ts","components/Heading.tsx","components/Layout/theme.tsx","components/Layout/Layout.tsx","components/Layout/RouterBreadcrumbs.tsx","components/Layout/LayoutContent.tsx","components/Layout/scrolling.tsx","components/Layout/index.tsx","components/images/profile-photo.jpg","Portal/Home/AboutMe.tsx","Portal/Home/Achievements/wso2-outstanding-contributor.jpg","Portal/Home/Achievements/nasa-space-apps-2017.jpg","Portal/Home/Achievements/hsbc-youth-enterprise-awards-2015.jpg","Portal/Home/Achievements/deans-list-2017.jpg","Portal/Home/Achievements/angel-hack-2016.jpg","Portal/Home/Achievements/index.tsx","Portal/Home/ContributedProjects/ballerina.svg","Portal/Home/ContributedProjects/ballerina-white.svg","Portal/Home/ContributedProjects/cellery.svg","Portal/Home/ContributedProjects/cellery-white.svg","Portal/Home/ContributedProjects/siddhi.svg","Portal/Home/ContributedProjects/siddhi-white.svg","Portal/Home/ContributedProjects/choreo.svg","Portal/Home/ContributedProjects/choreo-white.svg","Portal/Home/ContributedProjects/index.tsx","Portal/Home/Certifications/ckad.png","Portal/Home/Certifications/cka.png","Portal/Home/Certifications/deep-learning-ai.png","Portal/Home/Certifications/index.tsx","Portal/Home/Experience.tsx","Portal/Home/Profiles.tsx","Portal/Home/Skills.tsx","Portal/Home/WelcomeBanner/banner.jpg","Portal/Home/WelcomeBanner/index.tsx","Portal/Home/index.tsx","Portal/index.tsx","index.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","undefined","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","useStyles","makeStyles","theme","createStyles","sectionTitle","marginTop","spacing","marginBottom","sectionTitleText","fontWeight","paddingTop","paddingBottom","Heading","props","classes","className","Divider","Typography","variant","align","children","colorSchemes","COLOR_SCHEME_KEY","getStoredColorScheme","storedColorScheme","localStorage","getItem","includes","useTheme","preferedColorScheme","useMediaQuery","initialStoredColorScheme","useState","colorScheme","setColorScheme","storageListener","useEffect","addEventListener","removeEventListener","useMemo","createTheme","palette","type","primary","indigo","secondary","overrides","MuiCssBaseline","width","backgroundColor","boxShadow","newColorScheme","setItem","themeToggle","marginLeft","grow","flexGrow","fab","position","bottom","right","overflowX","Layout","appBarItems","trigger","useScrollTrigger","disableHysteresis","threshold","target","scrollToTopRef","useRef","nextColorScheme","appBar","React","cloneElement","AppBar","Toolbar","Tooltip","title","IconButton","size","onClick","icon","faMoon","faSun","transform","elevation","ThemeProvider","CssBaseline","ref","Zoom","in","current","scrollIntoView","behavior","block","role","Fab","color","faChevronUp","root","margin","BREADCRUMBS_MAP","RouterBreadcrumbs","useLocation","pathnames","pathname","split","filter","x","Breadcrumbs","separator","faChevronRight","Link","href","to","component","RouterLink","map","value","index","last","length","slice","join","horizontalMargin","marginRight","content","breakpoints","down","up","LayoutContent","useScrollOffset","direction","setDirection","offset","setOffset","updateOffset","newOffset","refBBox","getBoundingClientRect","viewportHeight","innerHeight","top","fullPageHeight","document","documentElement","offsetHeight","pageBottomOffset","pageYOffset","clientRectOffset","handleScroll","requestAnimationFrame","Math","min","max","descriptionSeparator","profilePhoto","height","profilePhotoPadding","padding","textIcon","contactInfoItemHeader","AboutMe","gridWidth","Grid","item","xs","Avatar","alt","src","profilePicture","contactItem","name","md","container","justifyContent","alignItems","Hidden","mdUp","display","faMapMarkerAlt","smDown","imageListItem","imageListItemImageContainer","left","zIndex","imageListItemImageOverlay","textAlign","imageListItemText","Achievements","rootRef","achievementSections","imageLink","nasaSpaceApps2017","animationOffset","deansList2017","wso2OutstandingContributorImage","hsbcYouthEnterpriseAwards2015","angelHack2016","renderImageListItem","achievementIndex","rowCount","achievementSection","imageOffset","ImageListItem","rows","cols","classNames","style","opacity","ImageList","rowHeight","projectLogo","ContributedProjects","renderCarouselItem","blackThemeImageLink","sm","choreo","choreoWhite","ballerina","ballerinaWhite","cellery","celleryWhite","siddhi","siddhiWhite","certificationTypeMargin","certificationCardContainer","certificationCard","certificationImage","certificationIssuer","certificationType","DEEP_LEARNING_ISSUER","LINUX_FOUNDATION","Certifications","certifications","link","image","deepLearningAiLogo","issuer","ckaLogo","ckadLogo","translation","certification","xl","Card","open","CardActionArea","CardMedia","CardContent","Chip","label","timeLineItemContent","timeLineItemTitle","instituteIconRight","instituteIconLeft","Experience","isTimelineLeftAligned","instituteIcon","Timeline","timePeriod","description","institute","isOnLeft","TimelineItem","TimelineOppositeContent","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Paper","Fragment","profileSection","cursor","background","profileIcon","profileText","Profiles","profiles","faLinkedin","faGithub","faMedium","faGraduationCap","faFacebook","faInstagram","faTwitter","profile","skillName","BorderLinearProgress","withStyles","borderRadius","bar","LinearProgress","Skills","rightSideSkills","percentage","currentOffset","currentOpacity","renderPercentage","skill","leftSideSkill","bannerContainer","banner","bannerImage","mixins","toolbar","minHeight","objectFit","introText","fontSize","tagLineText","WelcomeBanner","isLarge","isMedium","downloadButtonSize","Button","process","section","sectionContent","Home","pageSections","Component","generateSection","mdDown","disableElevation","sectionRef","Portal","path","exact","ReactDOM","render","StrictMode","getElementById","URL","origin","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.d19b2c61.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void,\n    onUpdate?: (registration: ServiceWorkerRegistration) => void,\n};\n\nexport function register(config?: Config): void {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                        \"worker. To learn more, visit https://cra.link/PWA\"\n                    );\n                }, () => {});\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config): void {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller !== null) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                \"tabs for this page are closed. See https://cra.link/PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config?.onUpdate !== undefined) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config?.onSuccess !== undefined) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config): void {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { \"Service-Worker\": \"script\" }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n        (contentType?.includes(\"javascript\") ?? true)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    }, () => {});\n                }, () => {});\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\"No internet connection found. App is running in offline mode.\");\n        });\n}\n\nexport function unregister(): void {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n                    .finally(() => {});\n            })\n            .catch((error) => {\n                console.error(error.message);\n            });\n    }\n}\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry !== null && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        }, () => {});\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { createStyles, Divider, makeStyles, Theme, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        sectionTitle: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(3)\n        },\n        sectionTitleText: {\n            fontWeight: \"bold\",\n            paddingTop: theme.spacing(5),\n            paddingBottom: theme.spacing(5)\n        }\n    })\n);\n\ninterface HeadingProps {\n    children: React.ReactNode,\n};\n\nconst Heading = (props: HeadingProps): React.ReactElement => {\n    const classes = useStyles();\n    return (\n        <div className={classes.sectionTitle}>\n            <Divider/>\n            <Typography variant=\"h5\" align=\"center\" className={classes.sectionTitleText}>\n                {props.children}\n            </Typography>\n            <Divider/>\n        </div>\n    );\n};\n\nexport default Heading;\n","import { useMemo, useEffect, useState } from \"react\";\nimport { createTheme, Theme, useMediaQuery } from \"@material-ui/core\";\nimport { indigo } from \"@material-ui/core/colors\";\n\nexport type ColorScheme = \"dark\" | \"light\";\nconst colorSchemes = [\"dark\", \"light\"];\n\nconst COLOR_SCHEME_KEY = \"COLOR_SCHEME\";\n\nconst getStoredColorScheme = (): ColorScheme | null => {\n    let storedColorScheme: string | null;\n    try {\n        storedColorScheme = localStorage.getItem(COLOR_SCHEME_KEY);\n    } catch {\n        storedColorScheme = null;\n    }\n    return storedColorScheme !== null && colorSchemes.includes(storedColorScheme)\n        ? storedColorScheme as ColorScheme\n        : null;\n};\n\nconst useTheme = (): { theme: Theme, colorScheme: ColorScheme, setColorScheme: (newColorScheme: ColorScheme) => void } => {\n    const preferedColorScheme: ColorScheme = useMediaQuery(\"(prefers-color-scheme: dark)\") ? \"dark\" : \"light\";\n    const initialStoredColorScheme = getStoredColorScheme();\n\n    const [colorScheme, setColorScheme] = useState<ColorScheme>(\n        initialStoredColorScheme === null ? preferedColorScheme : initialStoredColorScheme\n    );\n\n    const storageListener = (): void => {\n        const storedColorScheme = getStoredColorScheme();\n        if (storedColorScheme !== null) {\n            setColorScheme(storedColorScheme);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"storage\", storageListener);\n        return (): void => window.removeEventListener(\"storage\", storageListener);\n    });\n\n    const theme = useMemo(\n        () => createTheme({\n            palette: {\n                type: colorScheme,\n                primary: indigo,\n                secondary: indigo\n            },\n            overrides: {\n                MuiCssBaseline: {\n                    \"@global\": {\n                        \"::-webkit-scrollbar\": {\n                            width: \"10px\"\n                        },\n                        \"::-webkit-scrollbar-track\": {\n                            backgroundColor: \"darkgrey\"\n                        },\n                        \"::-webkit-scrollbar-thumb\": {\n                            backgroundColor: \"#555555\",\n                            boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\"\n                        }\n                    }\n                }\n            }\n        }),\n        [colorScheme]\n    );\n    return {\n        theme,\n        colorScheme,\n        setColorScheme: (newColorScheme: ColorScheme): void => {\n            try {\n                localStorage.setItem(COLOR_SCHEME_KEY, newColorScheme);\n            } catch {\n            }\n            setColorScheme(newColorScheme);\n        }\n    };\n};\n\nexport default useTheme;\n","import { AppBar, createStyles, CssBaseline, Fab, IconButton, makeStyles, Theme, ThemeProvider, Toolbar, Tooltip, Typography, useScrollTrigger, Zoom } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useRef } from \"react\";\nimport useTheme from \"./theme\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        themeToggle: {\n            marginLeft: theme.spacing(5)\n        },\n        grow: {\n            flexGrow: 1\n        },\n        fab: {\n            position: \"fixed\",\n            bottom: theme.spacing(2),\n            right: theme.spacing(2)\n        },\n        children: {\n            overflowX: \"hidden\"\n        }\n    })\n);\n\ninterface LayoutProps {\n    children: React.ReactNode,\n    appBarItems?: React.ReactElement | React.ReactElement[],\n    window?: () => Window,\n};\n\nconst Layout = ({ children, appBarItems, window }: LayoutProps): React.ReactElement => {\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window !== undefined ? window() : undefined\n    });\n\n    const classes = useStyles();\n    const scrollToTopRef = useRef<HTMLDivElement>(null);\n\n    const { theme, colorScheme, setColorScheme } = useTheme();\n    const nextColorScheme = colorScheme === \"dark\" ? \"light\" : \"dark\";\n    const onThemeToggleChange = (): void => setColorScheme(nextColorScheme);\n\n    const appBar = React.cloneElement((\n        <AppBar>\n            <Toolbar>\n                <Typography variant=\"h5\">Nadun De Silva</Typography>\n                <div className={classes.grow} />\n                {appBarItems}\n                <Tooltip title={`Change to ${nextColorScheme} theme`}>\n                    <IconButton className={classes.themeToggle} size=\"small\" onClick={onThemeToggleChange}>\n                        <FontAwesomeIcon icon={nextColorScheme === \"dark\" ? faMoon : faSun} transform={\"grow-4\"}/>\n                    </IconButton>\n                </Tooltip>\n            </Toolbar>\n        </AppBar>\n    ), {\n        elevation: trigger ? 4 : 0\n    });\n\n    const handleClick = (): void => {\n        scrollToTopRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            {appBar}\n            <Toolbar ref={scrollToTopRef}/>\n            <div className={classes.children}>\n                {children}\n            </div>\n            <Zoom in={trigger}>\n                <div onClick={handleClick} role=\"presentation\" className={classes.fab}>\n                    <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\n                        <FontAwesomeIcon icon={faChevronUp}/>\n                    </Fab>\n                </div>\n            </Zoom>\n        </ThemeProvider>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { Link as RouterLink, useLocation } from \"react-router-dom\";\nimport { Breadcrumbs, createStyles, Link, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: theme.spacing(3)\n        }\n    })\n);\n\nconst BREADCRUMBS_MAP: {[key: string]: string} = {\n    \"/certifications\": \"Certification\"\n};\n\nconst RouterBreadcrumbs = (): React.ReactElement | null => {\n    const location = useLocation();\n    const classes = useStyles();\n    const pathnames = location.pathname.split(\"/\").filter((x) => x);\n    return (\n        <Breadcrumbs aria-label=\"breadcrumb\" className={classes.root}\n            separator={<FontAwesomeIcon icon={faChevronRight} transform={\"shrink-4\"}/>}>\n            <Link color=\"inherit\" href=\"/\" to=\"/\" component={RouterLink}>\n                Home\n            </Link>\n            {\n                pathnames.map((value, index) => {\n                    const last = index === pathnames.length - 1;\n                    const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n\n                    return (\n                        last\n                            ? (\n                                <Typography color=\"textPrimary\" key={to}>\n                                    {BREADCRUMBS_MAP[to]}\n                                </Typography>\n                            )\n                            : (\n                                <Link color=\"inherit\" href={to} to={to} component={RouterLink} key={to}>\n                                    {BREADCRUMBS_MAP[to]}\n                                </Link>\n                            )\n                    );\n                })\n            }\n        </Breadcrumbs>\n    );\n};\n\nexport default RouterBreadcrumbs;\n","import React from \"react\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core\";\nimport RouterBreadcrumbs from \"./RouterBreadcrumbs\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const horizontalMargin = (margin: number): { marginLeft: number, marginRight: number } => ({\n        marginLeft: theme.spacing(margin),\n        marginRight: theme.spacing(margin)\n    });\n    return createStyles({\n        content: {\n            marginBottom: theme.spacing(5),\n            [theme.breakpoints.down(\"md\")]: horizontalMargin(0),\n            [theme.breakpoints.up(\"lg\")]: horizontalMargin(30),\n            [theme.breakpoints.up(\"xl\")]: horizontalMargin(60)\n        }\n    });\n});\n\ninterface LayoutContentProps {\n    children: React.ReactNode,\n};\n\nconst LayoutContent = ({ children }: LayoutContentProps): React.ReactElement => {\n    const classes = useStyles();\n    return (\n        <div className={classes.content}>\n            <RouterBreadcrumbs/>\n            {children}\n        </div>\n    );\n};\n\nexport default LayoutContent;\n","import { MutableRefObject, useEffect, useState, useRef } from \"react\";\n\ntype Direction = -1 | 0 | 1;\n\ninterface UseScrollOffsetReturnValue<T> {\n    ref: MutableRefObject<T | null>,\n    direction: Direction,\n    offset: number,\n}\n\nfunction useScrollOffset<T extends Element>(): UseScrollOffsetReturnValue<T> {\n    const ref = useRef<T>(null);\n    const [direction, setDirection] = useState<Direction>(0);\n    const [offset, setOffset] = useState<number>(0);\n\n    const updateOffset = (): void => {\n        if (ref.current !== null) {\n            const refBBox = ref.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight;\n\n            let direction: Direction;\n            let newOffset: number;\n            if (refBBox.top >= viewportHeight) {\n                direction = 1;\n                newOffset = 0;\n            } else if (refBBox.bottom <= 0) {\n                direction = -1;\n                newOffset = 0;\n            } else if (refBBox.top >= viewportHeight / 2) {\n                const fullPageHeight = document.documentElement.offsetHeight;\n                const yOffset = window.pageYOffset;\n                const pageBottomOffset = (yOffset + viewportHeight * 1.5 - fullPageHeight) / (viewportHeight / 2);\n                const clientRectOffset = 2 - refBBox.top / (viewportHeight / 2);\n\n                direction = 1;\n                newOffset = pageBottomOffset > clientRectOffset ? pageBottomOffset : clientRectOffset;\n            } else if (refBBox.bottom <= viewportHeight / 2) {\n                direction = -1;\n                newOffset = (refBBox.bottom) / (viewportHeight / 2);\n            } else {\n                direction = 0;\n                newOffset = 1;\n            }\n            setDirection(direction);\n            setOffset(newOffset);\n        }\n    };\n\n    const handleScroll = (): void => {\n        window.requestAnimationFrame(updateOffset);\n    };\n\n    useEffect(() => {\n        window.requestAnimationFrame(updateOffset);\n        window.addEventListener(\"scroll\", handleScroll);\n        return (): void => window.removeEventListener(\"scroll\", handleScroll);\n    });\n\n    return {\n        ref,\n        direction,\n        offset: Math.min(Math.max(offset, 0), 1)\n    };\n}\n\nexport default useScrollOffset;\n","import Layout from \"./Layout\";\nimport LayoutContent from \"./LayoutContent\";\nimport useScrollOffset from \"./scrolling\";\n\nexport default Layout;\n\nexport {\n    LayoutContent,\n    useScrollOffset\n};\n","export default __webpack_public_path__ + \"static/media/profile-photo.a8a9fc41.jpg\";","import React from \"react\";\nimport { Avatar, createStyles, Divider, Grid, GridSize, Hidden, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport profilePicture from \"../../components/images/profile-photo.jpg\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const descriptionSeparatorMargin = 2;\n    return createStyles({\n        descriptionSeparator: {\n            marginTop: theme.spacing(descriptionSeparatorMargin),\n            marginBottom: theme.spacing(descriptionSeparatorMargin)\n        },\n        profilePhoto: {\n            width: \"100%\",\n            height: \"auto\"\n        },\n        profilePhotoPadding: {\n            padding: theme.spacing(2)\n        },\n        textIcon: {\n            marginRight: theme.spacing(1)\n        },\n        contactInfoItemHeader: {\n            fontWeight: \"bold\"\n        }\n    });\n});\n\nconst AboutMe = (): React.ReactElement => {\n    const classes = useStyles();\n\n    const profilePhoto = (gridWidth: GridSize): React.ReactElement => (\n        <Grid item xs={gridWidth}>\n            <Avatar alt=\"Nadun De Silva\" src={profilePicture} className={classes.profilePhoto}/>\n        </Grid>\n    );\n\n    const contactItem = (name: string, value: string): React.ReactElement => (\n        <Grid item xs={12} md={4}>\n            <Typography className={classes.contactInfoItemHeader}>\n                {name}:\n            </Typography>\n            <Typography>{value}</Typography>\n        </Grid>\n    );\n\n    return (\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            <Hidden mdUp>{profilePhoto(12)}</Hidden>\n            <Grid item xs={12} md={8}>\n                <Typography align={\"justify\"}>\n                    I am currently leading the Observability area of Choreo at WSO2.\n                    I have several years of working experience as a Software Engineer\n                    working on multiple Research &amp; Development projects at WSO2.\n                    I love learning about new technologies and is particularly\n                    interested in Deep Learning.\n                </Typography>\n                <Divider className={classes.descriptionSeparator} />\n                <Typography>Bachelor of Science in Engineering</Typography>\n                <Typography display=\"inline\" color=\"textSecondary\">\n                    <FontAwesomeIcon icon={faMapMarkerAlt} className={classes.textIcon}/>\n                    University of Moratuwa\n                </Typography>\n                <Divider className={classes.descriptionSeparator} />\n                <Grid container spacing={3} justifyContent=\"center\">\n                    {contactItem(\"Phone\", \"+94 778 222 607\")}\n                    {contactItem(\"Email\", \"nadunrds@gmail.com\")}\n                    {contactItem(\"Website\", \"nadundesilva.github.io\")}\n                </Grid>\n            </Grid>\n            <Hidden smDown>{profilePhoto(4)}</Hidden>\n        </Grid>\n    );\n};\n\nexport default AboutMe;\n","export default __webpack_public_path__ + \"static/media/wso2-outstanding-contributor.67e66217.jpg\";","export default __webpack_public_path__ + \"static/media/nasa-space-apps-2017.858edead.jpg\";","export default __webpack_public_path__ + \"static/media/hsbc-youth-enterprise-awards-2015.fe47a5a9.jpg\";","export default __webpack_public_path__ + \"static/media/deans-list-2017.ce693655.jpg\";","export default __webpack_public_path__ + \"static/media/angel-hack-2016.a90988a8.jpg\";","import React from \"react\";\nimport classNames from \"classnames\";\nimport { createStyles, Grid, Hidden, ImageList, ImageListItem, makeStyles, Typography } from \"@material-ui/core\";\nimport wso2OutstandingContributorImage from \"./wso2-outstanding-contributor.jpg\";\nimport nasaSpaceApps2017 from \"./nasa-space-apps-2017.jpg\";\nimport hsbcYouthEnterpriseAwards2015 from \"./hsbc-youth-enterprise-awards-2015.jpg\";\nimport deansList2017 from \"./deans-list-2017.jpg\";\nimport angelHack2016 from \"./angel-hack-2016.jpg\";\nimport { useScrollOffset } from \"../../../components\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        imageListItem: {\n            height: \"auto\"\n        },\n        imageListItemImageContainer: {\n            position: \"relative\",\n            \"&:hover\": {\n                \"& $imageListItemImageOverlay\": {\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n                    zIndex: 1\n                }\n            }\n        },\n        imageListItemImageOverlay: {\n            color: \"#ffffff\",\n            position: \"absolute\",\n            textAlign: \"center\"\n        },\n        imageListItemText: {\n            fontWeight: \"bold\"\n        }\n    })\n);\n\nconst NASA_SPACE_APPS_2017_TITLE = \"Global Finalist - Galactic Impact - NASA Space Apps Challenge 2017\";\nconst PLACEMENTS_IN_DEANS_LIST_TITLE = \"Placements in Dean’s List\";\nconst WSO2_OUTSTANDING_CONTRIBUTOR_TITLE = \"WSO2 Sustained Outstanding Contribution Award\";\nconst HSBC_YOUTH_ENTERPRISE_AWARDS_2015_TITLE = \"Finalist - British Council HSBC Youth Enterprise Awards 2015\";\nconst ANGEL_HACK_2016_TITLE = \"Finalist - Angel Hack 2016\";\n\ninterface AchievementSection {\n    title: string,\n    imageLink: string,\n    animationOffset: number,\n};\n\nconst ROW_HEIGHT = 300;\n\nconst Achievements = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const achievementSections: AchievementSection[] = [\n        {\n            title: NASA_SPACE_APPS_2017_TITLE,\n            imageLink: nasaSpaceApps2017,\n            animationOffset: 0.4\n        },\n        {\n            title: PLACEMENTS_IN_DEANS_LIST_TITLE,\n            imageLink: deansList2017,\n            animationOffset: 0.1\n        },\n        {\n            title: WSO2_OUTSTANDING_CONTRIBUTOR_TITLE,\n            imageLink: wso2OutstandingContributorImage,\n            animationOffset: 0.5\n        },\n        {\n            title: HSBC_YOUTH_ENTERPRISE_AWARDS_2015_TITLE,\n            imageLink: hsbcYouthEnterpriseAwards2015,\n            animationOffset: 0.3\n        },\n        {\n            title: ANGEL_HACK_2016_TITLE,\n            imageLink: angelHack2016,\n            animationOffset: 0.2\n        }\n    ];\n\n    const renderImageListItem = (achievementIndex: number, rowCount: number): React.ReactElement => {\n        const achievementSection: AchievementSection = achievementSections[achievementIndex];\n        const imageOffset = Math.max(offset - achievementSection.animationOffset, 0) / (1 - achievementSection.animationOffset);\n        return (\n            <ImageListItem rows={rowCount} cols={1}\n                className={classNames(classes.imageListItem, classes.imageListItemImageContainer)}\n                style={{\n                    transform: `scale(${imageOffset}, ${imageOffset})`,\n                    opacity: imageOffset\n                }}>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" className={classes.imageListItemImageOverlay}>\n                    <Grid item xs={6}>\n                        <Typography className={classes.imageListItemText}>{achievementSection.title}</Typography>\n                    </Grid>\n                </Grid>\n                <img src={achievementSection.imageLink} alt={achievementSection.title}/>\n            </ImageListItem>\n        );\n    };\n\n    return (\n        <div ref={rootRef}>\n            <Hidden smDown>\n                <ImageList rowHeight={ROW_HEIGHT} cols={3}>\n                    <ImageListItem rows={2} cols={1} className={classes.imageListItem}>\n                        <ImageList rowHeight={ROW_HEIGHT} cols={1}>\n                            {renderImageListItem(0, 1)}\n                            {renderImageListItem(1, 1)}\n                        </ImageList>\n                    </ImageListItem>\n                    {renderImageListItem(2, 2)}\n                    <ImageListItem rows={2} cols={1} className={classes.imageListItem}>\n                        <ImageList rowHeight={ROW_HEIGHT} cols={1}>\n                            {renderImageListItem(3, 1)}\n                            {renderImageListItem(4, 1)}\n                        </ImageList>\n                    </ImageListItem>\n                </ImageList>\n            </Hidden>\n            <Hidden mdUp>\n                <ImageList cols={1}>\n                    {renderImageListItem(0, 1)}\n                    {renderImageListItem(1, 1)}\n                    {renderImageListItem(2, 1)}\n                    {renderImageListItem(3, 1)}\n                    {renderImageListItem(4, 1)}\n                </ImageList>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default Achievements;\n","export default __webpack_public_path__ + \"static/media/ballerina.4da6b50b.svg\";","export default __webpack_public_path__ + \"static/media/ballerina-white.5a1399fd.svg\";","export default __webpack_public_path__ + \"static/media/cellery.a90e1603.svg\";","export default __webpack_public_path__ + \"static/media/cellery-white.797e4d0b.svg\";","export default __webpack_public_path__ + \"static/media/siddhi.29562d9e.svg\";","export default __webpack_public_path__ + \"static/media/siddhi-white.d4a1651e.svg\";","export default __webpack_public_path__ + \"static/media/choreo.93114e74.svg\";","export default __webpack_public_path__ + \"static/media/choreo-white.6c69d815.svg\";","import React from \"react\";\nimport { createStyles, Grid, makeStyles, Theme, useTheme } from \"@material-ui/core\";\nimport ballerina from \"./ballerina.svg\";\nimport ballerinaWhite from \"./ballerina-white.svg\";\nimport cellery from \"./cellery.svg\";\nimport celleryWhite from \"./cellery-white.svg\";\nimport siddhi from \"./siddhi.svg\";\nimport siddhiWhite from \"./siddhi-white.svg\";\nimport choreo from \"./choreo.svg\";\nimport choreoWhite from \"./choreo-white.svg\";\nimport { useScrollOffset } from \"../../../components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        projectLogo: {\n            display: \"block\",\n            margin: \"auto\",\n            padding: theme.spacing(5),\n            width: \"100%\"\n        }\n    })\n);\n\nconst ContributedProjects = (): React.ReactElement => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const renderCarouselItem = (imageLink: string, blackThemeImageLink: string, alt: string): React.ReactElement => (\n        <Grid item xs={12} sm={4} md={3}\n            style={{\n                transform: `scale(${offset}, ${offset})`,\n                opacity: offset\n            }}\n        >\n            <img alt={alt} className={classes.projectLogo}\n                src={theme?.palette?.type === \"light\" ? imageLink : blackThemeImageLink}/>\n        </Grid>\n    );\n\n    return (\n        <Grid ref={rootRef} container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            {renderCarouselItem(choreo, choreoWhite, \"Choreo\")}\n            {renderCarouselItem(ballerina, ballerinaWhite, \"Ballerina\")}\n            {renderCarouselItem(cellery, celleryWhite, \"Cellery\")}\n            {renderCarouselItem(siddhi, siddhiWhite, \"Siddhi\")}\n        </Grid>\n    );\n};\n\nexport default ContributedProjects;\n","export default __webpack_public_path__ + \"static/media/ckad.22557658.png\";","export default __webpack_public_path__ + \"static/media/cka.84076589.png\";","export default __webpack_public_path__ + \"static/media/deep-learning-ai.1db98b8a.png\";","import React from \"react\";\nimport { Card, CardActionArea, CardContent, CardMedia, Chip, createStyles, Grid, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport ckadLogo from \"./ckad.png\";\nimport ckaLogo from \"./cka.png\";\nimport deepLearningAiLogo from \"./deep-learning-ai.png\";\nimport { useScrollOffset } from \"../../../components\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const certificationTypeMargin = theme.spacing(2);\n    return createStyles({\n        certificationCardContainer: {\n            padding: theme.spacing(2)\n        },\n        certificationCard: {\n            height: \"100%\"\n        },\n        certificationImage: {\n            width: \"50%\",\n            height: \"auto\",\n            margin: \"auto\",\n            padding: theme.spacing(2)\n        },\n        certificationIssuer: {\n            marginTop: theme.spacing(2)\n        },\n        certificationType: {\n            marginTop: certificationTypeMargin,\n            marginBottom: certificationTypeMargin\n        }\n    });\n});\n\nconst DEEP_LEARNING_ISSUER = \"Deeplearning.AI\";\nconst LINUX_FOUNDATION = \"Linux Foundation\";\n\ninterface Certificate {\n    name: string,\n    type: \"Course\" | \"Certification\" | \"Specialization\",\n    link: string,\n    image: string,\n    issuer: string,\n};\n\nconst Certifications = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, direction, offset } = useScrollOffset<HTMLDivElement>();\n\n    const certifications: Certificate[] = [\n        {\n            name: \"Build Basic Generative Adversarial Networks (GANs)\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/fed56feb8ba81177e6467779f22c0851\",\n            image: deepLearningAiLogo,\n            issuer: DEEP_LEARNING_ISSUER\n        },\n        {\n            name: \"Deep Learning\",\n            type: \"Specialization\",\n            link: \"https://coursera.org/share/8e5db53bfef4c4b27f79004022edad72\",\n            image: deepLearningAiLogo,\n            issuer: DEEP_LEARNING_ISSUER\n        },\n        {\n            name: \"AI For Everyone\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/e8ae9a481ef41f070d6c7b00887e8b66\",\n            image: deepLearningAiLogo,\n            issuer: DEEP_LEARNING_ISSUER\n        },\n        {\n            name: \"Certificed Kubernetes Administrator\",\n            type: \"Certification\",\n            link: \"https://www.youracclaim.com/badges/8241114b-7435-460a-a08f-9d33304c1470?source=linked_in_profile\",\n            image: ckaLogo,\n            issuer: LINUX_FOUNDATION\n        },\n        {\n            name: \"Certificed Kubernetes Application Developer\",\n            type: \"Certification\",\n            link: \"https://www.youracclaim.com/badges/e9df4128-2017-41c3-9e7d-028e37176243/linked_in_profile\",\n            image: ckadLogo,\n            issuer: LINUX_FOUNDATION\n        }\n    ];\n\n    const generateViewCertificateHandler = (link: string) => (): void => {\n        window.open(link, \"_blank\");\n    };\n\n    const translation = (1 - offset) * 20;\n    return (\n        <Grid ref={rootRef} container justifyContent=\"center\" alignItems=\"stretch\">\n            {\n                certifications.map((certification, index) => (\n                    <Grid item xs={12} sm={6} md={4} xl={3} key={index} className={classes.certificationCardContainer}>\n                        <Card onClick={generateViewCertificateHandler(certification.link)}\n                            className={classes.certificationCard}\n                            style={{\n                                transform: `translateY(${direction === 1 ? translation : -translation}vw) scale(${offset})`,\n                                opacity: offset\n                            }}>\n                            <CardActionArea>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt={certification.name}\n                                    height=\"140\"\n                                    image={certification.image}\n                                    title={certification.name}\n                                    classes={{\n                                        root: classes.certificationImage\n                                    }}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"h6\" component=\"h2\" align=\"center\">\n                                        {certification.name}\n                                    </Typography>\n                                    <Chip label={certification.type} color=\"secondary\" size=\"small\"\n                                        className={classes.certificationType}/>\n                                    <Typography color=\"textSecondary\" className={classes.certificationIssuer}>\n                                        Issued by {certification.issuer}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                    </Grid>\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default Certifications;\n","import React from \"react\";\nimport { createStyles, makeStyles, Paper, Theme, Typography, useMediaQuery, useTheme } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Timeline, TimelineItem, TimelineOppositeContent, TimelineSeparator, TimelineDot, TimelineConnector, TimelineContent } from \"@material-ui/lab\";\nimport { useScrollOffset } from \"../../components\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const instituteIconPadding = 0.5;\n    return createStyles({\n        timeLineItemContent: {\n            padding: theme.spacing(2),\n            marginBottom: theme.spacing(5)\n        },\n        timeLineItemTitle: {\n            fontWeight: \"bold\"\n        },\n        instituteIconRight: {\n            marginLeft: theme.spacing(instituteIconPadding)\n        },\n        instituteIconLeft: {\n            marginRight: theme.spacing(instituteIconPadding)\n        }\n    });\n});\n\ninterface ExperienceItem {\n    name: string,\n    timePeriod: string,\n    description: string,\n    institute: string,\n}\n\nconst Experience = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, offset } = useScrollOffset<Element>();\n    const theme = useTheme();\n    const isTimelineLeftAligned = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const experienceItems: ExperienceItem[] = [\n        {\n            name: \"Associate Technical Lead\",\n            timePeriod: \"June 2021 to Now\",\n            description: \"Lead Choreo Observability Team as well as other Teams in Choreo\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Senior Software Engineer\",\n            timePeriod: \"July 2019 to June 2021\",\n            description: \"Lead Choreo Observability Team in creating the initial PoC as well as the Platform\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Software Engineer\",\n            timePeriod: \"Jan 2018 to July 2019\",\n            description: \"Designed & developed several components in middle-ware & cloud projects\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Google Summer of Code Intern\",\n            timePeriod: \"May 2017 to Sep 2017\",\n            description: \"Designed and implemented a maven plugin for automatically generating documentation for Siddhi extensions using annotated data written in the java code.\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Software Engineering Trainee\",\n            timePeriod: \"July 2016 to Dec 2019\",\n            description: \"Implemented a Notebook prototype for the Data Analytics Server\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        }\n    ];\n    const instituteIcon = <FontAwesomeIcon className={classes.instituteIconLeft} icon={faMapMarkerAlt}/>;\n\n    const translation = (1 - offset) * 20;\n    return (\n        <Timeline ref={rootRef} align={isTimelineLeftAligned ? \"left\" : \"alternate\"}>\n            {\n                experienceItems.map((item: ExperienceItem, index: number) => {\n                    const isOnLeft = isTimelineLeftAligned || index % 2 === 0;\n                    return (\n                        <TimelineItem key={item.name}>\n                            <TimelineOppositeContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {item.timePeriod}\n                                </Typography>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineDot color=\"primary\"/>\n                                <TimelineConnector/>\n                            </TimelineSeparator>\n                            <TimelineContent>\n                                <Paper elevation={3} className={classes.timeLineItemContent}\n                                    style={{\n                                        transform: `translateX(${isOnLeft ? translation : -translation}vw)`,\n                                        opacity: offset\n                                    }}\n                                >\n                                    <Typography variant=\"body1\" component=\"h6\" className={classes.timeLineItemTitle}>\n                                        {item.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        {item.description}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        {isOnLeft && (\n                                            <React.Fragment>{instituteIcon}&nbsp;</React.Fragment>\n                                        )}\n                                        {item.institute}\n                                        {!isOnLeft && (\n                                            <React.Fragment>&nbsp;{instituteIcon}</React.Fragment>\n                                        )}\n                                    </Typography>\n                                </Paper>\n                            </TimelineContent>\n                        </TimelineItem>\n                    );\n                })\n            }\n        </Timeline>\n    );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/fontawesome-common-types\";\nimport { faFacebook, faGithub, faInstagram, faLinkedin, faMedium, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGraduationCap } from \"@fortawesome/free-solid-svg-icons\";\nimport { createStyles, Grid, makeStyles, Theme, Typography } from \"@material-ui/core\";\nimport { useScrollOffset } from \"../../components\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        profileSection: {\n            padding: theme.spacing(4),\n            cursor: \"pointer\",\n            \"&:hover\": {\n                background: theme.palette.type === \"light\" ? \"#cccccc\" : \"#444444\"\n            }\n        },\n        profileIcon: {\n            margin: theme.spacing(1)\n        },\n        profileText: {\n            fontWeight: \"bold\"\n        }\n    })\n);\n\ninterface Profile {\n    name: string,\n    icon: IconDefinition,\n    link: string,\n}\n\nconst Profiles = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const profiles: Profile[] = [\n        {\n            name: \"LinkedIn\",\n            icon: faLinkedin,\n            link: \"https://www.linkedin.com/in/nadundesilva\"\n        },\n        {\n            name: \"GitHub\",\n            icon: faGithub,\n            link: \"https://github.com/nadundesilva\"\n        },\n        {\n            name: \"Medium\",\n            icon: faMedium,\n            link: \"https://medium.com/@nadundesilva\"\n        },\n        {\n            name: \"Google Scholar\",\n            icon: faGraduationCap,\n            link: \"https://scholar.google.com/citations?user=CdXo_YQAAAAJ&hl=en&oi=ao\"\n        },\n        {\n            name: \"Facebook\",\n            icon: faFacebook,\n            link: \"https://www.facebook.com/nadunrds\"\n        },\n        {\n            name: \"Instagram\",\n            icon: faInstagram,\n            link: \"https://www.instagram.com/nadunrds\"\n        },\n        {\n            name: \"Twitter\",\n            icon: faTwitter,\n            link: \"https://twitter.com/nadunrds\"\n        }\n    ];\n\n    const generateOpenLinkHandler = (link: string) => () => {\n        window.open(link, \"_blank\");\n    };\n\n    return (\n        <Grid ref={rootRef} container justifyContent=\"center\" alignItems=\"center\">\n            {\n                profiles.map((profile, index) => (\n                    <Grid item xs={12} sm={3} key={profile.name}\n                        onClick={generateOpenLinkHandler(profile.link)}\n                    >\n                        <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" className={classes.profileSection}\n                            style={{\n                                transform: `scale(${offset}, ${offset})`,\n                                opacity: offset\n                            }}\n                        >\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={profile.icon} size=\"3x\" className={classes.profileIcon}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography className={classes.profileText}>{profile.name}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default Profiles;\n","import React from \"react\";\nimport { createStyles, Grid, LinearProgress, makeStyles, Typography, withStyles } from \"@material-ui/core\";\nimport { useScrollOffset } from \"../../components\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        skillName: {\n            fontWeight: \"bold\"\n        }\n    })\n);\n\nconst BorderLinearProgress = withStyles(() =>\n    createStyles({\n        root: {\n            height: 10,\n            borderRadius: 5\n        },\n        bar: {\n            borderRadius: 5\n        }\n    })\n)(LinearProgress);\n\ninterface Skill {\n    name: string,\n    percentage: number,\n}\n\nconst Skills = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, direction, offset } = useScrollOffset<HTMLDivElement>();\n\n    const leftSideSkills: Skill[] = [\n        {\n            name: \"Programming\",\n            percentage: 90\n        },\n        {\n            name: \"Time-series Analysis\",\n            percentage: 80\n        },\n        {\n            name: \"Databases\",\n            percentage: 85\n        },\n        {\n            name: \"Cloud Computing\",\n            percentage: 80\n        }\n    ];\n    const rightSideSkills: Skill[] = [\n        {\n            name: \"Leadership\",\n            percentage: 80\n        },\n        {\n            name: \"Teamwork\",\n            percentage: 95\n        },\n        {\n            name: \"Communication\",\n            percentage: 95\n        },\n        {\n            name: \"Attention to Detail\",\n            percentage: 90\n        }\n    ];\n\n    const animationOffset = 0.2;\n    const currentOffset = direction === 1 ? Math.min(offset + animationOffset, 1) : 1;\n    const currentOpacity = direction === -1 ? Math.max(offset - animationOffset, 0) / (1 - animationOffset) : 1;\n    const renderPercentage = (skill: Skill): React.ReactElement => (\n        <Grid item xs={12} md={6} style={{ opacity: currentOpacity }}>\n            <Typography className={classes.skillName}>{skill.name}</Typography>\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n                <Grid item xs={8} sm={10}>\n                    <BorderLinearProgress variant=\"determinate\" value={skill.percentage * currentOffset}/>\n                </Grid>\n                <Grid item xs={4} sm={2}>\n                    {skill.percentage} %\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <Grid ref={rootRef} container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            {\n                leftSideSkills.map((leftSideSkill, index) => (\n                    <React.Fragment key={leftSideSkill.name}>\n                        {renderPercentage(leftSideSkill)}\n                        {(index < rightSideSkills.length) ? renderPercentage(rightSideSkills[index]) : null}\n                    </React.Fragment>\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default Skills;\n","export default __webpack_public_path__ + \"static/media/banner.1b97919d.jpg\";","import React from \"react\";\nimport { Button, createStyles, Grid, makeStyles, Theme, Typography, useTheme, useMediaQuery } from \"@material-ui/core\";\nimport banner from \"./banner.jpg\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    return createStyles({\n        bannerContainer: {\n            position: \"relative\",\n            width: \"100%\"\n        },\n        banner: {\n            color: \"#ffffff\",\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            position: \"absolute\",\n            textAlign: \"center\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            padding: \"17vh\"\n        },\n        bannerImage: {\n            width: \"100%\",\n            height: `calc(100vh - ${theme.mixins.toolbar.minHeight ?? 0}px)`,\n            objectFit: \"cover\"\n        },\n        introText: {\n            fontWeight: \"bold\",\n            fontSize: \"6vh\"\n        },\n        tagLineText: {\n            fontSize: \"3vh\"\n        }\n    });\n});\n\nconst WelcomeBanner = (): React.ReactElement => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const isLarge = useMediaQuery(theme.breakpoints.up(\"xl\"));\n    const isMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const downloadButtonSize = isLarge\n        ? \"large\"\n        : (isMedium ? \"medium\" : \"small\");\n\n    const downloadCv = (): void => {\n        window.open(process.env.PUBLIC_URL + \"/nadundesilva-cv.pdf\");\n    };\n\n    return (\n        <div className={classes.bannerContainer}>\n            <Grid container className={classes.banner}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h2\" className={classes.introText}>Hi, I am</Typography>\n                    <Typography variant=\"h2\" className={classes.introText}>Nadun</Typography>\n                    <Typography variant=\"h2\" className={classes.introText}>De Silva</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.tagLineText}>\n                        Associate Technical Lead &amp; Deep Learning Enthusiast\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" size={downloadButtonSize} onClick={downloadCv}>\n                        View CV\n                    </Button>\n                </Grid>\n            </Grid>\n            <img src={banner} alt=\"Nadun De Silva Website Banner\" className={classes.bannerImage}/>\n        </div>\n    );\n};\n\nexport default WelcomeBanner;\n","import React, { useRef } from \"react\";\nimport { Heading, Layout, LayoutContent } from \"../../components\";\nimport AboutMe from \"./AboutMe\";\nimport Achievements from \"./Achievements\";\nimport ContributedProjects from \"./ContributedProjects\";\nimport Certifications from \"./Certifications\";\nimport Experience from \"./Experience\";\nimport Profiles from \"./Profiles\";\nimport Skills from \"./Skills\";\nimport WelcomeBanner from \"./WelcomeBanner\";\nimport { Button, createStyles, Hidden, makeStyles, Theme } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        section: {\n            padding: theme.spacing(1),\n            margin: theme.spacing(5)\n        },\n        sectionContent: {\n            padding: theme.spacing(3)\n        }\n    })\n);\n\ninterface Section {\n    name: string,\n    ref: React.RefObject<HTMLDivElement>,\n    Component: () => React.ReactElement,\n};\n\nconst Home = (): React.ReactElement => {\n    const classes = useStyles();\n\n    const pageSections: Section[] = [\n        {\n            name: \"Experience\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Experience\n        },\n        {\n            name: \"Achievements\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Achievements\n        },\n        {\n            name: \"Skills\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Skills\n        },\n        {\n            name: \"Certifications\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Certifications\n        },\n        {\n            name: \"Profiles\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Profiles\n        },\n        {\n            name: \"Contributed Projects\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: ContributedProjects\n        }\n    ];\n\n    const generateGoToSectionHandler = (sectionRef: React.RefObject<HTMLDivElement>) => () => {\n        sectionRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    };\n    const generateSection = (title: string, section: React.ReactElement): React.ReactElement => (\n        <React.Fragment>\n            <Heading>{title}</Heading>\n            <div className={classes.sectionContent}>{section}</div>\n        </React.Fragment>\n    );\n    return (\n        <Layout appBarItems={\n            <Hidden mdDown>\n                {\n                    pageSections.map((section: Section) => (\n                        <Button key={section.name} variant={\"contained\"} color=\"primary\" disableElevation\n                            onClick={generateGoToSectionHandler(section.ref)}>\n                            {section.name}\n                        </Button>\n                    ))\n                }\n            </Hidden>\n        }>\n            <WelcomeBanner/>\n            <LayoutContent>\n                <div className={classes.section}>\n                    {generateSection(\"About Me\", <AboutMe/>)}\n                </div>\n                <React.Fragment>\n                    {\n                        pageSections.map((section: Section) => (\n                            <div ref={section.ref} className={classes.section} key={section.name}>\n                                {generateSection(section.name, <section.Component/>)}\n                            </div>\n                        ))\n                    }\n                </React.Fragment>\n            </LayoutContent>\n        </Layout>\n    );\n};\n\nexport default Home;\n","import React from \"react\";\nimport Home from \"./Home\";\nimport { BrowserRouter, Redirect, Route, Switch } from \"react-router-dom\";\n\nconst Portal = (): React.ReactElement => {\n    return (\n        <React.Fragment>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact>\n                        <Home/>\n                    </Route>\n                    <Route>\n                        <Redirect to=\"/\" />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </React.Fragment>\n    );\n};\n\nexport default Portal;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Portal from \"./Portal\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Portal/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}