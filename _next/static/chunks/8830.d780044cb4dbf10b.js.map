{"version":3,"file":"static/chunks/8830.d780044cb4dbf10b.js","mappings":"kdAIAA,CAAAA,EAAAC,CAAA,CAAeC,CAAAA,EAAAA,EAAAA,CAAAA,EAA4BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAK,OAAQ,CACtDC,EAAG,kJACL,GAAI,kKCGJC,EAAeH,CAAAA,EAAAA,EAAAA,CAAAA,EAA2BC,CAAAA,EAAAA,EAAAA,GAAAA,EAAK,OAAQ,CACrDC,EAAG,+GACL,GAAI,gCCTG,SAASE,EAAsBC,CAAI,EACxC,MAAOC,CAAAA,EAAAA,EAAAA,EAAAA,EAAqB,YAAaD,EAC3C,CACsBE,CAAAA,EAAAA,EAAAA,CAAAA,EAAuB,YAAa,CAAC,OAAQ,eAAgB,WAAY,UAAW,SAAU,MAAO,WAAW,iBCQtI,IAAMC,EAAoBC,IACxB,GAAM,CACJC,QAAAA,CAAO,CACPC,QAAAA,CAAO,CACPC,aAAAA,CAAY,CACb,CAAGH,EAMJ,MAAOI,CAAAA,EAAAA,EAAAA,CAAAA,EALO,CACZC,KAAM,CAAC,OAAQH,EAASC,GAAgB,eAAe,CACvDG,IAAK,CAAC,MAAM,CACZC,SAAU,CAAC,WAAW,EAEKZ,EAAuBM,EACtD,EACMO,EAAaC,CAAAA,EAAAA,EAAAA,EAAAA,EAAO,MAAO,CAC/BC,KAAM,YACNd,KAAM,OACNe,kBAAmB,CAACC,EAAOC,KACzB,GAAM,CACJb,WAAAA,CAAU,CACX,CAAGY,EACJ,MAAO,CAACC,EAAOR,IAAI,CAAEQ,CAAM,CAACb,EAAWE,OAAO,CAAC,CAAEF,EAAWG,YAAY,EAAIU,EAAOV,YAAY,CAAC,CAEpG,GAAGW,CAAAA,EAAAA,EAAAA,CAAAA,EAAU,OAAC,CACZC,MAAAA,CAAK,CACN,CAAAC,QAAM,CACLC,SAAU,WACVC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,WAAY,EACZC,MAAO,GACPC,OAAQ,GACRC,WAAYT,EAAMU,UAAU,CAACD,UAAU,CACvCE,SAAUX,EAAMU,UAAU,CAACE,OAAO,CAAC,IACnCC,WAAY,EACZC,aAAc,MACdC,SAAU,SACVC,WAAY,OACZC,SAAU,CAAC,CACTpB,MAAO,CACLV,QAAS,SACX,EACA+B,MAAO,CACLJ,aAAc,CAACd,EAAMmB,IAAI,EAAInB,CAAAA,EAAOoB,KAAK,CAACN,YAAY,CAE1D,EAAG,CACDjB,MAAO,CACLV,QAAS,QACX,EACA+B,MAAO,CACLJ,aAAc,CAChB,CACF,EAAG,CACDjB,MAAO,CACLT,aAAc,EAChB,EACA8B,MAAO,CACLG,MAAO,CAACrB,EAAMmB,IAAI,EAAInB,CAAAA,EAAOsB,OAAO,CAACC,UAAU,CAACC,OAAO,CACvD,GAAIxB,EAAMmB,IAAI,CAAG,CACfM,gBAAiBzB,EAAMmB,IAAI,CAACG,OAAO,CAACI,MAAM,CAACC,SAAS,EAClD,CACFF,gBAAiBzB,EAAMsB,OAAO,CAACM,IAAI,CAAC,IAAI,CACxC,GAAG5B,EAAM6B,WAAW,CAAC,OAAQ,CAC3BJ,gBAAiBzB,EAAMsB,OAAO,CAACM,IAAI,CAAC,IAAI,EACxC,CACH,CAEL,EAAE,KAEEE,EAAYpC,CAAAA,EAAAA,EAAAA,EAAAA,EAAO,MAAO,CAC9BC,KAAM,YACNd,KAAM,MACNe,kBAAmB,CAACC,EAAOC,IAAWA,EAAOP,GAAG,GAC/C,CACDgB,MAAO,OACPC,OAAQ,OACRuB,UAAW,SAEXC,UAAW,QAEXX,MAAO,cAEPY,WAAY,GACd,GACMC,EAAiBxC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOf,EAAQ,CACpCgB,KAAM,YACNd,KAAM,WACNe,kBAAmB,CAACC,EAAOC,IAAWA,EAAON,QAAQ,GACpD,CACDe,MAAO,MACPC,OAAQ,KACV,GAgMA,IAAA2B,EAzJ4BC,EAAAA,UAAgB,CAAC,SAAgBC,CAAO,CAAEC,CAAG,EACvE,IAAMzC,EAAQ0C,CAAAA,EAAAA,EAAAA,CAAAA,EAAgB,CAC5B1C,MAAOwC,EACP1C,KAAM,WACR,GACM,CACJ6C,IAAAA,CAAG,CACHC,SAAUC,CAAY,CACtBC,UAAAA,CAAS,CACTC,UAAAA,EAAY,KAAK,CACjBC,MAAAA,EAAQ,CAAC,CAAC,CACVC,UAAAA,EAAY,CAAC,CAAC,CACdC,SAAAA,CAAQ,CACRC,MAAAA,CAAK,CACLC,IAAAA,CAAG,CACHC,OAAAA,CAAM,CACN/D,QAAAA,EAAU,UAAU,CACpB,GAAGgE,EACJ,CAAGtD,EACA4C,EAAW,KAGTW,EAASC,SA5DEpD,CAKlB,KALkB,CACjBqD,YAAAA,CAAW,CACXC,eAAAA,CAAc,CACdN,IAAAA,CAAG,CACHC,OAAAA,CAAM,CACP,CALkBjD,EAMX,CAACmD,EAAQI,EAAU,CAAGpB,EAAAA,QAAc,CAAC,IA8B3C,OA7BAA,EAAAA,SAAe,CAAC,KACd,GAAI,CAACa,GAAO,CAACC,EACX,OAEFM,EAAU,IACV,IAAIC,EAAS,GACPC,EAAQ,IAAIC,MAmBlB,OAlBAD,EAAME,MAAM,CAAG,KACRH,GAGLD,EAAU,SACZ,EACAE,EAAMG,OAAO,CAAG,KACTJ,GAGLD,EAAU,QACZ,EACAE,EAAMJ,WAAW,CAAGA,EACpBI,EAAMH,cAAc,CAAGA,EACvBG,EAAMT,GAAG,CAAGA,EACRC,GACFQ,CAAAA,EAAMI,MAAM,CAAGZ,CAAAA,EAEV,KACLO,EAAS,EACX,CACF,EAAG,CAACH,EAAaC,EAAgBN,EAAKC,EAAO,EACtCE,CACT,EAuB2B,CACvB,GAAGL,CAAQ,CACXE,IAAAA,EACAC,OAAAA,CACF,GACMa,EAASd,GAAOC,EAChBc,EAAmBD,GAAUX,UAAAA,EAC7BnE,EAAa,CACjB,GAAGY,CAAK,CACRT,aAAc,CAAC4E,EACfpB,UAAAA,EACAzD,QAAAA,CACF,CAEA,QAAOF,EAAWA,UAAU,CAC5B,IAAMC,EAAUF,EAAkBC,GAC5B,CAACgF,EAASC,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAQ,MAAO,CAC7CxB,UAAWzD,EAAQK,GAAG,CACtB6E,YAAatC,EACbuC,uBAAwB,CACtBxB,MAAAA,EACAC,UAAW,CACTvD,IAAK,CACH,GAAGwD,CAAQ,CACX,GAAGD,EAAUvD,GAAG,CAEpB,CACF,EACA+E,gBAAiB,CACf9B,IAAAA,EACAS,IAAAA,EACAC,OAAAA,EACAF,MAAAA,CACF,EACA/D,WAAAA,CACF,GAiBA,OAfEwD,EADEuB,EACsBvF,CAAAA,EAAAA,EAAAA,GAAAA,EAAKwF,EAAS,CACpC,GAAGC,CAAY,GAIR,GAAkBxB,IAAAA,EAChBA,EACFqB,GAAUvB,EACRA,CAAG,CAAC,EAAE,CAEO/D,CAAAA,EAAAA,EAAAA,GAAAA,EAAKyD,EAAgB,CAC3CjD,WAAYA,EACZ0D,UAAWzD,EAAQM,QAAQ,GAGXf,CAAAA,EAAAA,EAAAA,GAAAA,EAAKgB,EAAY,CACnC8E,GAAI3B,EACJD,UAAW6B,CAAAA,EAAAA,EAAAA,CAAAA,EAAKtF,EAAQI,IAAI,CAAEqD,GAC9BL,IAAKA,EACL,GAAGa,CAAK,CACRlE,WAAYA,EACZwD,SAAUA,CACZ,EACF,0GC7Me,SAAS0B,EAOxBxE,CAAI,CAAE8E,CAAU,EACd,GAAM,CACJ9B,UAAAA,CAAS,CACTyB,YAAaM,CAAkB,CAC/BzF,WAAAA,CAAU,CACVoF,uBAAAA,CAAsB,CACtBM,kBAAAA,CAAiB,CACjBC,uBAAAA,CAAsB,CACtB,GAAGC,EACJ,CAAGJ,EACE,CACJ7B,UAAWkC,CAAa,CACxBjC,MAAAA,EAAQ,CACN,CAAClD,EAAK,CAAEoF,KAAAA,CACV,CAAC,CACDjC,UAAAA,EAAY,CACV,CAACnD,EAAK,CAAEoF,KAAAA,CACV,CAAC,CACD,GAAG5B,EACJ,CAAGkB,EACED,EAAcvB,CAAK,CAAClD,EAAK,EAAI+E,EAI7BM,EAA0BC,CAAAA,EAAAA,EAAAA,CAAAA,EAAsBnC,CAAS,CAACnD,EAAK,CAAEV,GACjE,CACJY,MAAO,CACL+C,UAAWsC,CAAa,CACxB,GAAGC,EACJ,CACDC,YAAAA,CAAW,CACZ,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,EAAe,CACjB1C,UAAAA,EACA,GAAGkC,CAAkB,CACrBR,uBAAwB1E,SAAAA,EAAkBwD,EAAQ4B,KAAAA,EAClDO,kBAAmBN,CACrB,GACM1C,EAAMiD,CAAAA,EAAAA,EAAAA,CAAAA,EAAWH,EAAaJ,MAAAA,EAAAA,KAAAA,EAAAA,EAAyB1C,GAAG,CAAEmC,EAAWnC,GAAG,EAC1EkD,EAAiBb,EAAoBA,EAAkBQ,GAAe,CAAC,EACvEM,EAAkB,CACtB,GAAGxG,CAAU,CACb,GAAGuG,CAAc,EAEbE,EAAgB/F,SAAAA,EAAkBuF,GAAiBJ,EAAgBI,EACnErF,EAAQ8F,CAAAA,EAAAA,EAAAA,CAAAA,EAAiBvB,EAAa,CAC1C,GAAIzE,SAAAA,GAAmB,CAACmF,GAAiB,CAACjC,CAAK,CAAClD,EAAK,EAAIiF,CAAsB,CAC/E,GAAIjF,SAAAA,GAAmB,CAACkD,CAAK,CAAClD,EAAK,EAAIiF,CAAsB,CAC7D,GAAGO,CAAW,CACd,GAAIO,GAAiB,CACnBnB,GAAImB,CACN,CAAC,CACDpD,IAAAA,CACF,EAAGmD,GAIH,OAHAG,OAAOC,IAAI,CAACL,GAAgBM,OAAO,CAACC,IAClC,OAAOlG,CAAK,CAACkG,EAAS,GAEjB,CAAC3B,EAAavE,EAAM,yDExD7B,IAAAmG,EAZA,SAAA5B,CAAA,CAAA6B,CAAA,CAAAhH,CAAA,SACA,KAAA8F,IAAAX,GDZA,iBCYkDA,EAClD6B,EAEA,CACA,GAAAA,CAAA,CACAhH,WAAA,CACA,GAAAgH,EAAAhH,UAAA,CACA,GAAAA,CAAA,CAEA,CACA,uBCTAX,EAAAC,CAAA,CAVA,SAAA2H,CAAA,CAAAC,EAAA,IACA,GAAAD,KAAAnB,IAAAmB,EACA,SAEA,IAAAE,EAAA,GAIA,OAHAR,OAAAC,IAAA,CAAAK,GAAAG,MAAA,CAAAC,GAAAA,EAAAC,KAAA,iCAAAL,CAAA,CAAAI,EAAA,GAAAH,EAAAK,QAAA,CAAAF,IAAAR,OAAA,CAAAQ,IACAF,CAAA,CAAAE,EAAA,CAAAJ,CAAA,CAAAI,EAAA,GAEAF,CACA,mFCCAK,EAVA,SAAAP,CAAA,EACA,GAAAA,KAAAnB,IAAAmB,EACA,SAEA,IAAAE,EAAA,GAIA,OAHAR,OAAAC,IAAA,CAAAK,GAAAG,MAAA,CAAAC,GAAA,CAAAA,CAAAA,EAAAC,KAAA,iCAAAL,CAAA,CAAAI,EAAA,GAAAR,OAAA,CAAAQ,IACAF,CAAA,CAAAE,EAAA,CAAAJ,CAAA,CAAAI,EAAA,GAEAF,CACA,ECyEAM,EAzEA,SAAAjC,CAAA,EACA,IACAkC,aAAAA,CAAA,CACArC,gBAAAA,CAAA,CACAgB,kBAAAA,CAAA,CACAjB,uBAAAA,CAAA,CACA1B,UAAAA,CAAA,CACA,CAAI8B,EACJ,IAAAkC,EAAA,CAGA,IAAAC,EAA0B,GAAApC,EAAAjG,CAAA,EAAI+F,GAAA3B,UAAAA,EAAA0B,GAAA1B,UAAA2C,GAAA3C,WAC9BkE,EAAA,CACA,GAAAvC,GAAApD,KAAA,CACA,GAAAmD,GAAAnD,KAAA,CACA,GAAAoE,GAAApE,KAAA,EAEArB,EAAA,CACA,GAAAyE,CAAA,CACA,GAAAD,CAAA,CACA,GAAAiB,CAAA,EAQA,OANAsB,EAAAE,MAAA,IACAjH,CAAAA,EAAA8C,SAAA,CAAAiE,CAAA,EAEAhB,OAAAC,IAAA,CAAAgB,GAAAC,MAAA,IACAjH,CAAAA,EAAAqB,KAAA,CAAA2F,CAAA,EAEA,CACAhH,MAAAA,EACAuF,YAAAL,KAAAA,CACA,CACA,CAKA,IAAAgC,EAAwB,GAAAC,EAAAzI,CAAA,EAAoB,CAC5C,GAAA8F,CAAA,CACA,GAAAiB,CAAA,GAEA2B,EAA8CR,EAAiBnB,GAC/D4B,EAAyCT,EAAiBpC,GAC1D8C,EAAAR,EAAAI,GAMAH,EAAwB,GAAApC,EAAAjG,CAAA,EAAI4I,GAAAxE,UAAA2B,GAAA3B,UAAAA,EAAA0B,GAAA1B,UAAA2C,GAAA3C,WAC5BkE,EAAA,CACA,GAAAM,GAAAjG,KAAA,CACA,GAAAoD,GAAApD,KAAA,CACA,GAAAmD,GAAAnD,KAAA,CACA,GAAAoE,GAAApE,KAAA,EAEArB,EAAA,CACA,GAAAsH,CAAA,CACA,GAAA7C,CAAA,CACA,GAAA4C,CAAA,CACA,GAAAD,CAAA,EAQA,OANAL,EAAAE,MAAA,IACAjH,CAAAA,EAAA8C,SAAA,CAAAiE,CAAA,EAEAhB,OAAAC,IAAA,CAAAgB,GAAAC,MAAA,IACAjH,CAAAA,EAAAqB,KAAA,CAAA2F,CAAA,EAEA,CACAhH,MAAAA,EACAuF,YAAA+B,EAAA7E,GAAA,CAEA,uBC9EAhE,EAAAC,CAAA,CANA,SAAA6I,CAAA,CAAAnI,CAAA,CAAAoI,CAAA,QACA,mBAAAD,EACAA,EAAAnI,EAAAoI,GAEAD,CACA,yDCIe,SAAAE,EAAAhF,CAAA,CAAAiF,CAAA,EACf,mBAAAjF,EACAA,EAAAiF,GACIjF,GACJA,CAAAA,EAAAkF,OAAA,CAAAD,CAAA,CAEA,kFCfe,SAAShC,IAAW,QAAAkC,EAAAC,UAAAZ,MAAA,CAAAa,EAAA,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAGD,CAAAA,CAAHC,EAAA,CAAAF,SAAA,CAAAE,EAAO,CAMxC,OAAOxF,EAAAA,OAAa,CAAC,IACnB,EAASyF,KAAK,CAACvF,GAAOA,MAAAA,GACb,KAEFwF,IACLH,EAAK7B,OAAO,CAACxD,IACXgF,CAAAA,EAAAA,EAAAA,CAAAA,EAAOhF,EAAKwF,EACd,EACF,EAGCH,EACL","sources":["webpack://_N_E/./node_modules/@mui/icons-material/esm/LocationCity.js","webpack://_N_E/./node_modules/@mui/material/internal/svg-icons/Person.js","webpack://_N_E/./node_modules/@mui/material/Avatar/avatarClasses.js","webpack://_N_E/./node_modules/@mui/material/Avatar/Avatar.js","webpack://_N_E/./node_modules/@mui/material/utils/useSlot.js","webpack://_N_E/./node_modules/@mui/utils/esm/isHostComponent/isHostComponent.js","webpack://_N_E/./node_modules/@mui/utils/esm/appendOwnerState/appendOwnerState.js","webpack://_N_E/./node_modules/@mui/utils/esm/extractEventHandlers/extractEventHandlers.js","webpack://_N_E/./node_modules/@mui/utils/esm/omitEventHandlers/omitEventHandlers.js","webpack://_N_E/./node_modules/@mui/utils/esm/mergeSlotProps/mergeSlotProps.js","webpack://_N_E/./node_modules/@mui/utils/esm/resolveComponentProps/resolveComponentProps.js","webpack://_N_E/./node_modules/@mui/utils/esm/setRef/setRef.js","webpack://_N_E/./node_modules/@mui/utils/esm/useForkRef/useForkRef.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 11V5l-3-3-3 3v2H3v14h18V11zm-8 8H5v-2h2zm0-4H5v-2h2zm0-4H5V9h2zm6 8h-2v-2h2zm0-4h-2v-2h2zm0-4h-2V9h2zm0-4h-2V5h2zm6 12h-2v-2h2zm0-4h-2v-2h2z\"\n}), 'LocationCity');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAvatarUtilityClass(slot) {\n  return generateUtilityClass('MuiAvatar', slot);\n}\nconst avatarClasses = generateUtilityClasses('MuiAvatar', ['root', 'colorDefault', 'circular', 'rounded', 'square', 'img', 'fallback']);\nexport default avatarClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Person from \"../internal/svg-icons/Person.js\";\nimport { getAvatarUtilityClass } from \"./avatarClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    colorDefault\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, colorDefault && 'colorDefault'],\n    img: ['img'],\n    fallback: ['fallback']\n  };\n  return composeClasses(slots, getAvatarUtilityClass, classes);\n};\nconst AvatarRoot = styled('div', {\n  name: 'MuiAvatar',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.colorDefault && styles.colorDefault];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'relative',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  flexShrink: 0,\n  width: 40,\n  height: 40,\n  fontFamily: theme.typography.fontFamily,\n  fontSize: theme.typography.pxToRem(20),\n  lineHeight: 1,\n  borderRadius: '50%',\n  overflow: 'hidden',\n  userSelect: 'none',\n  variants: [{\n    props: {\n      variant: 'rounded'\n    },\n    style: {\n      borderRadius: (theme.vars || theme).shape.borderRadius\n    }\n  }, {\n    props: {\n      variant: 'square'\n    },\n    style: {\n      borderRadius: 0\n    }\n  }, {\n    props: {\n      colorDefault: true\n    },\n    style: {\n      color: (theme.vars || theme).palette.background.default,\n      ...(theme.vars ? {\n        backgroundColor: theme.vars.palette.Avatar.defaultBg\n      } : {\n        backgroundColor: theme.palette.grey[400],\n        ...theme.applyStyles('dark', {\n          backgroundColor: theme.palette.grey[600]\n        })\n      })\n    }\n  }]\n})));\nconst AvatarImg = styled('img', {\n  name: 'MuiAvatar',\n  slot: 'Img',\n  overridesResolver: (props, styles) => styles.img\n})({\n  width: '100%',\n  height: '100%',\n  textAlign: 'center',\n  // Handle non-square image.\n  objectFit: 'cover',\n  // Hide alt text.\n  color: 'transparent',\n  // Hide the image broken icon, only works on Chrome.\n  textIndent: 10000\n});\nconst AvatarFallback = styled(Person, {\n  name: 'MuiAvatar',\n  slot: 'Fallback',\n  overridesResolver: (props, styles) => styles.fallback\n})({\n  width: '75%',\n  height: '75%'\n});\nfunction useLoaded({\n  crossOrigin,\n  referrerPolicy,\n  src,\n  srcSet\n}) {\n  const [loaded, setLoaded] = React.useState(false);\n  React.useEffect(() => {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n    setLoaded(false);\n    let active = true;\n    const image = new Image();\n    image.onload = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('loaded');\n    };\n    image.onerror = () => {\n      if (!active) {\n        return;\n      }\n      setLoaded('error');\n    };\n    image.crossOrigin = crossOrigin;\n    image.referrerPolicy = referrerPolicy;\n    image.src = src;\n    if (srcSet) {\n      image.srcset = srcSet;\n    }\n    return () => {\n      active = false;\n    };\n  }, [crossOrigin, referrerPolicy, src, srcSet]);\n  return loaded;\n}\nconst Avatar = /*#__PURE__*/React.forwardRef(function Avatar(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAvatar'\n  });\n  const {\n    alt,\n    children: childrenProp,\n    className,\n    component = 'div',\n    slots = {},\n    slotProps = {},\n    imgProps,\n    sizes,\n    src,\n    srcSet,\n    variant = 'circular',\n    ...other\n  } = props;\n  let children = null;\n\n  // Use a hook instead of onError on the img element to support server-side rendering.\n  const loaded = useLoaded({\n    ...imgProps,\n    src,\n    srcSet\n  });\n  const hasImg = src || srcSet;\n  const hasImgNotFailing = hasImg && loaded !== 'error';\n  const ownerState = {\n    ...props,\n    colorDefault: !hasImgNotFailing,\n    component,\n    variant\n  };\n  // This issue explains why this is required: https://github.com/mui/material-ui/issues/42184\n  delete ownerState.ownerState;\n  const classes = useUtilityClasses(ownerState);\n  const [ImgSlot, imgSlotProps] = useSlot('img', {\n    className: classes.img,\n    elementType: AvatarImg,\n    externalForwardedProps: {\n      slots,\n      slotProps: {\n        img: {\n          ...imgProps,\n          ...slotProps.img\n        }\n      }\n    },\n    additionalProps: {\n      alt,\n      src,\n      srcSet,\n      sizes\n    },\n    ownerState\n  });\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/_jsx(ImgSlot, {\n      ...imgSlotProps\n    });\n    // We only render valid children, non valid children are rendered with a fallback\n    // We consider that invalid children are all falsy values, except 0, which is valid.\n  } else if (!!childrenProp || childrenProp === 0) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/_jsx(AvatarFallback, {\n      ownerState: ownerState,\n      className: classes.fallback\n    });\n  }\n  return /*#__PURE__*/_jsx(AvatarRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    ref: ref,\n    ...other,\n    ownerState: ownerState,\n    children: children\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attributes) applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    img: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    img: PropTypes.elementType\n  }),\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The shape of the avatar.\n   * @default 'circular'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rounded', 'square']), PropTypes.string])\n} : void 0;\nexport default Avatar;","'use client';\n\nimport useForkRef from '@mui/utils/useForkRef';\nimport appendOwnerState from '@mui/utils/appendOwnerState';\nimport resolveComponentProps from '@mui/utils/resolveComponentProps';\nimport mergeSlotProps from '@mui/utils/mergeSlotProps';\n/**\n * An internal function to create a Material UI slot.\n *\n * This is an advanced version of Base UI `useSlotProps` because Material UI allows leaf component to be customized via `component` prop\n * while Base UI does not need to support leaf component customization.\n *\n * @param {string} name: name of the slot\n * @param {object} parameters\n * @returns {[Slot, slotProps]} The slot's React component and the slot's props\n *\n * Note: the returned slot's props\n * - will never contain `component` prop.\n * - might contain `as` prop.\n */\nexport default function useSlot(\n/**\n * The slot's name. All Material UI components should have `root` slot.\n *\n * If the name is `root`, the logic behaves differently from other slots,\n * e.g. the `externalForwardedProps` are spread to `root` slot but not other slots.\n */\nname, parameters) {\n  const {\n    className,\n    elementType: initialElementType,\n    ownerState,\n    externalForwardedProps,\n    getSlotOwnerState,\n    internalForwardedProps,\n    ...useSlotPropsParams\n  } = parameters;\n  const {\n    component: rootComponent,\n    slots = {\n      [name]: undefined\n    },\n    slotProps = {\n      [name]: undefined\n    },\n    ...other\n  } = externalForwardedProps;\n  const elementType = slots[name] || initialElementType;\n\n  // `slotProps[name]` can be a callback that receives the component's ownerState.\n  // `resolvedComponentsProps` is always a plain object.\n  const resolvedComponentsProps = resolveComponentProps(slotProps[name], ownerState);\n  const {\n    props: {\n      component: slotComponent,\n      ...mergedProps\n    },\n    internalRef\n  } = mergeSlotProps({\n    className,\n    ...useSlotPropsParams,\n    externalForwardedProps: name === 'root' ? other : undefined,\n    externalSlotProps: resolvedComponentsProps\n  });\n  const ref = useForkRef(internalRef, resolvedComponentsProps?.ref, parameters.ref);\n  const slotOwnerState = getSlotOwnerState ? getSlotOwnerState(mergedProps) : {};\n  const finalOwnerState = {\n    ...ownerState,\n    ...slotOwnerState\n  };\n  const LeafComponent = name === 'root' ? slotComponent || rootComponent : slotComponent;\n  const props = appendOwnerState(elementType, {\n    ...(name === 'root' && !rootComponent && !slots[name] && internalForwardedProps),\n    ...(name !== 'root' && !slots[name] && internalForwardedProps),\n    ...mergedProps,\n    ...(LeafComponent && {\n      as: LeafComponent\n    }),\n    ref\n  }, finalOwnerState);\n  Object.keys(slotOwnerState).forEach(propName => {\n    delete props[propName];\n  });\n  return [elementType, props];\n}","/**\n * Determines if a given element is a DOM element name (i.e. not a React component).\n */\nfunction isHostComponent(element) {\n  return typeof element === 'string';\n}\nexport default isHostComponent;","import isHostComponent from \"../isHostComponent/index.js\";\n\n/**\n * Type of the ownerState based on the type of an element it applies to.\n * This resolves to the provided OwnerState for React components and `undefined` for host components.\n * Falls back to `OwnerState | undefined` when the exact type can't be determined in development time.\n */\n\n/**\n * Appends the ownerState object to the props, merging with the existing one if necessary.\n *\n * @param elementType Type of the element that owns the `existingProps`. If the element is a DOM node or undefined, `ownerState` is not applied.\n * @param otherProps Props of the element.\n * @param ownerState\n */\nfunction appendOwnerState(elementType, otherProps, ownerState) {\n  if (elementType === undefined || isHostComponent(elementType)) {\n    return otherProps;\n  }\n  return {\n    ...otherProps,\n    ownerState: {\n      ...otherProps.ownerState,\n      ...ownerState\n    }\n  };\n}\nexport default appendOwnerState;","/**\n * Extracts event handlers from a given object.\n * A prop is considered an event handler if it is a function and its name starts with `on`.\n *\n * @param object An object to extract event handlers from.\n * @param excludeKeys An array of keys to exclude from the returned object.\n */\nfunction extractEventHandlers(object, excludeKeys = []) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => prop.match(/^on[A-Z]/) && typeof object[prop] === 'function' && !excludeKeys.includes(prop)).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default extractEventHandlers;","/**\n * Removes event handlers from the given object.\n * A field is considered an event handler if it is a function with a name beginning with `on`.\n *\n * @param object Object to remove event handlers from.\n * @returns Object with event handlers removed.\n */\nfunction omitEventHandlers(object) {\n  if (object === undefined) {\n    return {};\n  }\n  const result = {};\n  Object.keys(object).filter(prop => !(prop.match(/^on[A-Z]/) && typeof object[prop] === 'function')).forEach(prop => {\n    result[prop] = object[prop];\n  });\n  return result;\n}\nexport default omitEventHandlers;","import clsx from 'clsx';\nimport extractEventHandlers from \"../extractEventHandlers/index.js\";\nimport omitEventHandlers from \"../omitEventHandlers/index.js\";\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on a Base UI component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `slotProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nfunction mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n    const mergedStyle = {\n      ...additionalProps?.style,\n      ...externalForwardedProps?.style,\n      ...externalSlotProps?.style\n    };\n    const props = {\n      ...additionalProps,\n      ...externalForwardedProps,\n      ...externalSlotProps\n    };\n    if (joinedClasses.length > 0) {\n      props.className = joinedClasses;\n    }\n    if (Object.keys(mergedStyle).length > 0) {\n      props.style = mergedStyle;\n    }\n    return {\n      props,\n      internalRef: undefined\n    };\n  }\n\n  // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n  const eventHandlers = extractEventHandlers({\n    ...externalForwardedProps,\n    ...externalSlotProps\n  });\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n\n  // The order of classes is important here.\n  // Emotion (that we use in libraries consuming Base UI) depends on this order\n  // to properly override style. It requires the most important classes to be last\n  // (see https://github.com/mui/material-ui/pull/33205) for the related discussion.\n  const joinedClasses = clsx(internalSlotProps?.className, additionalProps?.className, className, externalForwardedProps?.className, externalSlotProps?.className);\n  const mergedStyle = {\n    ...internalSlotProps?.style,\n    ...additionalProps?.style,\n    ...externalForwardedProps?.style,\n    ...externalSlotProps?.style\n  };\n  const props = {\n    ...internalSlotProps,\n    ...additionalProps,\n    ...otherPropsWithoutEventHandlers,\n    ...componentsPropsWithoutEventHandlers\n  };\n  if (joinedClasses.length > 0) {\n    props.className = joinedClasses;\n  }\n  if (Object.keys(mergedStyle).length > 0) {\n    props.style = mergedStyle;\n  }\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}\nexport default mergeSlotProps;","/**\n * If `componentProps` is a function, calls it with the provided `ownerState`.\n * Otherwise, just returns `componentProps`.\n */\nfunction resolveComponentProps(componentProps, ownerState, slotState) {\n  if (typeof componentProps === 'function') {\n    return componentProps(ownerState, slotState);\n  }\n  return componentProps;\n}\nexport default resolveComponentProps;","/**\n * TODO v5: consider making it private\n *\n * passes {value} to {ref}\n *\n * WARNING: Be sure to only call this inside a callback that is passed as a ref.\n * Otherwise, make sure to cleanup the previous {ref} if it changes. See\n * https://github.com/mui/material-ui/issues/13539\n *\n * Useful if you want to expose the ref of an inner component to the public API\n * while still using it inside the component.\n * @param ref A ref callback or ref object. If anything falsy, this is a no-op.\n */\nexport default function setRef(ref, value) {\n  if (typeof ref === 'function') {\n    ref(value);\n  } else if (ref) {\n    ref.current = value;\n  }\n}","'use client';\n\nimport * as React from 'react';\nimport setRef from \"../setRef/index.js\";\nexport default function useForkRef(...refs) {\n  /**\n   * This will create a new function if the refs passed to this hook change and are all defined.\n   * This means react will call the old forkRef with `null` and the new forkRef\n   * with the ref. Cleanup naturally emerges from this behavior.\n   */\n  return React.useMemo(() => {\n    if (refs.every(ref => ref == null)) {\n      return null;\n    }\n    return instance => {\n      refs.forEach(ref => {\n        setRef(ref, instance);\n      });\n    };\n    // TODO: uncomment once we enable eslint-plugin-react-compiler // eslint-disable-next-line react-compiler/react-compiler -- intentionally ignoring that the dependency array must be an array literal\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, refs);\n}"],"names":["__webpack_exports__","Z","createSvgIcon","_jsx","d","Person","getAvatarUtilityClass","slot","generateUtilityClass","generateUtilityClasses","useUtilityClasses","ownerState","classes","variant","colorDefault","composeClasses","root","img","fallback","AvatarRoot","styled","name","overridesResolver","props","styles","memoTheme","theme","param","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","variants","style","vars","shape","color","palette","background","default","backgroundColor","Avatar","defaultBg","grey","applyStyles","AvatarImg","textAlign","objectFit","textIndent","AvatarFallback","Avatar_Avatar","React","inProps","ref","useDefaultProps","alt","children","childrenProp","className","component","slots","slotProps","imgProps","sizes","src","srcSet","other","loaded","useLoaded","crossOrigin","referrerPolicy","setLoaded","active","image","Image","onload","onerror","srcset","hasImg","hasImgNotFailing","ImgSlot","imgSlotProps","useSlot","elementType","externalForwardedProps","additionalProps","as","clsx","parameters","initialElementType","getSlotOwnerState","internalForwardedProps","useSlotPropsParams","rootComponent","undefined","resolvedComponentsProps","resolveComponentProps","slotComponent","mergedProps","internalRef","mergeSlotProps","externalSlotProps","useForkRef","slotOwnerState","finalOwnerState","LeafComponent","appendOwnerState","Object","keys","forEach","propName","appendOwnerState_appendOwnerState","otherProps","object","excludeKeys","result","filter","prop","match","includes","omitEventHandlers_omitEventHandlers","mergeSlotProps_mergeSlotProps","getSlotProps","joinedClasses","mergedStyle","length","eventHandlers","extractEventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","componentProps","slotState","setRef","value","current","_len","arguments","refs","_key","every","instance"],"sourceRoot":""}