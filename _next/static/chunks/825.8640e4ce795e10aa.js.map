{"version":3,"file":"static/chunks/825.8640e4ce795e10aa.js","mappings":"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","sources":["webpack://_N_E/./app/(home)/_content/sections/Experience.tsx","webpack://_N_E/./components/layout/Layout.tsx","webpack://_N_E/./components/layout/RouterBreadcrumbs.tsx","webpack://_N_E/./components/layout/index.tsx","webpack://_N_E/./components/layout/scrolling.tsx","webpack://_N_E/./constants/metadata.ts","webpack://_N_E/./constants/routes.ts"],"sourcesContent":["/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport { LocationCity } from \"@mui/icons-material\";\nimport {\n    Timeline,\n    TimelineItem,\n    TimelineOppositeContent,\n    TimelineSeparator,\n    TimelineDot,\n    TimelineConnector,\n    TimelineContent,\n} from \"@mui/lab\";\nimport {\n    Card,\n    Slide,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@mui/material\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\n\ninterface ExperienceItem {\n    name: string;\n    timePeriod: string;\n    description: string;\n    institute: string;\n}\n\nconst Experience = (): React.ReactElement => {\n    const { ref: rootRef, offset } = useScrollOffset<HTMLUListElement>();\n    const theme = useTheme();\n    const isTimelineLeftAligned = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const experienceItems: ExperienceItem[] = [\n        {\n            name: \"Senior Software Engineer\",\n            timePeriod: \"Nov 2022 to Now\",\n            description: \"Joined as a Senior Software Engineer at Orion Health\",\n            institute: \"Orion Health, Auckland, New Zealand\",\n        },\n        {\n            name: \"Associate Technical Lead\",\n            timePeriod: \"June 2021 to Nov 2022\",\n            description:\n                \"Lead Choreo Observability Team as well as other Teams in Choreo\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Senior Software Engineer\",\n            timePeriod: \"July 2019 to June 2021\",\n            description:\n                \"Lead Choreo Observability Team in creating the initial PoC as well as the Platform\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Software Engineer\",\n            timePeriod: \"Jan 2018 to July 2019\",\n            description:\n                \"Designed & developed several components in middle-ware & cloud projects\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Google Summer of Code Intern\",\n            timePeriod: \"May 2017 to Sep 2017\",\n            description:\n                \"Designed and implemented a maven plugin for automatically generating documentation for Siddhi extensions using annotated data written in the java code.\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Software Engineering Trainee\",\n            timePeriod: \"July 2016 to Dec 2019\",\n            description:\n                \"Implemented a Notebook prototype for the Data Analytics Server\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n    ];\n    const locationIcon = <LocationCity />;\n\n    return (\n        <Timeline\n            ref={rootRef}\n            position={isTimelineLeftAligned ? \"left\" : \"alternate\"}\n        >\n            {experienceItems.map((item: ExperienceItem, index: number) => {\n                const isOnLeft = isTimelineLeftAligned || index % 2 === 0;\n                return (\n                    <TimelineItem key={item.timePeriod}>\n                        <TimelineOppositeContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {item.timePeriod}\n                            </Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Slide\n                                direction={isOnLeft ? \"left\" : \"right\"}\n                                in={offset > 0.5}\n                                timeout={1000}\n                            >\n                                <Card\n                                    elevation={3}\n                                    sx={{ padding: 2, mb: 5 }}\n                                    raised\n                                >\n                                    <Typography\n                                        variant=\"body1\"\n                                        component=\"h2\"\n                                        sx={{ fontWeight: \"bold\" }}\n                                    >\n                                        {item.name}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                    >\n                                        {item.description}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                    >\n                                        {isOnLeft && (\n                                            <React.Fragment>\n                                                {locationIcon}{\" \"}\n                                            </React.Fragment>\n                                        )}\n                                        {item.institute}\n                                        {!isOnLeft && (\n                                            <React.Fragment>\n                                                {\" \"}\n                                                {locationIcon}\n                                            </React.Fragment>\n                                        )}\n                                    </Typography>\n                                </Card>\n                            </Slide>\n                        </TimelineContent>\n                    </TimelineItem>\n                );\n            })}\n        </Timeline>\n    );\n};\n\nexport default Experience;\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport {\n    DarkMode,\n    KeyboardArrowUp,\n    LightMode,\n    Menu as MenuIcon,\n} from \"@mui/icons-material\";\nimport {\n    AppBar,\n    Box,\n    Button,\n    Container,\n    Drawer,\n    Fab,\n    IconButton,\n    List,\n    ListItemButton,\n    ListItemText,\n    Toolbar,\n    Tooltip,\n    Typography,\n    useScrollTrigger,\n    Zoom,\n} from \"@mui/material\";\nimport { useColorScheme } from \"@mui/material/styles\";\nimport Link from \"next/link\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { FULL_NAME } from \"@/constants/metadata\";\nimport { Routes } from \"@/constants/routes\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps): React.ReactElement | null => {\n    const [windowObject, setWindowObject] = useState<Window | undefined>(\n        undefined,\n    );\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            setWindowObject(window);\n        }\n    }, []);\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: windowObject,\n    });\n\n    const scrollToTopRef = useRef<HTMLDivElement>(null);\n\n    const [isDrawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const toggleDrawer = (): void => {\n        setDrawerOpen(!isDrawerOpen);\n    };\n\n    const { colorScheme, setColorScheme } = useColorScheme();\n    const nextColorScheme = colorScheme === \"light\" ? \"dark\" : \"light\";\n\n    const drawer = (\n        <React.Fragment>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                edge=\"start\"\n                sx={{\n                    mr: 2,\n                    display: {\n                        xs: \"block\",\n                        md: \"none\",\n                    },\n                }}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer anchor={\"top\"} open={isDrawerOpen} onClose={toggleDrawer}>\n                <Box\n                    sx={{ width: \"auto\" }}\n                    onClick={toggleDrawer}\n                    onKeyDown={toggleDrawer}\n                >\n                    <List>\n                        {Object.values(Routes).map((route) => (\n                            <Link key={route.path} href={route.path} passHref>\n                                <ListItemButton sx={{ pl: { xs: 2, md: 5 } }}>\n                                    <ListItemText primary={route.name} />\n                                </ListItemButton>\n                            </Link>\n                        ))}\n                    </List>\n                </Box>\n            </Drawer>\n        </React.Fragment>\n    );\n\n    const appBar = React.cloneElement(\n        <AppBar data-testid={\"app-bar\"}>\n            <Toolbar>\n                {drawer}\n                <Typography sx={{ fontSize: 23 }}>{FULL_NAME}</Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"block\" } }}>\n                    {Object.values(Routes).map((route) => (\n                        <Link\n                            key={route.path}\n                            href={route.path}\n                            passHref={true}\n                        >\n                            <Button\n                                variant=\"text\"\n                                color=\"primary\"\n                                disableElevation\n                                sx={{ color: \"#ffffff\", pl: 2 }}\n                            >\n                                {route.name}\n                            </Button>\n                        </Link>\n                    ))}\n                </Box>\n                <Tooltip title={`Change to ${nextColorScheme} theme`}>\n                    <IconButton\n                        sx={{ ml: 5 }}\n                        size=\"small\"\n                        onClick={() => setColorScheme(nextColorScheme)}\n                    >\n                        {nextColorScheme === \"dark\" ? (\n                            <DarkMode />\n                        ) : (\n                            <LightMode />\n                        )}\n                    </IconButton>\n                </Tooltip>\n            </Toolbar>\n        </AppBar>,\n        {\n            elevation: trigger ? 4 : 0,\n        },\n    );\n\n    const handleClick = (): void => {\n        scrollToTopRef.current?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n        });\n    };\n\n    return colorScheme ? (\n        <React.Fragment>\n            {appBar}\n            <Toolbar ref={scrollToTopRef} />\n            <Container\n                maxWidth={false}\n                disableGutters\n                sx={{ overflowX: \"hidden\" }}\n            >\n                {children}\n            </Container>\n            <Container\n                maxWidth={false}\n                sx={{\n                    textAlign: \"center\",\n                    paddingTop: 10,\n                    paddingBottom: 5,\n                    color: \"#666666\",\n                }}\n            >\n                &copy; 2021 {FULL_NAME}\n            </Container>\n            <Zoom in={trigger}>\n                <Box\n                    onClick={handleClick}\n                    role=\"presentation\"\n                    sx={{\n                        position: \"fixed\",\n                        bottom: 10,\n                        right: 10,\n                    }}\n                >\n                    <Fab\n                        color=\"primary\"\n                        size=\"small\"\n                        aria-label=\"scroll back to top\"\n                    >\n                        <KeyboardArrowUp />\n                    </Fab>\n                </Box>\n            </Zoom>\n        </React.Fragment>\n    ) : null;\n};\n\nexport default Layout;\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport { KeyboardArrowRight } from \"@mui/icons-material\";\nimport { Breadcrumbs, Typography } from \"@mui/material\";\nimport type { Route as NextRoute } from \"next\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport React from \"react\";\n\nimport { Routes, type Route } from \"@/constants/routes\";\n\nconst RouterBreadcrumbs = (): React.ReactElement | null => {\n    const pathname = usePathname();\n    const pathnames =\n        pathname == null ? [] : pathname.split(\"/\").filter((x) => x);\n\n    const breadcrumbs: Array<{ name: string; path?: NextRoute<string> }> = [\n        {\n            name: \"Home\",\n            path: pathnames.length > 0 ? \"/\" : undefined,\n        },\n    ];\n    if (pathnames.length > 0) {\n        const visitRoutes = (\n            currentRoutes: Record<string, Route>,\n            currentPathnames: string[],\n            currentBasePath: string,\n        ): void => {\n            if (currentPathnames.length > 0) {\n                const currentSubPath =\n                    currentBasePath + \"/\" + currentPathnames[0];\n                if (currentSubPath in currentRoutes) {\n                    const route = currentRoutes[currentSubPath];\n                    if (currentPathnames.length > 1) {\n                        breadcrumbs.push({\n                            name: route.name,\n                            path: currentSubPath as NextRoute<string>,\n                        });\n                        if (route.subRoutes !== undefined) {\n                            visitRoutes(\n                                route.subRoutes,\n                                currentPathnames.slice(1),\n                                currentSubPath,\n                            );\n                        }\n                    } else {\n                        breadcrumbs.push({\n                            name: route.name,\n                        });\n                    }\n                }\n            }\n        };\n        visitRoutes(Routes, pathnames, \"\");\n    }\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{ margin: 3 }}\n            separator={<KeyboardArrowRight />}\n        >\n            {breadcrumbs.map((breadcrumb) => {\n                return breadcrumb.path === undefined ? (\n                    <Typography color=\"textPrimary\" key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Typography>\n                ) : (\n                    <Link passHref href={breadcrumb.path} key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Link>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n\nexport default RouterBreadcrumbs;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport Layout from \"./Layout\";\nimport RouterBreadcrumbs from \"./RouterBreadcrumbs\";\nimport useScrollOffset from \"./scrolling\";\n\nexport default Layout;\n\nexport { RouterBreadcrumbs, useScrollOffset };\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport { type MutableRefObject, useEffect, useState, useRef } from \"react\";\n\n// -1 -> div partially or completely above viewport\n//  0 -> div visible in viewport\n//  1 -> div partially or completely below viewport\ntype Direction = -1 | 0 | 1;\n\ninterface UseScrollOffsetReturnValue<T> {\n    ref: MutableRefObject<T | null>;\n    direction: Direction;\n    offset: number;\n}\n\nfunction useScrollOffset<T extends Element>(): UseScrollOffsetReturnValue<T> {\n    const ref = useRef<T>(null);\n    const [direction, setDirection] = useState<Direction>(0);\n    const [offset, setOffset] = useState<number>(0);\n\n    const updateOffset = (): void => {\n        if (ref.current !== null) {\n            const refBBox = ref.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight;\n\n            let direction: Direction;\n            let newOffset: number;\n            if (refBBox.top >= viewportHeight) {\n                direction = 1;\n                newOffset = 0;\n            } else if (refBBox.bottom <= 0) {\n                direction = -1;\n                newOffset = 0;\n            } else if (refBBox.top > viewportHeight / 2) {\n                const fullPageHeight = document.documentElement.offsetHeight;\n                const yOffset = window.scrollY;\n                const pageBottomOffset =\n                    (yOffset + viewportHeight * 1.5 - fullPageHeight) /\n                    (viewportHeight / 2);\n                const clientRectOffset = 2 - refBBox.top / (viewportHeight / 2);\n\n                direction = 1;\n                newOffset = Math.max(pageBottomOffset, clientRectOffset);\n            } else if (refBBox.bottom < viewportHeight / 2) {\n                direction = -1;\n                newOffset = refBBox.bottom / (viewportHeight / 2);\n            } else {\n                direction = 0;\n                newOffset = 1;\n            }\n            setDirection(direction);\n            setOffset(newOffset);\n        } else {\n            setDirection(0);\n            setOffset(0);\n        }\n    };\n\n    const handleScroll = (): void => {\n        window.requestAnimationFrame(updateOffset);\n    };\n\n    useEffect(() => {\n        window.requestAnimationFrame(updateOffset);\n        window.addEventListener(\"scroll\", handleScroll);\n        return (): void => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    });\n\n    return {\n        ref,\n        direction,\n        offset: Math.min(Math.max(offset, 0), 1),\n    };\n}\n\nexport default useScrollOffset;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2024 Nadun De Silva. All rights reserved.\n */\n\nexport const FULL_NAME = \"Nadun De Silva\";\nexport const MAIN_DESCRIPTION = `${FULL_NAME} is an aspiring Software Engineer interested in Deep Learning, Observability, Anomaly Detection &amp; Cloud Technologies.`;\n\nconst unsanitizedWebsiteUrl =\n    process.env.PUBLIC_URL ?? \"https://nadundesilva.github.io\";\nexport const WEBSITE_PUBLIC_URL = unsanitizedWebsiteUrl.endsWith(\"/\")\n    ? unsanitizedWebsiteUrl.substring(0, unsanitizedWebsiteUrl.length - 1)\n    : unsanitizedWebsiteUrl;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport type { Route as NextRoute } from \"next\";\n\n/*\n * Internal model for type safety starts here\n */\n\ninterface _Route {\n    name: string;\n    path: NextRoute<string>;\n    subRoutes?: _Route[];\n}\n\nconst _Routes: _Route[] = [\n    {\n        name: \"Experience\",\n        path: \"/experience\",\n    },\n    {\n        name: \"Achievements\",\n        path: \"/achievements\",\n    },\n    {\n        name: \"Projects\",\n        path: \"/projects\",\n        subRoutes: [\n            {\n                name: \"Personal Projects\",\n                path: \"/projects/personal\",\n            },\n        ],\n    },\n    {\n        name: \"Testimonials\",\n        path: \"/testimonials\",\n    },\n    {\n        name: \"Blog Articles\",\n        path: \"/blog-articles\",\n    },\n    {\n        name: \"Education\",\n        path: \"/education\",\n        subRoutes: [\n            {\n                name: \"Certifications\",\n                path: \"/education/certifications\",\n            },\n        ],\n    },\n];\n\n/*\n * Internal model for type safety ends here\n */\n\nexport interface Route {\n    name: string;\n    path: NextRoute<string>;\n    subRoutes?: Record<string, Route>;\n}\n\nconst buildRoutes = (currentRoutes: _Route[]): Record<string, Route> => {\n    const routesMap: Record<string, Route> = {};\n    currentRoutes.forEach((route) => {\n        routesMap[route.path] = {\n            name: route.name,\n            path: route.path,\n            subRoutes:\n                route.subRoutes === undefined\n                    ? undefined\n                    : buildRoutes(route.subRoutes),\n        };\n    });\n    return routesMap;\n};\n\nexport const Routes: Record<string, Route> = buildRoutes(_Routes);\n"],"names":["__webpack_exports__","ref","rootRef","offset","useScrollOffset","theme","useTheme","isTimelineLeftAligned","useMediaQuery","breakpoints","down","locationIcon","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","LocationCity","Timeline","position","experienceItems","name","timePeriod","description","institute","map","item","index","isOnLeft","jsxs","TimelineItem","TimelineOppositeContent","Typography","variant","color","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","Slide","direction","in","timeout","Card","elevation","sx","padding","mb","raised","component","fontWeight","React","children","param","windowObject","setWindowObject","useState","undefined","useEffect","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","scrollToTopRef","useRef","isDrawerOpen","setDrawerOpen","toggleDrawer","colorScheme","setColorScheme","useColorScheme","nextColorScheme","drawer","IconButton","aria-label","onClick","edge","mr","display","xs","md","MenuIcon","Drawer","anchor","open","onClose","Box","width","onKeyDown","List","Object","values","Routes","Link","href","route","path","passHref","ListItemButton","pl","ListItemText","primary","appBar","AppBar","data-testid","Toolbar","fontSize","FULL_NAME","flexGrow","Button","disableElevation","Tooltip","title","concat","ml","size","DarkMode","LightMode","Container","maxWidth","disableGutters","overflowX","textAlign","paddingTop","paddingBottom","Zoom","current","scrollIntoView","behavior","block","role","bottom","right","Fab","KeyboardArrowUp","pathname","usePathname","pathnames","split","filter","x","breadcrumbs","length","visitRoutes","currentRoutes","currentPathnames","currentBasePath","currentSubPath","push","subRoutes","slice","Breadcrumbs","margin","separator","KeyboardArrowRight","breadcrumb","setDirection","setOffset","updateOffset","newOffset","refBBox","getBoundingClientRect","viewportHeight","innerHeight","top","fullPageHeight","document","documentElement","offsetHeight","yOffset","scrollY","clientRectOffset","Math","max","handleScroll","requestAnimationFrame","addEventListener","removeEventListener","min","process","unsanitizedWebsiteUrl","env","PUBLIC_URL","WEBSITE_PUBLIC_URL","endsWith","substring","buildRoutes","routesMap","forEach"],"sourceRoot":""}