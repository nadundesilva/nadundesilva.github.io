{"version":3,"file":"static/chunks/pages/blog-5e05e7870a821776.js","mappings":"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","sources":["webpack://_N_E/./components/layout/BlogPostLayout.tsx","webpack://_N_E/./constants/routes.tsx","webpack://_N_E/./components/layout/Layout.tsx","webpack://_N_E/./components/layout/RouterBreadcrumbs.tsx","webpack://_N_E/./components/layout/LayoutContent.tsx","webpack://_N_E/./components/layout/scrolling.tsx","webpack://_N_E/./components/layout/index.tsx","webpack://_N_E/./pages/blog/index.tsx","webpack://_N_E/?2cc4"],"sourcesContent":["/*\n * Copyright (c) 2022, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Typography, Container } from \"@mui/material\";\nimport Head from \"next/head\";\nimport Image from \"next/image\";\n\nimport Layout, { LayoutContent } from \"@/components/layout\";\nimport { ImageAssertFromSource } from \"@/constants/images\";\n\ninterface BlogPostTitleProps {\n    children: React.ReactNode;\n}\n\nconst BlogPostTitle = ({\n    children,\n}: BlogPostTitleProps): React.ReactElement => (\n    <Typography\n        variant=\"h3\"\n        component=\"h1\"\n        sx={{ pt: 2, fontWeight: \"bold\", fontSize: 35 }}\n    >\n        {children}\n    </Typography>\n);\n\nexport interface BlogPostMetadata {\n    title: string;\n    description: string;\n    publishedDate: string;\n    mainImage: ImageAssertFromSource;\n}\n\ninterface BlogPostLayoutProps {\n    metadata: BlogPostMetadata;\n    children: React.ReactNode;\n}\n\nconst BlogPostLayout = ({\n    children,\n    metadata,\n}: BlogPostLayoutProps): React.ReactElement => (\n    <Container maxWidth={false} disableGutters>\n        <Head>\n            <title>{metadata.title}</title>\n        </Head>\n\n        <Layout>\n            <LayoutContent>\n                <BlogPostTitle>{metadata.title}</BlogPostTitle>\n                <Container\n                    sx={{ position: \"relative\", height: 400, my: 2 }}\n                    disableGutters\n                >\n                    <Image\n                        layout=\"fill\"\n                        objectFit=\"cover\"\n                        src={metadata.mainImage.src}\n                        alt={metadata.mainImage.alt}\n                        placeholder=\"blur\"\n                        blurDataURL={metadata.mainImage.blurDataURL}\n                    />\n                </Container>\n                {children}\n            </LayoutContent>\n        </Layout>\n    </Container>\n);\n\nexport default BlogPostLayout;\n","/*\n * Copyright (c) 2022, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport interface Route {\n    name: string;\n    subRoutes?: { [key: string]: Route };\n}\n\nexport const ANY_ROUTE = \"*\";\n\nexport const Routes: { [key: string]: Route } = {\n    \"/experience\": {\n        name: \"Experience\",\n    },\n    \"/achievements\": {\n        name: \"Achievements\",\n    },\n    \"/education\": {\n        name: \"Education\",\n        subRoutes: {\n            \"/certifications\": {\n                name: \"Certifications\",\n            },\n        },\n    },\n    \"/blog\": {\n        name: \"Blog\",\n        subRoutes: {\n            [ANY_ROUTE]: {\n                name: \"Post\",\n            },\n        },\n    },\n};\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { faChevronUp, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Menu as MenuIcon } from \"@mui/icons-material\";\nimport {\n    AppBar,\n    Box,\n    Button,\n    Container,\n    Drawer,\n    Fab,\n    IconButton,\n    List,\n    ListItem,\n    ListItemText,\n    Toolbar,\n    Tooltip,\n    Typography,\n    useScrollTrigger,\n    Zoom,\n} from \"@mui/material\";\nimport Link from \"next/link\";\nimport React, { useRef } from \"react\";\n\nimport { useWebsiteTheme } from \"./theme\";\nimport { Routes } from \"@/constants/routes\";\n\ninterface LayoutProps {\n    children: NonNullable<React.ReactNode>;\n    window?: () => Window;\n}\n\nconst Layout = ({ children, window }: LayoutProps): React.ReactElement => {\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window !== undefined ? window() : undefined,\n    });\n\n    const scrollToTopRef = useRef<HTMLDivElement>(null);\n\n    const [isDrawerOpen, setDrawerOpen] = React.useState<boolean>(false);\n    const toggleDrawer = (): void => setDrawerOpen(!isDrawerOpen);\n\n    const { colorScheme, setColorScheme } = useWebsiteTheme();\n    const nextColorScheme = colorScheme === \"dark\" ? \"light\" : \"dark\";\n    const onThemeToggleChange = (): void => setColorScheme(nextColorScheme);\n\n    const drawer = (\n        <React.Fragment>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                edge=\"start\"\n                sx={{\n                    mr: 2,\n                    display: {\n                        xs: \"block\",\n                        md: \"none\",\n                    },\n                }}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer anchor={\"top\"} open={isDrawerOpen} onClose={toggleDrawer}>\n                <Box\n                    sx={{ width: \"auto\" }}\n                    onClick={toggleDrawer}\n                    onKeyDown={toggleDrawer}\n                >\n                    <List>\n                        {Object.entries(Routes).map(([path, route]) => (\n                            <Link key={path} href={path} passHref>\n                                <ListItem button>\n                                    <ListItemText primary={route.name} />\n                                </ListItem>\n                            </Link>\n                        ))}\n                    </List>\n                </Box>\n            </Drawer>\n        </React.Fragment>\n    );\n\n    const appBar = React.cloneElement(\n        <AppBar data-testid={\"app-bar\"}>\n            <Toolbar>\n                {drawer}\n                <Typography variant=\"h5\" component=\"h1\">\n                    Nadun De Silva\n                </Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"block\" } }}>\n                    {Object.entries(Routes).map(([path, route]) => (\n                        <Link key={path} href={path} passHref={true}>\n                            <Button\n                                variant=\"text\"\n                                color=\"primary\"\n                                disableElevation\n                                sx={{ color: \"#ffffff\" }}\n                            >\n                                {route.name}\n                            </Button>\n                        </Link>\n                    ))}\n                </Box>\n                <Tooltip title={`Change to ${nextColorScheme} theme`}>\n                    <IconButton\n                        sx={{ marginLeft: 5 }}\n                        size=\"small\"\n                        onClick={onThemeToggleChange}\n                    >\n                        <FontAwesomeIcon\n                            icon={nextColorScheme === \"dark\" ? faMoon : faSun}\n                            transform={\"grow-4\"}\n                        />\n                    </IconButton>\n                </Tooltip>\n            </Toolbar>\n        </AppBar>,\n        {\n            elevation: trigger ? 4 : 0,\n        },\n    );\n\n    const handleClick = (): void => {\n        scrollToTopRef.current?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n        });\n    };\n\n    return (\n        <React.Fragment>\n            {appBar}\n            <Toolbar ref={scrollToTopRef} />\n            <Container\n                maxWidth={false}\n                disableGutters\n                sx={{ overflowX: \"hidden\" }}\n            >\n                {children}\n            </Container>\n            <Container\n                maxWidth={false}\n                sx={{\n                    textAlign: \"center\",\n                    paddingTop: 10,\n                    paddingBottom: 5,\n                    color: \"#666666\",\n                }}\n            >\n                &copy; 2021 Nadun De Silva\n            </Container>\n            <Zoom in={trigger}>\n                <Box\n                    onClick={handleClick}\n                    role=\"presentation\"\n                    sx={{\n                        position: \"fixed\",\n                        bottom: 10,\n                        right: 10,\n                    }}\n                >\n                    <Fab\n                        color=\"primary\"\n                        size=\"small\"\n                        aria-label=\"scroll back to top\"\n                    >\n                        <FontAwesomeIcon icon={faChevronUp} />\n                    </Fab>\n                </Box>\n            </Zoom>\n        </React.Fragment>\n    );\n};\n\nexport default Layout;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Breadcrumbs, Link as BreadcrumbLink, Typography } from \"@mui/material\";\nimport Link from \"next/link\";\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\n\nimport { Routes, Route, ANY_ROUTE } from \"@/constants/routes\";\n\nconst RouterBreadcrumbs = (): React.ReactElement | null => {\n    const router = useRouter();\n    const pathnames = router.pathname.split(\"/\").filter((x) => x);\n\n    const breadcrumbs: Array<{ name: string; path?: string }> = [\n        {\n            name: \"Home\",\n            path: pathnames.length > 0 ? \"/\" : undefined,\n        },\n    ];\n    if (pathnames.length > 0) {\n        const visitRoutes = (\n            currentRoutes: { [key: string]: Route },\n            currentPathnames: string[],\n            currentBasePath: string,\n        ): void => {\n            if (currentPathnames.length > 0) {\n                const currentSubPath = \"/\" + currentPathnames[0];\n                if (currentSubPath in currentRoutes) {\n                    const route = currentRoutes[currentSubPath];\n                    if (currentPathnames.length > 1) {\n                        const currentPath = currentBasePath + currentSubPath;\n                        breadcrumbs.push({\n                            name: route.name,\n                            path: currentPath,\n                        });\n                        if (route.subRoutes !== undefined) {\n                            visitRoutes(\n                                route.subRoutes,\n                                currentPathnames.slice(1),\n                                currentPath,\n                            );\n                        }\n                    } else {\n                        breadcrumbs.push({\n                            name: route.name,\n                        });\n                    }\n                } else if (ANY_ROUTE in currentRoutes) {\n                    const route = currentRoutes[ANY_ROUTE];\n                    breadcrumbs.push({\n                        name: route.name,\n                    });\n                }\n            }\n        };\n        visitRoutes(Routes, pathnames, \"\");\n    }\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{ margin: 3 }}\n            separator={\n                <FontAwesomeIcon icon={faChevronRight} transform={\"shrink-4\"} />\n            }\n        >\n            {breadcrumbs.map((breadcrumb) => {\n                return breadcrumb.path === undefined ? (\n                    <Typography color=\"textPrimary\" key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Typography>\n                ) : (\n                    <Link passHref href={breadcrumb.path} key={breadcrumb.name}>\n                        <BreadcrumbLink color=\"inherit\">\n                            {breadcrumb.name}\n                        </BreadcrumbLink>\n                    </Link>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n\nexport default RouterBreadcrumbs;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Container } from \"@mui/material\";\nimport React from \"react\";\n\nimport RouterBreadcrumbs from \"./RouterBreadcrumbs\";\n\ninterface LayoutContentProps {\n    children: React.ReactNode;\n}\n\nconst LayoutContent = ({\n    children,\n}: LayoutContentProps): React.ReactElement => (\n    <Container\n        maxWidth={false}\n        disableGutters\n        sx={{\n            marginBottom: 5,\n            px: {\n                xs: 0,\n                lg: 20,\n                xl: 40,\n            },\n        }}\n    >\n        <RouterBreadcrumbs />\n        <Container maxWidth={false}>{children}</Container>\n    </Container>\n);\n\nexport default LayoutContent;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { MutableRefObject, useEffect, useState, useRef } from \"react\";\n\n// -1 -> div partially or completely above viewport\n//  0 -> div visible in viewport\n//  1 -> div partially or completely below viewport\ntype Direction = -1 | 0 | 1;\n\ninterface UseScrollOffsetReturnValue<T> {\n    ref: MutableRefObject<T | null>;\n    direction: Direction;\n    offset: number;\n}\n\nfunction useScrollOffset<T extends Element>(): UseScrollOffsetReturnValue<T> {\n    const ref = useRef<T>(null);\n    const [direction, setDirection] = useState<Direction>(0);\n    const [offset, setOffset] = useState<number>(0);\n\n    const updateOffset = (): void => {\n        if (ref.current !== null) {\n            const refBBox = ref.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight;\n\n            let direction: Direction;\n            let newOffset: number;\n            if (refBBox.top >= viewportHeight) {\n                direction = 1;\n                newOffset = 0;\n            } else if (refBBox.bottom <= 0) {\n                direction = -1;\n                newOffset = 0;\n            } else if (refBBox.top > viewportHeight / 2) {\n                const fullPageHeight = document.documentElement.offsetHeight;\n                const yOffset = window.pageYOffset;\n                const pageBottomOffset =\n                    (yOffset + viewportHeight * 1.5 - fullPageHeight) /\n                    (viewportHeight / 2);\n                const clientRectOffset = 2 - refBBox.top / (viewportHeight / 2);\n\n                direction = 1;\n                newOffset = Math.max(pageBottomOffset, clientRectOffset);\n            } else if (refBBox.bottom < viewportHeight / 2) {\n                direction = -1;\n                newOffset = refBBox.bottom / (viewportHeight / 2);\n            } else {\n                direction = 0;\n                newOffset = 1;\n            }\n            setDirection(direction);\n            setOffset(newOffset);\n        } else {\n            setDirection(0);\n            setOffset(0);\n        }\n    };\n\n    const handleScroll = (): void => {\n        window.requestAnimationFrame(updateOffset);\n    };\n\n    useEffect(() => {\n        window.requestAnimationFrame(updateOffset);\n        window.addEventListener(\"scroll\", handleScroll);\n        return (): void => window.removeEventListener(\"scroll\", handleScroll);\n    });\n\n    return {\n        ref,\n        direction,\n        offset: Math.min(Math.max(offset, 0), 1),\n    };\n}\n\nexport default useScrollOffset;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport BlogPostLayout from \"./BlogPostLayout\";\nimport Layout from \"./Layout\";\nimport LayoutContent from \"./LayoutContent\";\nimport useScrollOffset from \"./scrolling\";\n\nexport default Layout;\n\nexport { BlogPostLayout, LayoutContent, useScrollOffset };\n","/*\n * Copyright (c) 2022, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from \"fs\";\nimport path from \"path\";\n\nimport { Masonry } from \"@mui/lab\";\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Container,\n    Typography,\n} from \"@mui/material\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport React from \"react\";\n\nimport Layout, { LayoutContent } from \"@/components/layout\";\nimport { BlogPostMetadata } from \"@/components/layout/BlogPostLayout\";\n\ninterface BlogPost {\n    file: string;\n    metadata: BlogPostMetadata;\n}\n\ninterface BlogProps {\n    posts: BlogPost[];\n}\n\nconst Blog = ({ posts }: BlogProps): React.ReactElement => {\n    const orderedPosts = posts\n        .map((post) => ({\n            ...post,\n            metadata: {\n                ...post.metadata,\n                publishedDate: new Date(post.metadata.publishedDate),\n            },\n        }))\n        .sort(\n            (a, b) =>\n                b.metadata.publishedDate.getTime() -\n                a.metadata.publishedDate.getTime(),\n        );\n    return (\n        <Container maxWidth={false} disableGutters>\n            <Head>\n                <title>Blog of Nadun De Silva</title>\n            </Head>\n            <Layout>\n                <LayoutContent>\n                    <Masonry columns={4} spacing={2}>\n                        {orderedPosts.map(\n                            (post): React.ReactElement => (\n                                <Card key={post.file} sx={{ maxWidth: 345 }}>\n                                    <Link href={`/blog/posts/${post.file}`}>\n                                        <CardActionArea>\n                                            <CardMedia\n                                                component=\"img\"\n                                                height=\"140\"\n                                                image={\n                                                    post.metadata.mainImage.src\n                                                }\n                                                alt=\"green iguana\"\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h6\"\n                                                    component=\"div\"\n                                                >\n                                                    {post.metadata.title}\n                                                </Typography>\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    color=\"text.secondary\"\n                                                >\n                                                    {post.metadata.description}\n                                                </Typography>\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    color=\"text.secondary\"\n                                                    sx={{ fontSize: 12, pt: 1 }}\n                                                >\n                                                    Published on{\" \"}\n                                                    {post.metadata.publishedDate.toDateString()}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            ),\n                        )}\n                    </Masonry>\n                </LayoutContent>\n            </Layout>\n        </Container>\n    );\n};\n\nexport async function getStaticProps(): Promise<{ props: BlogProps }> {\n    const blogFilesDir = path.join(process.cwd(), \"pages/blog/posts\");\n    const blogFiles = fs.readdirSync(blogFilesDir);\n\n    const posts = await Promise.all(\n        blogFiles.map(async (blogFile): Promise<BlogPost> => {\n            const out = await import(`./posts/${blogFile}`);\n            return {\n                file: blogFile.substring(0, blogFile.lastIndexOf(\".\")),\n                metadata: out.meta,\n            };\n        }),\n    );\n\n    return {\n        props: {\n            posts,\n        },\n    };\n}\n\nexport default Blog;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/blog\",\n      function () {\n        return require(\"private-next-pages/blog/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/blog\"])\n      });\n    }\n  "],"names":["BlogPostTitle","children","Typography","variant","component","sx","pt","fontWeight","fontSize","metadata","Container","maxWidth","disableGutters","title","position","height","my","layout","objectFit","src","mainImage","alt","placeholder","blurDataURL","Routes","name","subRoutes","window","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","scrollToTopRef","useRef","React","isDrawerOpen","setDrawerOpen","toggleDrawer","useWebsiteTheme","colorScheme","setColorScheme","nextColorScheme","drawer","IconButton","color","onClick","edge","mr","display","xs","md","Menu","Drawer","anchor","open","onClose","Box","width","onKeyDown","List","Object","entries","map","path","route","href","passHref","ListItem","button","ListItemText","primary","appBar","AppBar","Toolbar","flexGrow","Button","disableElevation","Tooltip","marginLeft","size","icon","faMoon","faSun","transform","elevation","ref","overflowX","textAlign","paddingTop","paddingBottom","Zoom","Z","in","current","scrollIntoView","behavior","block","role","bottom","right","Fab","faChevronUp","pathnames","useRouter","pathname","split","filter","x","breadcrumbs","length","visitRoutes","currentRoutes","currentPathnames","currentBasePath","currentSubPath","currentPath","push","slice","Breadcrumbs","margin","separator","faChevronRight","breadcrumb","marginBottom","px","lg","xl","useState","direction","setDirection","offset","setOffset","updateOffset","newOffset","refBBox","getBoundingClientRect","viewportHeight","innerHeight","top","fullPageHeight","document","documentElement","offsetHeight","pageBottomOffset","pageYOffset","clientRectOffset","Math","max","handleScroll","requestAnimationFrame","useEffect","addEventListener","removeEventListener","min","orderedPosts","posts","post","publishedDate","Date","sort","a","b","getTime","columns","spacing","file","image","gutterBottom","description","toDateString","__NEXT_P"],"sourceRoot":""}