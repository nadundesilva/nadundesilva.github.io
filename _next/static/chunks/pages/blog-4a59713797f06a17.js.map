{"version":3,"file":"static/chunks/pages/blog-4a59713797f06a17.js","mappings":"oFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,QACA,WACA,OAAeC,EAAQ,KACvB,EACA,0PC6HAC,CAAAA,EAAA,QA3Fa,SAAAC,CAAA,CAA8C,CACvD,IAAMC,EAAeC,EADTA,KAAAA,CAEPC,GAAG,CAAC,SAACC,CAAAA,CAAAA,OAAU,GAAAC,EAAAC,CAAA,KAAAC,EAAAD,CAAA,KACTF,GAAAA,CACHI,SAAU,GAAAH,EAAAC,CAAA,KAAAC,EAAAD,CAAA,KACHF,EAAKI,QAAQ,GAChBC,cAAe,IAAIC,KAAKN,EAAKI,QAAQ,CAACC,aAAa,QAG1DE,IAAI,CACD,SAACC,CAAAA,CAAGC,CAAAA,CAAAA,QACAA,EAAEL,QAAQ,CAACC,aAAa,CAACK,OAAO,GAChCF,EAAEJ,QAAQ,CAACC,aAAa,CAACK,OAAO,KAE5C,MACI,GAAAC,EAAAC,IAAA,EAACC,EAAAA,CAASA,CAAAA,CAACC,SAAU,GAAOC,eAAc,aACtC,GAAAJ,EAAAK,GAAA,EAACC,IAAIA,UACD,GAAAN,EAAAK,GAAA,EAACE,QAAAA,UAAM,4BAEX,GAAAP,EAAAK,GAAA,EAACG,EAAAA,EAAMA,CAAAA,UACH,GAAAR,EAAAK,GAAA,EAACI,EAAAA,EAAaA,CAAAA,UACV,GAAAT,EAAAK,GAAA,EAACK,EAAAA,EAAOA,CAAAA,CAACC,QAAS,EAAGC,QAAS,WACzB1B,EAAaE,GAAG,CACb,SAACC,CAAAA,CAAAA,OACG,GAAAW,EAAAK,GAAA,EAACQ,EAAAA,CAAIA,CAAAA,CAAiBC,GAAI,CAAEX,SAAU,GAAI,WACtC,GAAAH,EAAAK,GAAA,EAACU,IAAIA,CAACC,KAAM,eAAyBC,MAAA,CAAV5B,EAAK6B,IAAI,WAChC,GAAAlB,EAAAC,IAAA,EAACkB,EAAAA,CAAcA,CAAAA,WACX,GAAAnB,EAAAK,GAAA,EAACe,EAAAA,CAASA,CAAAA,CACNC,UAAU,MACVC,OAAO,MACPC,MACIlC,EAAKI,QAAQ,CAAC+B,SAAS,CAACC,GAAG,CAE/BC,IAAI,iBAER,GAAA1B,EAAAC,IAAA,EAAC0B,EAAAA,CAAWA,CAAAA,WACR,GAAA3B,EAAAK,GAAA,EAACuB,EAAAA,CAAUA,CAAAA,CACPC,aAAY,GACZC,QAAQ,KACRT,UAAU,eAEThC,EAAKI,QAAQ,CAACc,KAAK,GAExB,GAAAP,EAAAK,GAAA,EAACuB,EAAAA,CAAUA,CAAAA,CACPE,QAAQ,QACRC,MAAM,0BAEL1C,EAAKI,QAAQ,CAACuC,WAAW,GAE9B,GAAAhC,EAAAC,IAAA,EAAC2B,EAAAA,CAAUA,CAAAA,CACPE,QAAQ,QACRC,MAAM,iBACNjB,GAAI,CAAEmB,SAAU,GAAIC,GAAI,CAAE,YAC7B,eACgB,IACZ7C,EAAKI,QAAQ,CAACC,aAAa,CAACyC,YAAY,eA/BlD9C,EAAK6B,IAAI,YA4CpD","sources":["webpack://_N_E/?2cc4","webpack://_N_E/./pages/blog/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/blog\",\n      function () {\n        return require(\"private-next-pages/blog/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/blog\"])\n      });\n    }\n  ","/*\n * Copyright (c) 2022, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport fs from \"fs\";\nimport path from \"path\";\n\nimport { Masonry } from \"@mui/lab\";\nimport {\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Container,\n    Typography,\n} from \"@mui/material\";\nimport Head from \"next/head\";\nimport Link from \"next/link\";\nimport React from \"react\";\n\nimport Layout, { LayoutContent } from \"@/components/layout\";\nimport type { BlogPostMetadata } from \"@/components/layout/BlogPostLayout\";\n\ninterface BlogPost {\n    file: string;\n    metadata: BlogPostMetadata;\n}\n\ninterface BlogProps {\n    posts: BlogPost[];\n}\n\nconst Blog = ({ posts }: BlogProps): React.ReactElement => {\n    const orderedPosts = posts\n        .map((post) => ({\n            ...post,\n            metadata: {\n                ...post.metadata,\n                publishedDate: new Date(post.metadata.publishedDate),\n            },\n        }))\n        .sort(\n            (a, b) =>\n                b.metadata.publishedDate.getTime() -\n                a.metadata.publishedDate.getTime(),\n        );\n    return (\n        <Container maxWidth={false} disableGutters>\n            <Head>\n                <title>Nadun De Silva | Blog</title>\n            </Head>\n            <Layout>\n                <LayoutContent>\n                    <Masonry columns={5} spacing={2}>\n                        {orderedPosts.map(\n                            (post): React.ReactElement => (\n                                <Card key={post.file} sx={{ maxWidth: 345 }}>\n                                    <Link href={`/blog/posts/${post.file}`}>\n                                        <CardActionArea>\n                                            <CardMedia\n                                                component=\"img\"\n                                                height=\"140\"\n                                                image={\n                                                    post.metadata.mainImage.src\n                                                }\n                                                alt=\"green iguana\"\n                                            />\n                                            <CardContent>\n                                                <Typography\n                                                    gutterBottom\n                                                    variant=\"h6\"\n                                                    component=\"div\"\n                                                >\n                                                    {post.metadata.title}\n                                                </Typography>\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    color=\"text.secondary\"\n                                                >\n                                                    {post.metadata.description}\n                                                </Typography>\n                                                <Typography\n                                                    variant=\"body2\"\n                                                    color=\"text.secondary\"\n                                                    sx={{ fontSize: 12, pt: 1 }}\n                                                >\n                                                    Published on{\" \"}\n                                                    {post.metadata.publishedDate.toDateString()}\n                                                </Typography>\n                                            </CardContent>\n                                        </CardActionArea>\n                                    </Link>\n                                </Card>\n                            ),\n                        )}\n                    </Masonry>\n                </LayoutContent>\n            </Layout>\n        </Container>\n    );\n};\n\nexport async function getStaticProps(): Promise<{ props: BlogProps }> {\n    const blogFilesDir = path.join(process.cwd(), \"pages/blog/posts\");\n    const blogFiles = fs.readdirSync(blogFilesDir);\n\n    const posts = await Promise.all(\n        blogFiles.map(async (blogFile): Promise<BlogPost> => {\n            const out = await import(`./posts/${blogFile}`);\n            return {\n                file: blogFile.substring(0, blogFile.lastIndexOf(\".\")),\n                metadata: out.meta,\n            };\n        }),\n    );\n\n    return {\n        props: {\n            posts,\n        },\n    };\n}\n\nexport default Blog;\n"],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","param","orderedPosts","posts","map","post","_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_5__","Z","_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_6__","metadata","publishedDate","Date","sort","a","b","getTime","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Container","maxWidth","disableGutters","jsx","Head","title","Layout","LayoutContent","Masonry","columns","spacing","Card","sx","Link","href","concat","file","CardActionArea","CardMedia","component","height","image","mainImage","src","alt","CardContent","Typography","gutterBottom","variant","color","description","fontSize","pt","toDateString"],"sourceRoot":""}