{"version":3,"file":"static/chunks/pages/index-54a42bf388f7c919.js","mappings":"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","sources":["webpack://_N_E/./components/home/AboutMe.tsx","webpack://_N_E/./components/home/WelcomeBanner.tsx","webpack://_N_E/./components/home/sections/Achievements.tsx","webpack://_N_E/./components/home/sections/Certifications.tsx","webpack://_N_E/./components/home/sections/ContributedProjects.tsx","webpack://_N_E/./components/home/sections/Experience.tsx","webpack://_N_E/./components/home/sections/Profiles.tsx","webpack://_N_E/./components/home/sections/Skills.tsx","webpack://_N_E/./components/home/Heading.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/"],"sourcesContent":["/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    Avatar,\n    Divider,\n    Grid,\n    styled,\n    Theme,\n    Typography,\n} from \"@mui/material\";\nimport { SxProps } from \"@mui/system\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\nimport { Photos } from \"@/constants\";\n\nconst ProfilePhoto = styled(Image)({\n    width: \"100%\",\n    height: \"auto\",\n});\n\nconst InstituteIcon = styled(FontAwesomeIcon)(({ theme }) => ({\n    marginRight: theme.spacing(1),\n}));\n\nconst ItemDivider = styled(Divider)(({ theme }) => ({\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n}));\n\nconst AboutMe = (): React.ReactElement => {\n    const profilePhoto = (\n        gridWidth: 4 | 12,\n        sx: SxProps<Theme>,\n    ): React.ReactElement => (\n        <Grid item xs={gridWidth} sx={sx}>\n            <Avatar sx={{ width: \"100%\", paddingTop: \"100%\" }}>\n                <ProfilePhoto\n                    src={Photos.ProfilePhoto.src}\n                    alt={Photos.ProfilePhoto.alt}\n                    sizes={`${100 * (gridWidth / 12)}vw`}\n                    placeholder=\"blur\"\n                    layout=\"fill\"\n                    objectFit=\"cover\"\n                    blurDataURL={Photos.ProfilePhoto.blurDataURL}\n                />\n            </Avatar>\n        </Grid>\n    );\n\n    const contactItem = (name: string, value: string): React.ReactElement => (\n        <Grid item xs={12} md={4}>\n            <Typography sx={{ fontWeight: \"bold\" }}>{name}:</Typography>\n            <Typography>{value}</Typography>\n        </Grid>\n    );\n\n    return (\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            {profilePhoto(12, { display: { xs: \"block\", md: \"none\" } })}\n            <Grid item xs={12} md={8}>\n                <Typography align={\"justify\"}>\n                    I am currently leading the Observability area of Choreo at\n                    WSO2. I have several years of working experience as a\n                    Software Engineer working on multiple Research &amp;\n                    Development projects at WSO2. I love learning about new\n                    technologies and is particularly interested in Deep\n                    Learning.\n                </Typography>\n                <ItemDivider />\n                <Typography>Bachelor of Science in Engineering</Typography>\n                <Typography display=\"inline\" color=\"textSecondary\">\n                    <InstituteIcon icon={faMapMarkerAlt} /> University of\n                    Moratuwa\n                </Typography>\n                <ItemDivider />\n                <Grid container spacing={3} justifyContent=\"center\">\n                    {contactItem(\"Phone\", \"+94 778 222 607\")}\n                    {contactItem(\"Email\", \"nadunrds@gmail.com\")}\n                    {contactItem(\"Website\", \"nadundesilva.github.io\")}\n                </Grid>\n            </Grid>\n            {profilePhoto(4, { display: { xs: \"none\", md: \"block\" } })}\n        </Grid>\n    );\n};\n\nexport default AboutMe;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { faChevronDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    Box,\n    Button,\n    Container,\n    Grid,\n    Link,\n    styled,\n    Theme,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@mui/material\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\nimport { Images } from \"@/constants\";\n\nconst BannerImage = styled(Image)({\n    zIndex: 1,\n});\n\nconst WelcomeBanner = (): React.ReactElement => {\n    const theme = useTheme();\n\n    const isLarge = useMediaQuery(theme.breakpoints.up(\"xl\"));\n    const isMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const downloadButtonSize = isLarge\n        ? \"large\"\n        : isMedium\n        ? \"medium\"\n        : \"small\";\n\n    return (\n        <Container\n            maxWidth={false}\n            disableGutters\n            sx={{ position: \"relative\" }}\n        >\n            <Grid\n                container\n                sx={{\n                    color: \"#ffffff\",\n                    backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                    position: \"absolute\",\n                    textAlign: \"center\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    pt: \"17vh\",\n                    px: \"3vh\",\n                    zIndex: 2,\n                }}\n            >\n                <Grid item xs={12}>\n                    <Typography\n                        variant=\"h2\"\n                        component=\"p\"\n                        sx={{\n                            fontWeight: \"bold\",\n                            fontSize: \"6vh\",\n                        }}\n                    >\n                        Hi, I am\n                        <br />\n                        Nadun\n                        <br />\n                        De Silva\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography\n                        variant=\"h5\"\n                        component=\"h2\"\n                        sx={{ fontSize: \"3vh\" }}\n                    >\n                        Associate Technical Lead &amp; Deep Learning Enthusiast\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Link target={\"_blank\"} href={\"/nadundesilva-cv.pdf\"}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size={downloadButtonSize}\n                        >\n                            View CV\n                        </Button>\n                    </Link>\n                </Grid>\n            </Grid>\n            <Container\n                maxWidth={false}\n                disableGutters\n                sx={{\n                    position: \"relative\",\n                    height: (theme: Theme) =>\n                        `calc(100vh - ${\n                            theme.mixins.toolbar.minHeight ?? 0\n                        }px)`,\n                }}\n            >\n                <BannerImage\n                    src={Images.WelcomeBanner.src}\n                    alt={Images.WelcomeBanner.alt}\n                    layout=\"fill\"\n                    objectFit=\"cover\"\n                    priority={true}\n                    placeholder=\"blur\"\n                    blurDataURL={Images.WelcomeBanner.blurDataURL}\n                />\n            </Container>\n            <Box\n                role=\"presentation\"\n                sx={{\n                    position: \"absolute\",\n                    bottom: 24,\n                    right: 24,\n                    zIndex: 3,\n                    color: \"white\",\n                }}\n            >\n                <Typography\n                    sx={{ display: \"inline\", pr: 1, fontSize: \"1.5vh\" }}\n                >\n                    Scroll down to learn more\n                </Typography>\n                <FontAwesomeIcon icon={faChevronDown} />\n            </Box>\n        </Container>\n    );\n};\n\nexport default WelcomeBanner;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    Box,\n    Container,\n    Grid,\n    Grow,\n    ImageList,\n    ImageListItem,\n    styled,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@mui/material\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\nimport { Photos, ImageAsset } from \"@/constants\";\n\nconst PREFIX = \"Home-Achievements\";\nconst classes = {\n    imageListItemImageOverlay: `${PREFIX}-imageListItemImageOverlay`,\n};\n\nconst FullSizeImageListItem = styled(ImageListItem)({\n    width: \"100%\",\n    height: \"auto\",\n});\n\nconst ImageListItemImageOverlay = styled(Grid)({\n    color: \"#ffffff\",\n    position: \"absolute\",\n    textAlign: \"center\",\n});\n\ninterface AchievementSection {\n    title: string;\n    photo: ImageAsset;\n    animationTimeoutFactor: number;\n}\n\nconst ROW_HEIGHT = 300;\n\nconst Achievements = (): React.ReactElement => {\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const achievementSections: AchievementSection[] = [\n        {\n            title: \"Global Finalist - Galactic Impact - NASA Space Apps Challenge 2017\",\n            photo: Photos.NASASpaceAppsChallenge2017,\n            animationTimeoutFactor: 1.75,\n        },\n        {\n            title: \"Placements in Dean's List\",\n            photo: Photos.UOMDeansList2017,\n            animationTimeoutFactor: 1,\n        },\n        {\n            title: \"WSO2 Sustained Outstanding Contribution Award - Consecutive years from 2019 to 2021\",\n            photo: Photos.WSO2OutstandingContributor2019,\n            animationTimeoutFactor: 2,\n        },\n        {\n            title: \"Finalist - British Council HSBC Youth Enterprise Awards 2015\",\n            photo: Photos.HSBCYouthEnterpriseAwards2015,\n            animationTimeoutFactor: 1.5,\n        },\n        {\n            title: \"Finalist - Angel Hack 2016\",\n            photo: Photos.AngelHack2016,\n            animationTimeoutFactor: 1.25,\n        },\n    ];\n\n    const renderImageListItem = (\n        achievementIndex: number,\n        rowCount: number,\n        totalColumns: number,\n    ): React.ReactElement => {\n        const achievementSection: AchievementSection =\n            achievementSections[achievementIndex];\n        return (\n            <FullSizeImageListItem\n                rows={rowCount}\n                cols={1}\n                sx={{\n                    \"position\": \"relative\",\n                    \"&:hover\": {\n                        [`& .${classes.imageListItemImageOverlay}`]: {\n                            top: 0,\n                            bottom: 0,\n                            left: 0,\n                            right: 0,\n                            backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n                            zIndex: 1,\n                        },\n                    },\n                }}\n            >\n                <Grow\n                    in={offset > 0.3}\n                    timeout={1000 * achievementSection.animationTimeoutFactor}\n                >\n                    <Box sx={{ height: \"100%\", position: \"relative\" }}>\n                        <ImageListItemImageOverlay\n                            container\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            className={classes.imageListItemImageOverlay}\n                        >\n                            <Grid item xs={6}>\n                                <Typography sx={{ fontWeight: \"bold\" }}>\n                                    {achievementSection.title}\n                                </Typography>\n                            </Grid>\n                        </ImageListItemImageOverlay>\n                        <Image\n                            src={achievementSection.photo.src}\n                            alt={achievementSection.photo.alt}\n                            layout=\"fill\"\n                            objectFit=\"cover\"\n                            sizes={`${Math.ceil(100 / totalColumns)}vw`}\n                            placeholder=\"blur\"\n                            blurDataURL={achievementSection.photo.blurDataURL}\n                        />\n                    </Box>\n                </Grow>\n            </FullSizeImageListItem>\n        );\n    };\n\n    const theme = useTheme();\n    const isAboveMd = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n    const LARGE_SCREEN_COLUMN_COUNT = 3;\n    const SMALL_SCREEN_COLUMN_COUNT = 1;\n    return (\n        <Container maxWidth={false} disableGutters ref={rootRef}>\n            {isAboveMd ? (\n                <ImageList\n                    rowHeight={ROW_HEIGHT}\n                    cols={LARGE_SCREEN_COLUMN_COUNT}\n                >\n                    <FullSizeImageListItem rows={2} cols={1}>\n                        <ImageList rowHeight={ROW_HEIGHT} cols={1}>\n                            {renderImageListItem(\n                                0,\n                                1,\n                                LARGE_SCREEN_COLUMN_COUNT,\n                            )}\n                            {renderImageListItem(\n                                1,\n                                1,\n                                LARGE_SCREEN_COLUMN_COUNT,\n                            )}\n                        </ImageList>\n                    </FullSizeImageListItem>\n                    {renderImageListItem(2, 2, LARGE_SCREEN_COLUMN_COUNT)}\n                    <FullSizeImageListItem rows={2} cols={1}>\n                        <ImageList rowHeight={ROW_HEIGHT} cols={1}>\n                            {renderImageListItem(\n                                3,\n                                1,\n                                LARGE_SCREEN_COLUMN_COUNT,\n                            )}\n                            {renderImageListItem(\n                                4,\n                                1,\n                                LARGE_SCREEN_COLUMN_COUNT,\n                            )}\n                        </ImageList>\n                    </FullSizeImageListItem>\n                </ImageList>\n            ) : (\n                <ImageList\n                    rowHeight={ROW_HEIGHT}\n                    cols={SMALL_SCREEN_COLUMN_COUNT}\n                >\n                    {renderImageListItem(0, 1, SMALL_SCREEN_COLUMN_COUNT)}\n                    {renderImageListItem(1, 1, SMALL_SCREEN_COLUMN_COUNT)}\n                    {renderImageListItem(2, 1, SMALL_SCREEN_COLUMN_COUNT)}\n                    {renderImageListItem(3, 1, SMALL_SCREEN_COLUMN_COUNT)}\n                    {renderImageListItem(4, 1, SMALL_SCREEN_COLUMN_COUNT)}\n                </ImageList>\n            )}\n        </Container>\n    );\n};\n\nexport default Achievements;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Chip,\n    Container,\n    Grid,\n    Link,\n    Slide,\n    Typography,\n    useTheme,\n} from \"@mui/material\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\nimport { Logos, LogoAsset } from \"@/constants\";\n\nconst UNIVERSITY_OF_ALBERTA_ISSUER = \"University of Alberta\";\nconst DEEP_LEARNING_ISSUER = \"Deeplearning.AI\";\nconst LINUX_FOUNDATION = \"Linux Foundation\";\n\ninterface Certificate {\n    name: string;\n    type: \"Course\" | \"Certification\" | \"Specialization\";\n    link: string;\n    image: LogoAsset;\n    issuer: string;\n}\n\nconst Certifications = (): React.ReactElement => {\n    const theme = useTheme();\n    const {\n        ref: rootRef,\n        direction,\n        offset,\n    } = useScrollOffset<HTMLDivElement>();\n\n    const certifications: Certificate[] = [\n        {\n            name: \"Deep Learning\",\n            type: \"Specialization\",\n            link: \"https://coursera.org/share/8e5db53bfef4c4b27f79004022edad72\",\n            image: Logos.DeepLearningAI,\n            issuer: DEEP_LEARNING_ISSUER,\n        },\n        {\n            name: \"Fundamentals of Reinforcement Learning\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/fcbebc1de9e6a9b3ecb186983af7b969\",\n            image: Logos.UniversityOfAlberta,\n            issuer: UNIVERSITY_OF_ALBERTA_ISSUER,\n        },\n        {\n            name: \"Build Basic Generative Adversarial Networks (GANs)\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/fed56feb8ba81177e6467779f22c0851\",\n            image: Logos.DeepLearningAI,\n            issuer: DEEP_LEARNING_ISSUER,\n        },\n        {\n            name: \"AI For Everyone\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/e8ae9a481ef41f070d6c7b00887e8b66\",\n            image: Logos.DeepLearningAI,\n            issuer: DEEP_LEARNING_ISSUER,\n        },\n        {\n            name: \"Certified Kubernetes Administrator\",\n            type: \"Certification\",\n            link: \"https://www.youracclaim.com/badges/8241114b-7435-460a-a08f-9d33304c1470?source=linked_in_profile\",\n            image: Logos.CKA,\n            issuer: LINUX_FOUNDATION,\n        },\n        {\n            name: \"Certified Kubernetes Application Developer\",\n            type: \"Certification\",\n            link: \"https://www.youracclaim.com/badges/e9df4128-2017-41c3-9e7d-028e37176243/linked_in_profile\",\n            image: Logos.CKAD,\n            issuer: LINUX_FOUNDATION,\n        },\n    ];\n\n    const xsWidth = theme.breakpoints.values.xs;\n    const smWidth = theme.breakpoints.values.sm;\n    const mdWidth = theme.breakpoints.values.md;\n    const xlWidth = theme.breakpoints.values.xl;\n    const imageSizes = `(min-width: ${xsWidth}px) 100vw, (min-width: ${smWidth}px) 50vw, \n        (min-width: ${mdWidth}px) 34vw, (min-width: ${xlWidth}px) 25vw`;\n\n    return (\n        <Grid\n            ref={rootRef}\n            container\n            justifyContent=\"center\"\n            alignItems=\"stretch\"\n        >\n            {certifications.map((certification, index) => (\n                <Grid\n                    item\n                    xs={12}\n                    sm={6}\n                    md={4}\n                    key={index}\n                    sx={{ padding: 2 }}\n                >\n                    <Slide\n                        direction={direction === -1 ? \"down\" : \"up\"}\n                        in={offset > 0.5}\n                        timeout={1000}\n                    >\n                        <Link target={\"_blank\"} href={certification.link}>\n                            <Card sx={{ height: \"100%\" }}>\n                                <CardActionArea\n                                    sx={{\n                                        height: \"100%\",\n                                        width: \"100%\",\n                                        padding: 1,\n                                        display: \"flex\",\n                                        flexDirection: \"column\",\n                                    }}\n                                >\n                                    <CardMedia\n                                        component={(props) => (\n                                            <Container\n                                                {...props}\n                                                maxWidth={false}\n                                                disableGutters\n                                                sx={{\n                                                    position: \"relative\",\n                                                    width: \"100%\",\n                                                    height: \"auto\",\n                                                    pt: \"80%\",\n                                                    margin: \"auto\",\n                                                }}\n                                            >\n                                                <Image\n                                                    alt={\n                                                        certification.image.alt\n                                                    }\n                                                    layout=\"fill\"\n                                                    src={certification.image.src(\n                                                        theme.palette.mode,\n                                                    )}\n                                                    sizes={imageSizes}\n                                                    objectFit=\"contain\"\n                                                />\n                                            </Container>\n                                        )}\n                                        title={certification.name}\n                                    />\n                                    <CardContent\n                                        sx={{\n                                            width: \"100%\",\n                                            display: \"flex\",\n                                            flexDirection: \"column\",\n                                            justifyContent: \"space-between\",\n                                            alignItems: \"flex-start\",\n                                            flexGrow: 1,\n                                        }}\n                                    >\n                                        <Typography\n                                            variant=\"h6\"\n                                            component=\"h2\"\n                                            align=\"center\"\n                                            sx={{ width: \"100%\" }}\n                                        >\n                                            {certification.name}\n                                        </Typography>\n                                        <Box sx={{ flexGrow: 1 }} />\n                                        <Chip\n                                            label={certification.type}\n                                            color=\"secondary\"\n                                            size=\"small\"\n                                            sx={{\n                                                marginTop: 2,\n                                                marginBottom: 2,\n                                            }}\n                                        />\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            sx={{ marginTop: 2 }}\n                                        >\n                                            Issued by\n                                            <br />\n                                            {certification.issuer}\n                                        </Typography>\n                                    </CardContent>\n                                </CardActionArea>\n                            </Card>\n                        </Link>\n                    </Slide>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default Certifications;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Box, Grid, Slide, styled, useTheme } from \"@mui/material\";\nimport Image from \"next/image\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\nimport { Logos, LogoAsset } from \"@/constants\";\n\nconst ProjectLogo = styled(Image)(({ theme }) => ({\n    display: \"block\",\n    margin: \"auto\",\n    padding: theme.spacing(5),\n    width: \"100%\",\n}));\n\nconst ContributedProjects = (): React.ReactElement => {\n    const theme = useTheme();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const xsWidth = theme.breakpoints.values.xs;\n    const smWidth = theme.breakpoints.values.sm;\n    const mdWidth = theme.breakpoints.values.md;\n    const imageSizes = `(min-width: ${xsWidth}px) 100vw, (min-width: ${smWidth}px) 34vw, \n        (min-width: ${mdWidth}px) 25vw`;\n    const renderCarouselItem = (logo: LogoAsset): React.ReactElement => (\n        <Grid item xs={12} sm={4} md={3}>\n            <Slide direction={\"up\"} in={offset > 0.5} timeout={2000}>\n                <Box\n                    sx={{\n                        position: \"relative\",\n                        height: (theme) => theme.spacing(5),\n                        marginLeft: 5,\n                        marginRight: 5,\n                    }}\n                >\n                    <ProjectLogo\n                        alt={logo.alt}\n                        layout=\"fill\"\n                        objectFit=\"contain\"\n                        sizes={imageSizes}\n                        src={logo.src(theme.palette.mode)}\n                    />\n                </Box>\n            </Slide>\n        </Grid>\n    );\n\n    return (\n        <Grid\n            ref={rootRef}\n            container\n            spacing={3}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            {renderCarouselItem(Logos.Choreo)}\n            {renderCarouselItem(Logos.Ballerina)}\n            {renderCarouselItem(Logos.Cellery)}\n            {renderCarouselItem(Logos.Siddhi)}\n        </Grid>\n    );\n};\n\nexport default ContributedProjects;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    Timeline,\n    TimelineItem,\n    TimelineOppositeContent,\n    TimelineSeparator,\n    TimelineDot,\n    TimelineConnector,\n    TimelineContent,\n} from \"@mui/lab\";\nimport {\n    Paper,\n    Slide,\n    Typography,\n    useMediaQuery,\n    useTheme,\n} from \"@mui/material\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\n\ninterface ExperienceItem {\n    name: string;\n    timePeriod: string;\n    description: string;\n    institute: string;\n}\n\nconst Experience = (): React.ReactElement => {\n    const { ref: rootRef, offset } = useScrollOffset<HTMLUListElement>();\n    const theme = useTheme();\n    const isTimelineLeftAligned = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n    const experienceItems: ExperienceItem[] = [\n        {\n            name: \"Associate Technical Lead\",\n            timePeriod: \"June 2021 to Now\",\n            description:\n                \"Lead Choreo Observability Team as well as other Teams in Choreo\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Senior Software Engineer\",\n            timePeriod: \"July 2019 to June 2021\",\n            description:\n                \"Lead Choreo Observability Team in creating the initial PoC as well as the Platform\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Software Engineer\",\n            timePeriod: \"Jan 2018 to July 2019\",\n            description:\n                \"Designed & developed several components in middle-ware & cloud projects\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Google Summer of Code Intern\",\n            timePeriod: \"May 2017 to Sep 2017\",\n            description:\n                \"Designed and implemented a maven plugin for automatically generating documentation for Siddhi extensions using annotated data written in the java code.\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n        {\n            name: \"Software Engineering Trainee\",\n            timePeriod: \"July 2016 to Dec 2019\",\n            description:\n                \"Implemented a Notebook prototype for the Data Analytics Server\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\",\n        },\n    ];\n    const locationIcon = <FontAwesomeIcon icon={faMapMarkerAlt} />;\n\n    return (\n        <Timeline\n            ref={rootRef}\n            position={isTimelineLeftAligned ? \"left\" : \"alternate\"}\n        >\n            {experienceItems.map((item: ExperienceItem, index: number) => {\n                const isOnLeft = isTimelineLeftAligned || index % 2 === 0;\n                return (\n                    <TimelineItem key={item.name}>\n                        <TimelineOppositeContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {item.timePeriod}\n                            </Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot color=\"primary\" />\n                            <TimelineConnector />\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Slide\n                                direction={isOnLeft ? \"left\" : \"right\"}\n                                in={offset > 0.5}\n                                timeout={1000}\n                            >\n                                <Paper\n                                    elevation={3}\n                                    sx={{ padding: 2, marginBottom: 5 }}\n                                >\n                                    <Typography\n                                        variant=\"body1\"\n                                        component=\"h2\"\n                                        sx={{ fontWeight: \"bold\" }}\n                                    >\n                                        {item.name}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                    >\n                                        {item.description}\n                                    </Typography>\n                                    <Typography\n                                        variant=\"body2\"\n                                        color=\"textSecondary\"\n                                    >\n                                        {isOnLeft && (\n                                            <React.Fragment>\n                                                {locationIcon}{\" \"}\n                                            </React.Fragment>\n                                        )}\n                                        {item.institute}\n                                        {!isOnLeft && (\n                                            <React.Fragment>\n                                                {\" \"}\n                                                {locationIcon}\n                                            </React.Fragment>\n                                        )}\n                                    </Typography>\n                                </Paper>\n                            </Slide>\n                        </TimelineContent>\n                    </TimelineItem>\n                );\n            })}\n        </Timeline>\n    );\n};\n\nexport default Experience;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { IconDefinition } from \"@fortawesome/fontawesome-common-types\";\nimport {\n    faFacebook,\n    faGithub,\n    faInstagram,\n    faLinkedin,\n    faMedium,\n    faTwitter,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { faGraduationCap } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Container, Grid, Grow, Link, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\n\nconst ProfileIcon = styled(FontAwesomeIcon)(({ theme }) => ({\n    margin: theme.spacing(1),\n}));\n\ninterface Profile {\n    name: string;\n    icon: IconDefinition;\n    link: string;\n}\n\nconst Profiles = (): React.ReactElement => {\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const profiles: Profile[] = [\n        {\n            name: \"LinkedIn\",\n            icon: faLinkedin,\n            link: \"https://www.linkedin.com/in/nadundesilva\",\n        },\n        {\n            name: \"GitHub\",\n            icon: faGithub,\n            link: \"https://github.com/nadundesilva\",\n        },\n        {\n            name: \"Medium\",\n            icon: faMedium,\n            link: \"https://medium.com/@nadundesilva\",\n        },\n        {\n            name: \"Google Scholar\",\n            icon: faGraduationCap,\n            link: \"https://scholar.google.com/citations?user=CdXo_YQAAAAJ&hl=en&oi=ao\",\n        },\n        {\n            name: \"Facebook\",\n            icon: faFacebook,\n            link: \"https://www.facebook.com/nadunrds\",\n        },\n        {\n            name: \"Instagram\",\n            icon: faInstagram,\n            link: \"https://www.instagram.com/nadunrds\",\n        },\n        {\n            name: \"Twitter\",\n            icon: faTwitter,\n            link: \"https://twitter.com/nadunrds\",\n        },\n    ];\n\n    return (\n        <Grid\n            ref={rootRef}\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            {profiles.map((profile) => (\n                <Grid item xs={12} sm={3} key={profile.name}>\n                    <Link\n                        target={\"_blank\"}\n                        href={profile.link}\n                        aria-label={profile.name}\n                    >\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            sx={{\n                                \"padding\": (theme) => theme.spacing(4),\n                                \"cursor\": \"pointer\",\n                                \"&:hover\": {\n                                    background: (theme) =>\n                                        theme.palette.mode === \"light\"\n                                            ? \"#cccccc\"\n                                            : \"#444444\",\n                                },\n                                \"color\": (theme) =>\n                                    theme.palette.mode === \"light\"\n                                        ? \"black\"\n                                        : \"white\",\n                            }}\n                        >\n                            <Grow in={offset > 0.5} timeout={1000}>\n                                <Container disableGutters>\n                                    <Grid\n                                        item\n                                        xs={6}\n                                        sx={{\n                                            margin: \"auto\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n                                        <ProfileIcon\n                                            icon={profile.icon}\n                                            size=\"3x\"\n                                        />\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        xs={6}\n                                        sx={{\n                                            margin: \"auto\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n                                        <Typography sx={{ fontWeight: \"bold\" }}>\n                                            {profile.name}\n                                        </Typography>\n                                    </Grid>\n                                </Container>\n                            </Grow>\n                        </Grid>\n                    </Link>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default Profiles;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport {\n    Grid,\n    LinearProgress,\n    styled,\n    Typography,\n    linearProgressClasses,\n} from \"@mui/material\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\n\nconst BorderLinearProgress = styled(LinearProgress)({\n    height: 10,\n    borderRadius: 5,\n    [`&.${linearProgressClasses.bar}`]: {\n        borderRadius: 5,\n    },\n});\n\ninterface Skill {\n    name: string;\n    percentage: number;\n}\n\nconst Skills = (): React.ReactElement => {\n    const {\n        ref: rootRef,\n        direction,\n        offset,\n    } = useScrollOffset<HTMLDivElement>();\n\n    const leftSideSkills: Skill[] = [\n        {\n            name: \"Programming\",\n            percentage: 90,\n        },\n        {\n            name: \"Time-series Analysis\",\n            percentage: 80,\n        },\n        {\n            name: \"Databases\",\n            percentage: 85,\n        },\n        {\n            name: \"Cloud Computing\",\n            percentage: 80,\n        },\n    ];\n    const rightSideSkills: Skill[] = [\n        {\n            name: \"Leadership\",\n            percentage: 80,\n        },\n        {\n            name: \"Teamwork\",\n            percentage: 95,\n        },\n        {\n            name: \"Communication\",\n            percentage: 95,\n        },\n        {\n            name: \"Attention to Detail\",\n            percentage: 90,\n        },\n    ];\n\n    const animationOffset: number = 0.2;\n    const currentOffset =\n        direction === 1 ? Math.min(offset + animationOffset, 1) : 1;\n    const currentOpacity =\n        direction === -1\n            ? Math.max(offset - animationOffset, 0) / (1 - animationOffset)\n            : 1;\n    const renderPercentage = (skill: Skill): React.ReactElement => {\n        const labelId = `skill-${skill.name\n            .toLowerCase()\n            .replace(/\\s/g, \"-\")}-progressbar-label`;\n        return (\n            <Grid item xs={12} md={6} style={{ opacity: currentOpacity }}>\n                <Typography id={labelId} sx={{ fontWeight: \"bold\" }}>\n                    {skill.name}\n                </Typography>\n                <Grid\n                    container\n                    spacing={3}\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={8} sm={10}>\n                        <BorderLinearProgress\n                            aria-labelledby={labelId}\n                            variant=\"determinate\"\n                            aria-valuemin={0}\n                            aria-valuemax={100}\n                            aria-valuenow={skill.percentage}\n                            value={skill.percentage * currentOffset}\n                        />\n                    </Grid>\n                    <Grid item xs={4} sm={2}>\n                        {skill.percentage} %\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    };\n\n    return (\n        <Grid\n            ref={rootRef}\n            container\n            spacing={3}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            {leftSideSkills.map((leftSideSkill, index) => (\n                <React.Fragment key={leftSideSkill.name}>\n                    {renderPercentage(leftSideSkill)}\n                    {index < rightSideSkills.length\n                        ? renderPercentage(rightSideSkills[index])\n                        : null}\n                </React.Fragment>\n            ))}\n        </Grid>\n    );\n};\n\nexport default Skills;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Container, Divider, Typography } from \"@mui/material\";\nimport React from \"react\";\n\ninterface HeadingProps {\n    children: React.ReactNode;\n}\n\nconst Heading = (props: HeadingProps): React.ReactElement => (\n    <Container maxWidth={false} disableGutters sx={{ my: 2 }}>\n        <Divider />\n        <Typography\n            variant=\"h5\"\n            component=\"h2\"\n            align=\"center\"\n            sx={{\n                fontWeight: \"bold\",\n                paddingTop: 5,\n                paddingBottom: 5,\n            }}\n        >\n            {props.children}\n        </Typography>\n        <Divider />\n    </Container>\n);\n\nexport default Heading;\n","/*\n * Copyright (c) 2021, Nadun De Silva. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *   http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Box, CircularProgress, Container, styled } from \"@mui/material\";\nimport dynamic from \"next/dynamic\";\nimport Head from \"next/head\";\nimport React, { useRef, useState } from \"react\";\n\nimport { Heading } from \"@/components/home\";\nimport Layout, { LayoutContent } from \"@/components/layout\";\n\nconst SectionContainer = styled(Container)(({ theme }) => ({\n    margin: 0,\n    paddingTop: `${theme.mixins.toolbar.minHeight ?? 0}px`,\n}));\n\nconst dynamicOptions = {\n    loading: () => (\n        <Box\n            sx={{ display: \"flex\", justifyContent: \"center\", py: 5 }}\n            data-testid=\"section-loader\"\n        >\n            <CircularProgress />\n        </Box>\n    ),\n    ssr: false,\n};\n\nconst AboutMe = dynamic<{}>(\n    async () => await import(\"@/components/home/AboutMe\"),\n    dynamicOptions,\n);\nconst Achievements = dynamic<{}>(\n    async () => await import(\"@/components/home/sections/Achievements\"),\n    dynamicOptions,\n);\nconst ContributedProjects = dynamic<{}>(\n    async () => await import(\"@/components/home/sections/ContributedProjects\"),\n    dynamicOptions,\n);\nconst Certifications = dynamic<{}>(\n    async () => await import(\"@/components/home/sections/Certifications\"),\n    dynamicOptions,\n);\nconst Experience = dynamic<{}>(\n    async () => await import(\"@/components/home/sections/Experience\"),\n    dynamicOptions,\n);\nconst Profiles = dynamic<{}>(\n    async () => await import(\"@/components/home/sections/Profiles\"),\n    dynamicOptions,\n);\nconst Skills = dynamic<{}>(\n    async () => await import(\"@/components/home/sections/Skills\"),\n    dynamicOptions,\n);\n\ninterface Section {\n    name: string;\n    ref: React.RefObject<HTMLDivElement>;\n    Component: React.ComponentType<{}>;\n    sectionId: string;\n}\n\nconst Home = (): React.ReactElement => {\n    const [isWelcomeBannerLoaded, setWelcomeBannerLoaded] =\n        useState<boolean>(false);\n    const WelcomeBanner = dynamic<{}>(\n        async () =>\n            await import(\"@/components/home/WelcomeBanner\").then(\n                async (component) => {\n                    setWelcomeBannerLoaded(true);\n                    return await Promise.resolve(component);\n                },\n            ),\n        {\n            loading: () => (\n                <Box\n                    sx={{\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        height: \"100vh\",\n                    }}\n                    data-testid=\"section-loader\"\n                >\n                    <CircularProgress sx={{ margin: \"auto\" }} />\n                </Box>\n            ),\n            ssr: false,\n        },\n    );\n\n    const pageSections: Section[] = [\n        {\n            name: \"Experience\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Experience,\n            sectionId: \"experience\",\n        },\n        {\n            name: \"Achievements\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Achievements,\n            sectionId: \"achievements\",\n        },\n        {\n            name: \"Skills\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Skills,\n            sectionId: \"skills\",\n        },\n        {\n            name: \"Certifications\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Certifications,\n            sectionId: \"certifications\",\n        },\n        {\n            name: \"Profiles\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Profiles,\n            sectionId: \"profiles\",\n        },\n        {\n            name: \"Contributed Projects\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: ContributedProjects,\n            sectionId: \"contributed-projects\",\n        },\n    ];\n\n    const generateSection = (\n        title: string,\n        section: React.ReactElement,\n        testId: string,\n    ): React.ReactElement => (\n        <Container maxWidth={false} disableGutters data-testid={testId}>\n            <Heading>{title}</Heading>\n            <Container maxWidth={false} disableGutters sx={{ py: 3 }}>\n                {section}\n            </Container>\n        </Container>\n    );\n    const layoutContent = (\n        <LayoutContent>\n            <SectionContainer maxWidth={false} disableGutters>\n                {generateSection(\"About Me\", <AboutMe />, \"about-me-section\")}\n            </SectionContainer>\n            <React.Fragment>\n                {pageSections.map((section: Section) => (\n                    <SectionContainer\n                        maxWidth={false}\n                        disableGutters\n                        key={section.name}\n                        id={section.sectionId}\n                    >\n                        {generateSection(\n                            section.name,\n                            <section.Component />,\n                            `${section.sectionId}-section`,\n                        )}\n                    </SectionContainer>\n                ))}\n            </React.Fragment>\n        </LayoutContent>\n    );\n    return (\n        <Container maxWidth={false} disableGutters data-testid={\"home-page\"}>\n            <Head>\n                <title>\n                    Nadun De Silva | An aspiring Software Engineer and ML\n                    Enthusiast\n                </title>\n            </Head>\n            {isWelcomeBannerLoaded ? (\n                <Layout>\n                    <WelcomeBanner />\n                    {layoutContent}\n                </Layout>\n            ) : (\n                <WelcomeBanner />\n            )}\n        </Container>\n    );\n};\n\nexport default Home;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  "],"names":["ProfilePhoto","styled","Image","width","height","InstituteIcon","FontAwesomeIcon","marginRight","theme","spacing","ItemDivider","Divider","marginTop","marginBottom","profilePhoto","gridWidth","sx","item","xs","paddingTop","src","Photos","alt","sizes","placeholder","layout","objectFit","blurDataURL","contactItem","name","value","md","fontWeight","container","justifyContent","alignItems","display","align","color","icon","faMapMarkerAlt","BannerImage","zIndex","useTheme","isLarge","useMediaQuery","breakpoints","up","isMedium","downloadButtonSize","maxWidth","disableGutters","position","backgroundColor","textAlign","top","bottom","left","right","pt","px","variant","component","fontSize","target","href","size","mixins","toolbar","minHeight","Images","priority","role","pr","faChevronDown","classes","imageListItemImageOverlay","FullSizeImageListItem","ImageListItem","ImageListItemImageOverlay","Grid","ROW_HEIGHT","useScrollOffset","rootRef","ref","offset","achievementSections","title","photo","animationTimeoutFactor","renderImageListItem","achievementIndex","rowCount","totalColumns","achievementSection","rows","cols","in","timeout","className","Math","ceil","isAboveMd","rowHeight","DEEP_LEARNING_ISSUER","LINUX_FOUNDATION","direction","certifications","type","link","image","Logos","issuer","xsWidth","values","smWidth","sm","mdWidth","xlWidth","xl","imageSizes","map","certification","index","padding","flexDirection","props","margin","palette","mode","flexGrow","label","ProjectLogo","renderCarouselItem","logo","marginLeft","isTimelineLeftAligned","down","locationIcon","timePeriod","description","institute","isOnLeft","elevation","ProfileIcon","profiles","faLinkedin","faGithub","faMedium","faGraduationCap","faFacebook","faInstagram","faTwitter","profile","background","BorderLinearProgress","LinearProgress","borderRadius","linearProgressClasses","rightSideSkills","percentage","currentOffset","min","currentOpacity","max","renderPercentage","skill","labelId","toLowerCase","replace","style","opacity","id","leftSideSkill","length","Container","my","Typography","paddingBottom","children","SectionContainer","dynamicOptions","loading","Box","py","CircularProgress","ssr","AboutMe","dynamic","Achievements","ContributedProjects","Certifications","Experience","Profiles","Skills","useState","isWelcomeBannerLoaded","setWelcomeBannerLoaded","WelcomeBanner","then","Promise","resolve","pageSections","useRef","Component","sectionId","generateSection","section","testId","layoutContent","window","__NEXT_P","push"],"sourceRoot":""}