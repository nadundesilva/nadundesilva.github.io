{"version":3,"file":"static/chunks/pages/index-50bd9b0e2a2cbf1c45a6.js","mappings":"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","sources":["webpack://_N_E/./components/Layout/theme.tsx","webpack://_N_E/./components/Layout/Layout.tsx","webpack://_N_E/./components/Layout/RouterBreadcrumbs.tsx","webpack://_N_E/./components/Layout/LayoutContent.tsx","webpack://_N_E/./components/Layout/scrolling.tsx","webpack://_N_E/./components/Layout/index.tsx","webpack://_N_E/./components/Heading.tsx","webpack://_N_E/./components/Home/AboutMe.tsx","webpack://_N_E/./components/Home/Achievements.tsx","webpack://_N_E/./components/Home/Certifications.tsx","webpack://_N_E/./components/Home/ContributedProjects.tsx","webpack://_N_E/./components/Home/Education.tsx","webpack://_N_E/./components/Home/Experience.tsx","webpack://_N_E/./components/Home/Profiles.tsx","webpack://_N_E/./components/Home/Skills.tsx","webpack://_N_E/./components/Home/WelcomeBanner.tsx","webpack://_N_E/./pages/index.tsx","webpack://_N_E/"],"sourcesContent":["import { useMemo, useEffect, useState } from \"react\";\nimport { Theme, useMediaQuery } from \"@material-ui/core\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport indigo from \"@material-ui/core/colors/indigo\";\n\nexport type ColorScheme = \"dark\" | \"light\";\nconst colorSchemes = [\"dark\", \"light\"];\n\nconst COLOR_SCHEME_KEY = \"COLOR_SCHEME\";\n\nconst getStoredColorScheme = (): ColorScheme | null => {\n    let storedColorScheme: string | null;\n    try {\n        storedColorScheme = localStorage.getItem(COLOR_SCHEME_KEY);\n    } catch {\n        storedColorScheme = null;\n    }\n    return storedColorScheme !== null && colorSchemes.includes(storedColorScheme)\n        ? storedColorScheme as ColorScheme\n        : null;\n};\n\nconst useTheme = (): { theme: Theme, colorScheme: ColorScheme, setColorScheme: (newColorScheme: ColorScheme) => void } => {\n    const preferedColorScheme: ColorScheme = useMediaQuery(\"(prefers-color-scheme: dark)\") ? \"dark\" : \"light\";\n    const initialStoredColorScheme = getStoredColorScheme();\n\n    const [colorScheme, setColorScheme] = useState<ColorScheme>(\n        initialStoredColorScheme === null ? preferedColorScheme : initialStoredColorScheme\n    );\n\n    const storageListener = (): void => {\n        const storedColorScheme = getStoredColorScheme();\n        if (storedColorScheme !== null) {\n            setColorScheme(storedColorScheme);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"storage\", storageListener);\n        return (): void => window.removeEventListener(\"storage\", storageListener);\n    });\n\n    const theme = useMemo(\n        () => createTheme({\n            palette: {\n                type: colorScheme,\n                primary: indigo,\n                secondary: indigo\n            },\n            overrides: {\n                MuiCssBaseline: {\n                    \"@global\": {\n                        \"::-webkit-scrollbar\": {\n                            width: \"10px\"\n                        },\n                        \"::-webkit-scrollbar-track\": {\n                            backgroundColor: \"darkgrey\"\n                        },\n                        \"::-webkit-scrollbar-thumb\": {\n                            backgroundColor: \"#555555\",\n                            boxShadow: \"inset 0 0 6px rgba(0, 0, 0, 0.3)\"\n                        }\n                    }\n                }\n            }\n        }),\n        [colorScheme]\n    );\n    return {\n        theme,\n        colorScheme,\n        setColorScheme: (newColorScheme: ColorScheme): void => {\n            try {\n                localStorage.setItem(COLOR_SCHEME_KEY, newColorScheme);\n            } catch {\n            }\n            setColorScheme(newColorScheme);\n        }\n    };\n};\n\nexport default useTheme;\n","import { AppBar, CssBaseline, Fab, IconButton, Theme, Toolbar, Tooltip, Typography, useScrollTrigger, Zoom } from \"@material-ui/core\";\nimport { makeStyles, createStyles, ThemeProvider } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronUp, faSun, faMoon } from \"@fortawesome/free-solid-svg-icons\";\nimport React, { useRef } from \"react\";\nimport useTheme from \"./theme\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        themeToggle: {\n            marginLeft: theme.spacing(5)\n        },\n        grow: {\n            flexGrow: 1\n        },\n        fab: {\n            position: \"fixed\",\n            bottom: theme.spacing(2),\n            right: theme.spacing(2)\n        },\n        children: {\n            overflowX: \"hidden\"\n        }\n    })\n);\n\ninterface LayoutProps {\n    children: React.ReactNode,\n    appBarItems?: React.ReactElement | React.ReactElement[],\n    window?: () => Window,\n};\n\nconst Layout = ({ children, appBarItems, window }: LayoutProps): React.ReactElement => {\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: window !== undefined ? window() : undefined\n    });\n\n    const classes = useStyles();\n    const scrollToTopRef = useRef<HTMLDivElement>(null);\n\n    const { theme, colorScheme, setColorScheme } = useTheme();\n    const nextColorScheme = colorScheme === \"dark\" ? \"light\" : \"dark\";\n    const onThemeToggleChange = (): void => setColorScheme(nextColorScheme);\n\n    const appBar = React.cloneElement((\n        <AppBar>\n            <Toolbar>\n                <Typography variant=\"h5\" component=\"h1\">Nadun De Silva</Typography>\n                <div className={classes.grow} />\n                {appBarItems}\n                <Tooltip title={`Change to ${nextColorScheme} theme`}>\n                    <IconButton className={classes.themeToggle} size=\"small\" onClick={onThemeToggleChange}>\n                        <FontAwesomeIcon icon={nextColorScheme === \"dark\" ? faMoon : faSun} transform={\"grow-4\"}/>\n                    </IconButton>\n                </Tooltip>\n            </Toolbar>\n        </AppBar>\n    ), {\n        elevation: trigger ? 4 : 0\n    });\n\n    const handleClick = (): void => {\n        scrollToTopRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    };\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            {appBar}\n            <Toolbar ref={scrollToTopRef}/>\n            <div className={classes.children}>\n                {children}\n            </div>\n            <Zoom in={trigger}>\n                <div onClick={handleClick} role=\"presentation\" className={classes.fab}>\n                    <Fab color=\"primary\" size=\"small\" aria-label=\"scroll back to top\">\n                        <FontAwesomeIcon icon={faChevronUp}/>\n                    </Fab>\n                </div>\n            </Zoom>\n        </ThemeProvider>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { useRouter } from \"next/router\";\nimport Link from \"next/link\";\nimport { Breadcrumbs, Link as BreadcrumbLink, Theme, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            margin: theme.spacing(3)\n        }\n    })\n);\n\nconst BREADCRUMBS_MAP: {[key: string]: string} = {\n    \"/certifications\": \"Certification\"\n};\n\nconst RouterBreadcrumbs = (): React.ReactElement | null => {\n    const router = useRouter();\n    const classes = useStyles();\n    const pathnames = router.pathname.split(\"/\").filter((x) => x);\n    return (\n        <Breadcrumbs aria-label=\"breadcrumb\" className={classes.root}\n            separator={<FontAwesomeIcon icon={faChevronRight} transform={\"shrink-4\"}/>}>\n            <BreadcrumbLink color=\"inherit\" href=\"/\" component={Link}>\n                Home\n            </BreadcrumbLink>\n            {\n                pathnames.map((value, index) => {\n                    const last = index === pathnames.length - 1;\n                    const to = `/${pathnames.slice(0, index + 1).join(\"/\")}`;\n\n                    return (\n                        last\n                            ? (\n                                <Typography color=\"textPrimary\" key={to}>\n                                    {BREADCRUMBS_MAP[to]}\n                                </Typography>\n                            )\n                            : (\n                                <BreadcrumbLink color=\"inherit\" href={to} component={Link} key={to}>\n                                    {BREADCRUMBS_MAP[to]}\n                                </BreadcrumbLink>\n                            )\n                    );\n                })\n            }\n        </Breadcrumbs>\n    );\n};\n\nexport default RouterBreadcrumbs;\n","import React from \"react\";\nimport { Theme } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport RouterBreadcrumbs from \"./RouterBreadcrumbs\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const horizontalMargin = (margin: number): { marginLeft: number, marginRight: number } => ({\n        marginLeft: theme.spacing(margin),\n        marginRight: theme.spacing(margin)\n    });\n    return createStyles({\n        content: {\n            marginBottom: theme.spacing(5),\n            [theme.breakpoints.down(\"md\")]: horizontalMargin(0),\n            [theme.breakpoints.up(\"lg\")]: horizontalMargin(30),\n            [theme.breakpoints.up(\"xl\")]: horizontalMargin(60)\n        }\n    });\n});\n\ninterface LayoutContentProps {\n    children: React.ReactNode,\n};\n\nconst LayoutContent = ({ children }: LayoutContentProps): React.ReactElement => {\n    const classes = useStyles();\n    return (\n        <div className={classes.content}>\n            <RouterBreadcrumbs/>\n            {children}\n        </div>\n    );\n};\n\nexport default LayoutContent;\n","import { MutableRefObject, useEffect, useState, useRef } from \"react\";\n\ntype Direction = -1 | 0 | 1;\n\ninterface UseScrollOffsetReturnValue<T> {\n    ref: MutableRefObject<T | null>,\n    direction: Direction,\n    offset: number,\n}\n\nfunction useScrollOffset<T extends Element>(): UseScrollOffsetReturnValue<T> {\n    const ref = useRef<T>(null);\n    const [direction, setDirection] = useState<Direction>(0);\n    const [offset, setOffset] = useState<number>(0);\n\n    const updateOffset = (): void => {\n        if (ref.current !== null) {\n            const refBBox = ref.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight;\n\n            let direction: Direction;\n            let newOffset: number;\n            if (refBBox.top >= viewportHeight) {\n                direction = 1;\n                newOffset = 0;\n            } else if (refBBox.bottom <= 0) {\n                direction = -1;\n                newOffset = 0;\n            } else if (refBBox.top >= viewportHeight / 2) {\n                const fullPageHeight = document.documentElement.offsetHeight;\n                const yOffset = window.pageYOffset;\n                const pageBottomOffset = (yOffset + viewportHeight * 1.5 - fullPageHeight) / (viewportHeight / 2);\n                const clientRectOffset = 2 - refBBox.top / (viewportHeight / 2);\n\n                direction = 1;\n                newOffset = pageBottomOffset > clientRectOffset ? pageBottomOffset : clientRectOffset;\n            } else if (refBBox.bottom <= viewportHeight / 2) {\n                direction = -1;\n                newOffset = (refBBox.bottom) / (viewportHeight / 2);\n            } else {\n                direction = 0;\n                newOffset = 1;\n            }\n            setDirection(direction);\n            setOffset(newOffset);\n        }\n    };\n\n    const handleScroll = (): void => {\n        window.requestAnimationFrame(updateOffset);\n    };\n\n    useEffect(() => {\n        window.requestAnimationFrame(updateOffset);\n        window.addEventListener(\"scroll\", handleScroll);\n        return (): void => window.removeEventListener(\"scroll\", handleScroll);\n    });\n\n    return {\n        ref,\n        direction,\n        offset: Math.min(Math.max(offset, 0), 1)\n    };\n}\n\nexport default useScrollOffset;\n","import Layout from \"./Layout\";\nimport LayoutContent from \"./LayoutContent\";\nimport useScrollOffset from \"./scrolling\";\n\nexport default Layout;\n\nexport {\n    LayoutContent,\n    useScrollOffset\n};\n","import React from \"react\";\nimport { Divider, Theme, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        sectionTitle: {\n            marginTop: theme.spacing(2),\n            marginBottom: theme.spacing(3)\n        },\n        sectionTitleText: {\n            fontWeight: \"bold\",\n            paddingTop: theme.spacing(5),\n            paddingBottom: theme.spacing(5)\n        }\n    })\n);\n\ninterface HeadingProps {\n    children: React.ReactNode,\n};\n\nconst Heading = (props: HeadingProps): React.ReactElement => {\n    const classes = useStyles();\n    return (\n        <div className={classes.sectionTitle}>\n            <Divider/>\n            <Typography variant=\"h5\" align=\"center\" className={classes.sectionTitleText}>\n                {props.children}\n            </Typography>\n            <Divider/>\n        </div>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { Avatar, Divider, Grid, GridSize, Hidden, Theme, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst profilePicture = \"/assets/profile-photo.jpg\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const descriptionSeparatorMargin = 2;\n    return createStyles({\n        descriptionSeparator: {\n            marginTop: theme.spacing(descriptionSeparatorMargin),\n            marginBottom: theme.spacing(descriptionSeparatorMargin)\n        },\n        profilePhoto: {\n            width: \"100%\",\n            height: \"auto\"\n        },\n        profilePhotoPadding: {\n            padding: theme.spacing(2)\n        },\n        textIcon: {\n            marginRight: theme.spacing(1)\n        },\n        contactInfoItemHeader: {\n            fontWeight: \"bold\"\n        }\n    });\n});\n\nconst AboutMe = (): React.ReactElement => {\n    const classes = useStyles();\n\n    const profilePhoto = (gridWidth: GridSize): React.ReactElement => (\n        <Grid item xs={gridWidth}>\n            <Avatar alt=\"Nadun De Silva\" src={profilePicture} className={classes.profilePhoto}/>\n        </Grid>\n    );\n\n    const contactItem = (name: string, value: string): React.ReactElement => (\n        <Grid item xs={12} md={4}>\n            <Typography className={classes.contactInfoItemHeader}>\n                {name}:\n            </Typography>\n            <Typography>{value}</Typography>\n        </Grid>\n    );\n\n    return (\n        <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            <Hidden mdUp>{profilePhoto(12)}</Hidden>\n            <Grid item xs={12} md={8}>\n                <Typography align={\"justify\"}>\n                    I am currently leading the Observability area of Choreo at WSO2.\n                    I have several years of working experience as a Software Engineer\n                    working on multiple Research &amp; Development projects at WSO2.\n                    I love learning about new technologies and is particularly\n                    interested in Deep Learning.\n                </Typography>\n                <Divider className={classes.descriptionSeparator} />\n                <Typography>Bachelor of Science in Engineering</Typography>\n                <Typography display=\"inline\" color=\"textSecondary\">\n                    <FontAwesomeIcon icon={faMapMarkerAlt} className={classes.textIcon}/>\n                    University of Moratuwa\n                </Typography>\n                <Divider className={classes.descriptionSeparator} />\n                <Grid container spacing={3} justifyContent=\"center\">\n                    {contactItem(\"Phone\", \"+94 778 222 607\")}\n                    {contactItem(\"Email\", \"nadunrds@gmail.com\")}\n                    {contactItem(\"Website\", \"nadundesilva.github.io\")}\n                </Grid>\n            </Grid>\n            <Hidden smDown>{profilePhoto(4)}</Hidden>\n        </Grid>\n    );\n};\n\nexport default AboutMe;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport { Grid, Hidden, ImageList, ImageListItem, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useScrollOffset } from \"@/components/Layout\";\nimport Image from \"next/image\";\n\nconst wso2OutstandingContributorImage = \"/assets/achievements/wso2-outstanding-contributor.jpg\";\nconst nasaSpaceApps2017 = \"/assets/achievements/nasa-space-apps-2017.jpg\";\nconst hsbcYouthEnterpriseAwards2015 = \"/assets/achievements/hsbc-youth-enterprise-awards-2015.jpg\";\nconst deansList2017 = \"/assets/achievements/deans-list-2017.jpg\";\nconst angelHack2016 = \"/assets/achievements/angel-hack-2016.jpg\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        imageListItem: {\n            height: \"auto\"\n        },\n        imageListItemImageContainer: {\n            position: \"relative\",\n            \"&:hover\": {\n                \"& $imageListItemImageOverlay\": {\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n                    zIndex: 1\n                }\n            }\n        },\n        imageListItemImageOverlay: {\n            color: \"#ffffff\",\n            position: \"absolute\",\n            textAlign: \"center\"\n        },\n        imageListItemText: {\n            fontWeight: \"bold\"\n        }\n    })\n);\n\nconst NASA_SPACE_APPS_2017_TITLE = \"Global Finalist - Galactic Impact - NASA Space Apps Challenge 2017\";\nconst PLACEMENTS_IN_DEANS_LIST_TITLE = \"Placements in Dean’s List\";\nconst WSO2_OUTSTANDING_CONTRIBUTOR_TITLE = \"WSO2 Sustained Outstanding Contribution Award\";\nconst HSBC_YOUTH_ENTERPRISE_AWARDS_2015_TITLE = \"Finalist - British Council HSBC Youth Enterprise Awards 2015\";\nconst ANGEL_HACK_2016_TITLE = \"Finalist - Angel Hack 2016\";\n\ninterface AchievementSection {\n    title: string,\n    imageLink: string,\n    animationOffset: number,\n};\n\nconst ROW_HEIGHT = 300;\n\nconst Achievements = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const achievementSections: AchievementSection[] = [\n        {\n            title: NASA_SPACE_APPS_2017_TITLE,\n            imageLink: nasaSpaceApps2017,\n            animationOffset: 0.4\n        },\n        {\n            title: PLACEMENTS_IN_DEANS_LIST_TITLE,\n            imageLink: deansList2017,\n            animationOffset: 0.1\n        },\n        {\n            title: WSO2_OUTSTANDING_CONTRIBUTOR_TITLE,\n            imageLink: wso2OutstandingContributorImage,\n            animationOffset: 0.5\n        },\n        {\n            title: HSBC_YOUTH_ENTERPRISE_AWARDS_2015_TITLE,\n            imageLink: hsbcYouthEnterpriseAwards2015,\n            animationOffset: 0.3\n        },\n        {\n            title: ANGEL_HACK_2016_TITLE,\n            imageLink: angelHack2016,\n            animationOffset: 0.2\n        }\n    ];\n\n    const renderImageListItem = (achievementIndex: number, rowCount: number): React.ReactElement => {\n        const achievementSection: AchievementSection = achievementSections[achievementIndex];\n        const imageOffset = Math.max(offset - achievementSection.animationOffset, 0) / (1 - achievementSection.animationOffset);\n        return (\n            <ImageListItem rows={rowCount} cols={1}\n                className={classNames(classes.imageListItem, classes.imageListItemImageContainer)}\n                style={{\n                    transform: `scale(${imageOffset}, ${imageOffset})`,\n                    opacity: imageOffset\n                }}>\n                <Grid container justifyContent=\"center\" alignItems=\"center\" className={classes.imageListItemImageOverlay}>\n                    <Grid item xs={6}>\n                        <Typography className={classes.imageListItemText}>{achievementSection.title}</Typography>\n                    </Grid>\n                </Grid>\n                <Image src={achievementSection.imageLink} alt={achievementSection.title} layout=\"fill\" objectFit=\"cover\"/>\n            </ImageListItem>\n        );\n    };\n\n    return (\n        <div ref={rootRef}>\n            <Hidden smDown>\n                <ImageList rowHeight={ROW_HEIGHT} cols={3}>\n                    <ImageListItem rows={2} cols={1} className={classes.imageListItem}>\n                        <ImageList rowHeight={ROW_HEIGHT} cols={1}>\n                            {renderImageListItem(0, 1)}\n                            {renderImageListItem(1, 1)}\n                        </ImageList>\n                    </ImageListItem>\n                    {renderImageListItem(2, 2)}\n                    <ImageListItem rows={2} cols={1} className={classes.imageListItem}>\n                        <ImageList rowHeight={ROW_HEIGHT} cols={1}>\n                            {renderImageListItem(3, 1)}\n                            {renderImageListItem(4, 1)}\n                        </ImageList>\n                    </ImageListItem>\n                </ImageList>\n            </Hidden>\n            <Hidden mdUp>\n                <ImageList cols={1}>\n                    {renderImageListItem(0, 1)}\n                    {renderImageListItem(1, 1)}\n                    {renderImageListItem(2, 1)}\n                    {renderImageListItem(3, 1)}\n                    {renderImageListItem(4, 1)}\n                </ImageList>\n            </Hidden>\n        </div>\n    );\n};\n\nexport default Achievements;\n","import React from \"react\";\nimport { Card, CardActionArea, CardContent, CardMedia, Chip, Grid, Theme, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useScrollOffset } from \"@/components/Layout\";\n\nconst ckadLogo = \"/assets/certifications/ckad.png\";\nconst ckaLogo = \"/assets/certifications/cka.png\";\nconst deepLearningAiLogo = \"/assets/certifications/deep-learning-ai.png\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const certificationTypeMargin = theme.spacing(2);\n    return createStyles({\n        certificationCardContainer: {\n            padding: theme.spacing(2)\n        },\n        certificationCard: {\n            height: \"100%\"\n        },\n        certificationImage: {\n            width: \"50%\",\n            height: \"auto\",\n            margin: \"auto\",\n            padding: theme.spacing(2)\n        },\n        certificationIssuer: {\n            marginTop: theme.spacing(2)\n        },\n        certificationType: {\n            marginTop: certificationTypeMargin,\n            marginBottom: certificationTypeMargin\n        }\n    });\n});\n\nconst DEEP_LEARNING_ISSUER = \"Deeplearning.AI\";\nconst LINUX_FOUNDATION = \"Linux Foundation\";\n\ninterface Certificate {\n    name: string,\n    type: \"Course\" | \"Certification\" | \"Specialization\",\n    link: string,\n    image: string,\n    issuer: string,\n};\n\nconst Certifications = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, direction, offset } = useScrollOffset<HTMLDivElement>();\n\n    const certifications: Certificate[] = [\n        {\n            name: \"Build Basic Generative Adversarial Networks (GANs)\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/fed56feb8ba81177e6467779f22c0851\",\n            image: deepLearningAiLogo,\n            issuer: DEEP_LEARNING_ISSUER\n        },\n        {\n            name: \"Deep Learning\",\n            type: \"Specialization\",\n            link: \"https://coursera.org/share/8e5db53bfef4c4b27f79004022edad72\",\n            image: deepLearningAiLogo,\n            issuer: DEEP_LEARNING_ISSUER\n        },\n        {\n            name: \"AI For Everyone\",\n            type: \"Course\",\n            link: \"https://coursera.org/share/e8ae9a481ef41f070d6c7b00887e8b66\",\n            image: deepLearningAiLogo,\n            issuer: DEEP_LEARNING_ISSUER\n        },\n        {\n            name: \"Certificed Kubernetes Administrator\",\n            type: \"Certification\",\n            link: \"https://www.youracclaim.com/badges/8241114b-7435-460a-a08f-9d33304c1470?source=linked_in_profile\",\n            image: ckaLogo,\n            issuer: LINUX_FOUNDATION\n        },\n        {\n            name: \"Certificed Kubernetes Application Developer\",\n            type: \"Certification\",\n            link: \"https://www.youracclaim.com/badges/e9df4128-2017-41c3-9e7d-028e37176243/linked_in_profile\",\n            image: ckadLogo,\n            issuer: LINUX_FOUNDATION\n        }\n    ];\n\n    const generateViewCertificateHandler = (link: string) => (): void => {\n        window.open(link, \"_blank\");\n    };\n\n    const translation = (1 - offset) * 20;\n    return (\n        <Grid ref={rootRef} container justifyContent=\"center\" alignItems=\"stretch\">\n            {\n                certifications.map((certification, index) => (\n                    <Grid item xs={12} sm={6} md={4} xl={3} key={index} className={classes.certificationCardContainer}>\n                        <Card onClick={generateViewCertificateHandler(certification.link)}\n                            className={classes.certificationCard}\n                            style={{\n                                transform: `translateY(${direction === 1 ? translation : -translation}vw) scale(${offset})`,\n                                opacity: offset\n                            }}>\n                            <CardActionArea>\n                                <CardMedia\n                                    component=\"img\"\n                                    alt={certification.name}\n                                    height=\"140\"\n                                    image={certification.image}\n                                    title={certification.name}\n                                    classes={{\n                                        root: classes.certificationImage\n                                    }}\n                                />\n                                <CardContent>\n                                    <Typography variant=\"h6\" component=\"h2\" align=\"center\">\n                                        {certification.name}\n                                    </Typography>\n                                    <Chip label={certification.type} color=\"secondary\" size=\"small\"\n                                        className={classes.certificationType}/>\n                                    <Typography color=\"textSecondary\" className={classes.certificationIssuer}>\n                                        Issued by {certification.issuer}\n                                    </Typography>\n                                </CardContent>\n                            </CardActionArea>\n                        </Card>\n                    </Grid>\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default Certifications;\n","import React from \"react\";\nimport { Grid, Theme } from \"@material-ui/core\";\nimport { makeStyles, createStyles, useTheme } from \"@material-ui/core/styles\";\nimport { useScrollOffset } from \"@/components/Layout\";\nimport Image from \"next/image\";\n\nconst ballerina = \"/assets/projects/ballerina.svg\";\nconst ballerinaWhite = \"/assets/projects/ballerina-white.svg\";\nconst cellery = \"/assets/projects/cellery.svg\";\nconst celleryWhite = \"/assets/projects/cellery-white.svg\";\nconst siddhi = \"/assets/projects/siddhi.svg\";\nconst siddhiWhite = \"/assets/projects/siddhi-white.svg\";\nconst choreo = \"/assets/projects/choreo.svg\";\nconst choreoWhite = \"/assets/projects/choreo-white.svg\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        projectLogo: {\n            display: \"block\",\n            margin: \"auto\",\n            padding: theme.spacing(5),\n            width: \"100%\"\n        }\n    })\n);\n\nconst ContributedProjects = (): React.ReactElement => {\n    const classes = useStyles();\n    const theme = useTheme();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const renderCarouselItem = (imageLink: string, blackThemeImageLink: string, alt: string): React.ReactElement => (\n        <Grid item xs={12} sm={4} md={3}\n            style={{\n                transform: `scale(${offset}, ${offset})`,\n                opacity: offset\n            }}\n        >\n            <Image alt={alt} className={classes.projectLogo} layout=\"fill\" objectFit=\"contain\"\n                src={theme?.palette?.type === \"light\" ? imageLink : blackThemeImageLink}/>\n        </Grid>\n    );\n\n    return (\n        <Grid ref={rootRef} container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            {renderCarouselItem(choreo, choreoWhite, \"Choreo\")}\n            {renderCarouselItem(ballerina, ballerinaWhite, \"Ballerina\")}\n            {renderCarouselItem(cellery, celleryWhite, \"Cellery\")}\n            {renderCarouselItem(siddhi, siddhiWhite, \"Siddhi\")}\n        </Grid>\n    );\n};\n\nexport default ContributedProjects;\n","import React from \"react\";\nimport { Box, Button, Paper, Theme, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, createStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Timeline, TimelineItem, TimelineOppositeContent, TimelineSeparator, TimelineDot, TimelineConnector, TimelineContent } from \"@material-ui/lab\";\nimport { useRouter } from \"next/router\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const instituteIconPadding = 0.5;\n    return createStyles({\n        timeline: {\n            marginBottom: theme.spacing(5)\n        },\n        timeLineItemContent: {\n            padding: theme.spacing(2),\n            marginBottom: theme.spacing(5)\n        },\n        timeLineItemTitle: {\n            fontWeight: \"bold\"\n        },\n        instituteIconRight: {\n            marginLeft: theme.spacing(instituteIconPadding)\n        },\n        instituteIconLeft: {\n            marginRight: theme.spacing(instituteIconPadding)\n        }\n    });\n});\n\ninterface EducationItem {\n    name: string,\n    timePeriod: string,\n    description: string,\n    institute: string,\n}\n\nconst Education = (): React.ReactElement => {\n    const classes = useStyles();\n    const router = useRouter();\n    const theme = useTheme();\n    const isTimelineLeftAligned = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const educationItems: EducationItem[] = [\n        {\n            name: \"Bachelor of Science in Engineering\",\n            timePeriod: \"Dec 2017\",\n            description: \"Studied Computer Science and Engineering & completed a First Class Honors Degree.\",\n            institute: \"University of Moratuwa\"\n        },\n        {\n            name: \"Certified Kubernetes Application Developer\",\n            timePeriod: \"Jan 2020\",\n            description: \"Achieved Certified Kubernetes Application Developer Certification.\",\n            institute: \"Linux Foundation\"\n        },\n        {\n            name: \"Certified Kubernetes Administrator\",\n            timePeriod: \"Dec 2020\",\n            description: \"Achieved Certified Kubernetes Administrator Certification.\",\n            institute: \"Linux Foundation\"\n        }\n    ];\n    const instituteIcon = <FontAwesomeIcon className={classes.instituteIconLeft} icon={faMapMarkerAlt}/>;\n    const timeline = (\n        <Timeline align={isTimelineLeftAligned ? \"left\" : \"alternate\"} className={classes.timeline}>\n            {\n                educationItems.map((item: EducationItem, index: number) => (\n                    <TimelineItem key={item.name}>\n                        <TimelineOppositeContent>\n                            <Typography variant=\"body2\" color=\"textSecondary\">\n                                {item.timePeriod}\n                            </Typography>\n                        </TimelineOppositeContent>\n                        <TimelineSeparator>\n                            <TimelineDot color=\"primary\"/>\n                            <TimelineConnector/>\n                        </TimelineSeparator>\n                        <TimelineContent>\n                            <Paper elevation={3} className={classes.timeLineItemContent}>\n                                <Typography variant=\"body1\" component=\"h6\" className={classes.timeLineItemTitle}>\n                                    {item.name}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {item.description}\n                                </Typography>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {(isTimelineLeftAligned || index % 2 === 0) && (\n                                        <React.Fragment>{instituteIcon}&nbsp;</React.Fragment>\n                                    )}\n                                    {item.institute}\n                                    {(!isTimelineLeftAligned && index % 2 === 1) && (\n                                        <React.Fragment>&nbsp;{instituteIcon}</React.Fragment>\n                                    )}\n                                </Typography>\n                            </Paper>\n                        </TimelineContent>\n                    </TimelineItem>\n                ))\n            }\n        </Timeline>\n    );\n    const viewMore = async(): Promise<boolean> => await router.push(\"/certifications\");\n    return (\n        <React.Fragment>\n            {timeline}\n            <Box display=\"flex\" justifyContent=\"flex-end\">\n                <Button color=\"primary\" variant=\"contained\" size=\"small\" onClick={viewMore}>\n                    View Certifications\n                </Button>\n            </Box>\n        </React.Fragment>\n    );\n};\n\nexport default Education;\n","import React from \"react\";\nimport { Paper, Theme, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, createStyles, useTheme } from \"@material-ui/core/styles\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMapMarkerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Timeline, TimelineItem, TimelineOppositeContent, TimelineSeparator, TimelineDot, TimelineConnector, TimelineContent } from \"@material-ui/lab\";\nimport { useScrollOffset } from \"@/components/Layout\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    const instituteIconPadding = 0.5;\n    return createStyles({\n        timeLineItemContent: {\n            padding: theme.spacing(2),\n            marginBottom: theme.spacing(5)\n        },\n        timeLineItemTitle: {\n            fontWeight: \"bold\"\n        },\n        instituteIconRight: {\n            marginLeft: theme.spacing(instituteIconPadding)\n        },\n        instituteIconLeft: {\n            marginRight: theme.spacing(instituteIconPadding)\n        }\n    });\n});\n\ninterface ExperienceItem {\n    name: string,\n    timePeriod: string,\n    description: string,\n    institute: string,\n}\n\nconst Experience = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, offset } = useScrollOffset<Element>();\n    const theme = useTheme();\n    const isTimelineLeftAligned = useMediaQuery(theme.breakpoints.down(\"xs\"));\n\n    const experienceItems: ExperienceItem[] = [\n        {\n            name: \"Associate Technical Lead\",\n            timePeriod: \"June 2021 to Now\",\n            description: \"Lead Choreo Observability Team as well as other Teams in Choreo\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Senior Software Engineer\",\n            timePeriod: \"July 2019 to June 2021\",\n            description: \"Lead Choreo Observability Team in creating the initial PoC as well as the Platform\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Software Engineer\",\n            timePeriod: \"Jan 2018 to July 2019\",\n            description: \"Designed & developed several components in middle-ware & cloud projects\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Google Summer of Code Intern\",\n            timePeriod: \"May 2017 to Sep 2017\",\n            description: \"Designed and implemented a maven plugin for automatically generating documentation for Siddhi extensions using annotated data written in the java code.\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        },\n        {\n            name: \"Software Engineering Trainee\",\n            timePeriod: \"July 2016 to Dec 2019\",\n            description: \"Implemented a Notebook prototype for the Data Analytics Server\",\n            institute: \"WSO2, Colombo 03, Sri Lanka\"\n        }\n    ];\n    const instituteIcon = <FontAwesomeIcon className={classes.instituteIconLeft} icon={faMapMarkerAlt}/>;\n\n    const translation = (1 - offset) * 20;\n    return (\n        <Timeline ref={rootRef} align={isTimelineLeftAligned ? \"left\" : \"alternate\"}>\n            {\n                experienceItems.map((item: ExperienceItem, index: number) => {\n                    const isOnLeft = isTimelineLeftAligned || index % 2 === 0;\n                    return (\n                        <TimelineItem key={item.name}>\n                            <TimelineOppositeContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\">\n                                    {item.timePeriod}\n                                </Typography>\n                            </TimelineOppositeContent>\n                            <TimelineSeparator>\n                                <TimelineDot color=\"primary\"/>\n                                <TimelineConnector/>\n                            </TimelineSeparator>\n                            <TimelineContent>\n                                <Paper elevation={3} className={classes.timeLineItemContent}\n                                    style={{\n                                        transform: `translateX(${isOnLeft ? translation : -translation}vw)`,\n                                        opacity: offset\n                                    }}\n                                >\n                                    <Typography variant=\"body1\" component=\"h6\" className={classes.timeLineItemTitle}>\n                                        {item.name}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        {item.description}\n                                    </Typography>\n                                    <Typography variant=\"body2\" color=\"textSecondary\">\n                                        {isOnLeft && (\n                                            <React.Fragment>{instituteIcon}&nbsp;</React.Fragment>\n                                        )}\n                                        {item.institute}\n                                        {!isOnLeft && (\n                                            <React.Fragment>&nbsp;{instituteIcon}</React.Fragment>\n                                        )}\n                                    </Typography>\n                                </Paper>\n                            </TimelineContent>\n                        </TimelineItem>\n                    );\n                })\n            }\n        </Timeline>\n    );\n};\n\nexport default Experience;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconDefinition } from \"@fortawesome/fontawesome-common-types\";\nimport { faFacebook, faGithub, faInstagram, faLinkedin, faMedium, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faGraduationCap } from \"@fortawesome/free-solid-svg-icons\";\nimport { Grid, Theme, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport { useScrollOffset } from \"@/components/Layout\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        profileSection: {\n            padding: theme.spacing(4),\n            cursor: \"pointer\",\n            \"&:hover\": {\n                background: theme.palette.type === \"light\" ? \"#cccccc\" : \"#444444\"\n            }\n        },\n        profileIcon: {\n            margin: theme.spacing(1)\n        },\n        profileText: {\n            fontWeight: \"bold\"\n        }\n    })\n);\n\ninterface Profile {\n    name: string,\n    icon: IconDefinition,\n    link: string,\n}\n\nconst Profiles = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const profiles: Profile[] = [\n        {\n            name: \"LinkedIn\",\n            icon: faLinkedin,\n            link: \"https://www.linkedin.com/in/nadundesilva\"\n        },\n        {\n            name: \"GitHub\",\n            icon: faGithub,\n            link: \"https://github.com/nadundesilva\"\n        },\n        {\n            name: \"Medium\",\n            icon: faMedium,\n            link: \"https://medium.com/@nadundesilva\"\n        },\n        {\n            name: \"Google Scholar\",\n            icon: faGraduationCap,\n            link: \"https://scholar.google.com/citations?user=CdXo_YQAAAAJ&hl=en&oi=ao\"\n        },\n        {\n            name: \"Facebook\",\n            icon: faFacebook,\n            link: \"https://www.facebook.com/nadunrds\"\n        },\n        {\n            name: \"Instagram\",\n            icon: faInstagram,\n            link: \"https://www.instagram.com/nadunrds\"\n        },\n        {\n            name: \"Twitter\",\n            icon: faTwitter,\n            link: \"https://twitter.com/nadunrds\"\n        }\n    ];\n\n    const generateOpenLinkHandler = (link: string) => () => {\n        window.open(link, \"_blank\");\n    };\n\n    return (\n        <Grid ref={rootRef} container justifyContent=\"center\" alignItems=\"center\">\n            {\n                profiles.map((profile, index) => (\n                    <Grid item xs={12} sm={3} key={profile.name}\n                        onClick={generateOpenLinkHandler(profile.link)}\n                    >\n                        <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\" className={classes.profileSection}\n                            style={{\n                                transform: `scale(${offset}, ${offset})`,\n                                opacity: offset\n                            }}\n                        >\n                            <Grid item xs={6}>\n                                <FontAwesomeIcon icon={profile.icon} size=\"3x\" className={classes.profileIcon}/>\n                            </Grid>\n                            <Grid item xs={6}>\n                                <Typography className={classes.profileText}>{profile.name}</Typography>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default Profiles;\n","import React from \"react\";\nimport { Grid, LinearProgress, Typography } from \"@material-ui/core\";\nimport { makeStyles, createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { useScrollOffset } from \"@/components/Layout\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        skillName: {\n            fontWeight: \"bold\"\n        }\n    })\n);\n\nconst BorderLinearProgress = withStyles(() =>\n    createStyles({\n        root: {\n            height: 10,\n            borderRadius: 5\n        },\n        bar: {\n            borderRadius: 5\n        }\n    })\n)(LinearProgress);\n\ninterface Skill {\n    name: string,\n    percentage: number,\n}\n\nconst Skills = (): React.ReactElement => {\n    const classes = useStyles();\n    const { ref: rootRef, direction, offset } = useScrollOffset<HTMLDivElement>();\n\n    const leftSideSkills: Skill[] = [\n        {\n            name: \"Programming\",\n            percentage: 90\n        },\n        {\n            name: \"Time-series Analysis\",\n            percentage: 80\n        },\n        {\n            name: \"Databases\",\n            percentage: 85\n        },\n        {\n            name: \"Cloud Computing\",\n            percentage: 80\n        }\n    ];\n    const rightSideSkills: Skill[] = [\n        {\n            name: \"Leadership\",\n            percentage: 80\n        },\n        {\n            name: \"Teamwork\",\n            percentage: 95\n        },\n        {\n            name: \"Communication\",\n            percentage: 95\n        },\n        {\n            name: \"Attention to Detail\",\n            percentage: 90\n        }\n    ];\n\n    const animationOffset = 0.2;\n    const currentOffset = direction === 1 ? Math.min(offset + animationOffset, 1) : 1;\n    const currentOpacity = direction === -1 ? Math.max(offset - animationOffset, 0) / (1 - animationOffset) : 1;\n    const renderPercentage = (skill: Skill): React.ReactElement => (\n        <Grid item xs={12} md={6} style={{ opacity: currentOpacity }}>\n            <Typography className={classes.skillName}>{skill.name}</Typography>\n            <Grid container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n                <Grid item xs={8} sm={10}>\n                    <BorderLinearProgress variant=\"determinate\" value={skill.percentage * currentOffset}/>\n                </Grid>\n                <Grid item xs={4} sm={2}>\n                    {skill.percentage} %\n                </Grid>\n            </Grid>\n        </Grid>\n    );\n\n    return (\n        <Grid ref={rootRef} container spacing={3} justifyContent=\"center\" alignItems=\"center\">\n            {\n                leftSideSkills.map((leftSideSkill, index) => (\n                    <React.Fragment key={leftSideSkill.name}>\n                        {renderPercentage(leftSideSkill)}\n                        {(index < rightSideSkills.length) ? renderPercentage(rightSideSkills[index]) : null}\n                    </React.Fragment>\n                ))\n            }\n        </Grid>\n    );\n};\n\nexport default Skills;\n","import React from \"react\";\nimport { Button, Grid, Theme, Typography, useMediaQuery } from \"@material-ui/core\";\nimport { makeStyles, createStyles, useTheme } from \"@material-ui/core/styles\";\nimport Image from \"next/image\";\n\nconst banner = \"/assets/banner.jpg\";\n\nconst useStyles = makeStyles((theme: Theme) => {\n    return createStyles({\n        bannerContainer: {\n            position: \"relative\",\n            width: \"100%\"\n        },\n        banner: {\n            color: \"#ffffff\",\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            position: \"absolute\",\n            textAlign: \"center\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            padding: \"17vh\"\n        },\n        bannerImageContainer: {\n            width: \"100%\",\n            height: `calc(100vh - ${theme.mixins.toolbar.minHeight ?? 0}px)`\n        },\n        bannerImage: {\n            zIndex: -1\n        },\n        introText: {\n            fontWeight: \"bold\",\n            fontSize: \"6vh\"\n        },\n        tagLineText: {\n            fontSize: \"3vh\"\n        }\n    });\n});\n\nconst WelcomeBanner = (): React.ReactElement => {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const isLarge = useMediaQuery(theme.breakpoints.up(\"xl\"));\n    const isMedium = useMediaQuery(theme.breakpoints.up(\"md\"));\n    const downloadButtonSize = isLarge\n        ? \"large\"\n        : (isMedium ? \"medium\" : \"small\");\n\n    const downloadCv = (): void => {\n        window.open((process.env.PUBLIC_URL ?? \"\") + \"/nadundesilva-cv.pdf\");\n    };\n\n    return (\n        <div className={classes.bannerContainer}>\n            <Grid container className={classes.banner}>\n                <Grid item xs={12}>\n                    <Typography variant=\"h2\" className={classes.introText}>Hi, I am</Typography>\n                    <Typography variant=\"h2\" className={classes.introText}>Nadun</Typography>\n                    <Typography variant=\"h2\" className={classes.introText}>De Silva</Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Typography variant=\"h5\" className={classes.tagLineText}>\n                        Associate Technical Lead &amp; Deep Learning Enthusiast\n                    </Typography>\n                </Grid>\n                <Grid item xs={12}>\n                    <Button variant=\"contained\" color=\"primary\" size={downloadButtonSize} onClick={downloadCv}>\n                        View CV\n                    </Button>\n                </Grid>\n            </Grid>\n            <div className={classes.bannerImageContainer}>\n                <Image src={banner} alt=\"Nadun De Silva Website Banner\" className={classes.bannerImage}\n                    layout=\"fill\" objectFit=\"cover\" priority={true}/>\n            </div>\n        </div>\n    );\n};\n\nexport default WelcomeBanner;\n","import React, { useRef } from \"react\";\nimport Layout, { LayoutContent } from \"@/components/Layout\";\nimport Heading from \"@/components/Heading\";\nimport { AboutMe, Achievements, ContributedProjects, Certifications, Experience, Profiles, Skills, WelcomeBanner } from \"@/components/Home\";\nimport { Button, Hidden, Theme } from \"@material-ui/core\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport Head from \"next/head\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        section: {\n            padding: theme.spacing(1),\n            margin: theme.spacing(5)\n        },\n        sectionContent: {\n            padding: theme.spacing(3)\n        }\n    })\n);\n\ninterface Section {\n    name: string,\n    ref: React.RefObject<HTMLDivElement>,\n    Component: () => React.ReactElement,\n};\n\nconst Home = (): React.ReactElement => {\n    const classes = useStyles();\n\n    const pageSections: Section[] = [\n        {\n            name: \"Experience\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Experience\n        },\n        {\n            name: \"Achievements\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Achievements\n        },\n        {\n            name: \"Skills\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Skills\n        },\n        {\n            name: \"Certifications\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Certifications\n        },\n        {\n            name: \"Profiles\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: Profiles\n        },\n        {\n            name: \"Contributed Projects\",\n            ref: useRef<HTMLDivElement>(null),\n            Component: ContributedProjects\n        }\n    ];\n\n    const generateGoToSectionHandler = (sectionRef: React.RefObject<HTMLDivElement>) => () => {\n        sectionRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\n    };\n    const generateSection = (title: string, section: React.ReactElement): React.ReactElement => (\n        <React.Fragment>\n            <Heading>{title}</Heading>\n            <div className={classes.sectionContent}>{section}</div>\n        </React.Fragment>\n    );\n    return (\n        <React.Fragment>\n            <Head>\n                <title>Nadun De Silva | An aspiring Software Engineer and ML Enthusiast</title>\n            </Head>\n            <Layout appBarItems={\n                <Hidden mdDown>\n                    {\n                        pageSections.map((section: Section) => (\n                            <Button key={section.name} variant={\"contained\"} color=\"primary\" disableElevation\n                                onClick={generateGoToSectionHandler(section.ref)}>\n                                {section.name}\n                            </Button>\n                        ))\n                    }\n                </Hidden>\n            }>\n                <WelcomeBanner/>\n                <LayoutContent>\n                    <div className={classes.section}>\n                        {generateSection(\"About Me\", <AboutMe/>)}\n                    </div>\n                    <React.Fragment>\n                        {\n                            pageSections.map((section: Section) => (\n                                <div ref={section.ref} className={classes.section} key={section.name}>\n                                    {generateSection(section.name, <section.Component/>)}\n                                </div>\n                            ))\n                        }\n                    </React.Fragment>\n                </LayoutContent>\n            </Layout>\n        </React.Fragment>\n    );\n};\n\nexport default Home;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n  "],"names":["colorSchemes","COLOR_SCHEME_KEY","getStoredColorScheme","storedColorScheme","localStorage","getItem","includes","preferedColorScheme","useMediaQuery","initialStoredColorScheme","useState","colorScheme","setColorScheme","storageListener","useEffect","window","addEventListener","removeEventListener","theme","useMemo","createTheme","palette","type","primary","indigo","secondary","overrides","MuiCssBaseline","width","backgroundColor","boxShadow","newColorScheme","setItem","useStyles","makeStyles","createStyles","themeToggle","marginLeft","spacing","grow","flexGrow","fab","position","bottom","right","children","overflowX","appBarItems","trigger","useScrollTrigger","disableHysteresis","threshold","target","undefined","classes","scrollToTopRef","useRef","useTheme","nextColorScheme","appBar","React","variant","component","className","title","size","onClick","icon","faMoon","faSun","transform","elevation","ThemeProvider","ref","in","current","scrollIntoView","behavior","block","role","color","faChevronUp","root","margin","BREADCRUMBS_MAP","router","useRouter","pathnames","pathname","split","filter","x","separator","faChevronRight","href","Link","map","value","index","last","length","to","slice","join","horizontalMargin","marginRight","content","marginBottom","breakpoints","down","up","direction","setDirection","offset","setOffset","updateOffset","newOffset","refBBox","getBoundingClientRect","viewportHeight","innerHeight","top","fullPageHeight","document","documentElement","offsetHeight","pageBottomOffset","pageYOffset","clientRectOffset","handleScroll","requestAnimationFrame","Math","min","max","sectionTitle","marginTop","sectionTitleText","fontWeight","paddingTop","paddingBottom","props","align","descriptionSeparator","profilePhoto","height","profilePhotoPadding","padding","textIcon","contactInfoItemHeader","gridWidth","item","xs","alt","src","contactItem","name","md","container","justifyContent","alignItems","mdUp","display","faMapMarkerAlt","smDown","imageListItem","imageListItemImageContainer","left","zIndex","imageListItemImageOverlay","textAlign","imageListItemText","useScrollOffset","rootRef","achievementSections","imageLink","animationOffset","renderImageListItem","achievementIndex","rowCount","achievementSection","imageOffset","rows","cols","classNames","style","opacity","layout","objectFit","rowHeight","deepLearningAiLogo","certificationTypeMargin","certificationCardContainer","certificationCard","certificationImage","certificationIssuer","certificationType","DEEP_LEARNING_ISSUER","LINUX_FOUNDATION","certifications","link","image","issuer","translation","certification","sm","xl","open","label","projectLogo","renderCarouselItem","blackThemeImageLink","timeline","timeLineItemContent","timeLineItemTitle","instituteIconRight","instituteIconLeft","isTimelineLeftAligned","instituteIcon","timePeriod","description","institute","isOnLeft","profileSection","cursor","background","profileIcon","profileText","profiles","faLinkedin","faGithub","faMedium","faGraduationCap","faFacebook","faInstagram","faTwitter","profile","skillName","BorderLinearProgress","withStyles","borderRadius","bar","rightSideSkills","percentage","currentOffset","currentOpacity","renderPercentage","skill","leftSideSkill","bannerContainer","banner","bannerImageContainer","mixins","toolbar","minHeight","bannerImage","introText","fontSize","tagLineText","isLarge","isMedium","downloadButtonSize","process","env","PUBLIC_URL","priority","section","sectionContent","pageSections","Component","Experience","Achievements","Skills","Certifications","Profiles","ContributedProjects","generateSection","mdDown","disableElevation","sectionRef","__NEXT_P","push"],"sourceRoot":""}