{"version":3,"file":"static/chunks/app/layout-7e10e68115bbb8db.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/GlobalStyles/GlobalStyles.js","webpack://_N_E/./node_modules/@mui/material/CssBaseline/CssBaseline.js","webpack://_N_E/./node_modules/@mui/material/colors/indigo.js","webpack://_N_E/./node_modules/@mui/material/styles/ThemeProvider.js","webpack://_N_E/./node_modules/@mui/material/useMediaQuery/useMediaQuery.js","webpack://_N_E/?7294","webpack://_N_E/./components/layout/theme/EmotionCacheProvider.tsx","webpack://_N_E/./components/layout/theme/WebsiteThemeProvider.tsx","webpack://_N_E/./styles/main.css","webpack://_N_E/./styles/syntax-highlighting.css","webpack://_N_E/./node_modules/next/font/google/target.css","webpack://_N_E/./node_modules/next/navigation.js","webpack://_N_E/<anon>"],"sourcesContent":["'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport THEME_ID from '../styles/identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport useThemeProps from '../styles/useThemeProps';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","const indigo = {\n  50: '#e8eaf6',\n  100: '#c5cae9',\n  200: '#9fa8da',\n  300: '#7986cb',\n  400: '#5c6bc0',\n  500: '#3f51b5',\n  600: '#3949ab',\n  700: '#303f9f',\n  800: '#283593',\n  900: '#1a237e',\n  A100: '#8c9eff',\n  A200: '#536dfe',\n  A400: '#3d5afe',\n  A700: '#304ffe'\n};\nexport default indigo;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: scopedTheme || themeInput\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","'use client';\n\nimport * as React from 'react';\nimport { getThemeProps, useThemeWithoutDefault as useTheme } from '@mui/system';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\n\n/**\n * @deprecated Not used internally. Use `MediaQueryListEvent` from lib.dom.d.ts instead.\n */\n\n/**\n * @deprecated Not used internally. Use `MediaQueryList` from lib.dom.d.ts instead.\n */\n\n/**\n * @deprecated Not used internally. Use `(event: MediaQueryListEvent) => void` instead.\n */\n\nfunction useMediaQueryOld(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const [match, setMatch] = React.useState(() => {\n    if (noSsr && matchMedia) {\n      return matchMedia(query).matches;\n    }\n    if (ssrMatchMedia) {\n      return ssrMatchMedia(query).matches;\n    }\n\n    // Once the component is mounted, we rely on the\n    // event listeners to return the correct matches value.\n    return defaultMatches;\n  });\n  useEnhancedEffect(() => {\n    let active = true;\n    if (!matchMedia) {\n      return undefined;\n    }\n    const queryList = matchMedia(query);\n    const updateMatch = () => {\n      // Workaround Safari wrong implementation of matchMedia\n      // TODO can we remove it?\n      // https://github.com/mui/material-ui/pull/17315#issuecomment-528286677\n      if (active) {\n        setMatch(queryList.matches);\n      }\n    };\n    updateMatch();\n    // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n    queryList.addListener(updateMatch);\n    return () => {\n      active = false;\n      queryList.removeListener(updateMatch);\n    };\n  }, [query, matchMedia]);\n  return match;\n}\n\n// eslint-disable-next-line no-useless-concat -- Workaround for https://github.com/webpack/webpack/issues/14814\nconst maybeReactUseSyncExternalStore = React['useSyncExternalStore' + ''];\nfunction useMediaQueryNew(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr) {\n  const getDefaultSnapshot = React.useCallback(() => defaultMatches, [defaultMatches]);\n  const getServerSnapshot = React.useMemo(() => {\n    if (noSsr && matchMedia) {\n      return () => matchMedia(query).matches;\n    }\n    if (ssrMatchMedia !== null) {\n      const {\n        matches\n      } = ssrMatchMedia(query);\n      return () => matches;\n    }\n    return getDefaultSnapshot;\n  }, [getDefaultSnapshot, query, ssrMatchMedia, noSsr, matchMedia]);\n  const [getSnapshot, subscribe] = React.useMemo(() => {\n    if (matchMedia === null) {\n      return [getDefaultSnapshot, () => () => {}];\n    }\n    const mediaQueryList = matchMedia(query);\n    return [() => mediaQueryList.matches, notify => {\n      // TODO: Use `addEventListener` once support for Safari < 14 is dropped\n      mediaQueryList.addListener(notify);\n      return () => {\n        mediaQueryList.removeListener(notify);\n      };\n    }];\n  }, [getDefaultSnapshot, matchMedia, query]);\n  const match = maybeReactUseSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n  return match;\n}\nexport default function useMediaQuery(queryInput, options = {}) {\n  const theme = useTheme();\n  // Wait for jsdom to support the match media feature.\n  // All the browsers MUI support have this built-in.\n  // This defensive check is here for simplicity.\n  // Most of the time, the match media logic isn't central to people tests.\n  const supportMatchMedia = typeof window !== 'undefined' && typeof window.matchMedia !== 'undefined';\n  const {\n    defaultMatches = false,\n    matchMedia = supportMatchMedia ? window.matchMedia : null,\n    ssrMatchMedia = null,\n    noSsr = false\n  } = getThemeProps({\n    name: 'MuiUseMediaQuery',\n    props: options,\n    theme\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof queryInput === 'function' && theme === null) {\n      console.error(['MUI: The `query` argument provided is invalid.', 'You are providing a function without a theme in the context.', 'One of the parent elements needs to use a ThemeProvider.'].join('\\n'));\n    }\n  }\n  let query = typeof queryInput === 'function' ? queryInput(theme) : queryInput;\n  query = query.replace(/^@media( ?)/m, '');\n\n  // TODO: Drop `useMediaQueryOld` and use  `use-sync-external-store` shim in `useMediaQueryNew` once the package is stable\n  const useMediaQueryImplementation = maybeReactUseSyncExternalStore !== undefined ? useMediaQueryNew : useMediaQueryOld;\n  const match = useMediaQueryImplementation(query, defaultMatches, matchMedia, ssrMatchMedia, noSsr);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue({\n      query,\n      match\n    });\n  }\n  return match;\n}","import(/* webpackMode: \"eager\" */ \"/home/runner/work/nadundesilva.github.io/nadundesilva.github.io/components/layout/theme/WebsiteThemeProvider.tsx\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/nadundesilva.github.io/nadundesilva.github.io/node_modules/next/font/google/target.css?{\\\"path\\\":\\\"app/layout.tsx\\\",\\\"import\\\":\\\"Roboto\\\",\\\"arguments\\\":[{\\\"weight\\\":\\\"400\\\",\\\"subsets\\\":[\\\"latin\\\"]}],\\\"variableName\\\":\\\"roboto\\\"}\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/nadundesilva.github.io/nadundesilva.github.io/styles/main.css\");\nimport(/* webpackMode: \"eager\" */ \"/home/runner/work/nadundesilva.github.io/nadundesilva.github.io/styles/syntax-highlighting.css\")","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * © 2023 Nadun De Silva. All rights reserved.\n */\nimport createCache, { type EmotionCache } from \"@emotion/cache\";\nimport { CacheProvider as DefaultCacheProvider } from \"@emotion/react\";\nimport { useServerInsertedHTML } from \"next/navigation\";\nimport * as React from \"react\";\n\nexport interface EmotionCacheProviderProps {\n    CacheProvider?: (props: {\n        value: EmotionCache;\n        children: React.ReactNode;\n    }) => React.JSX.Element | null;\n    children: React.ReactNode;\n}\n\nexport default function EmotionCacheProvider(\n    props: EmotionCacheProviderProps,\n): React.ReactElement {\n    const { CacheProvider = DefaultCacheProvider, children } = props;\n\n    const [registry] = React.useState(() => {\n        const cache = createCache({ key: \"css\" });\n        cache.compat = true;\n        const prevInsert = cache.insert;\n        let inserted: Array<{ name: string; isGlobal: boolean }> = [];\n        cache.insert = (...args) => {\n            const [selector, serialized] = args;\n            if (cache.inserted[serialized.name] === undefined) {\n                inserted.push({\n                    name: serialized.name,\n                    isGlobal: selector === undefined,\n                });\n            }\n            return prevInsert(...args);\n        };\n        const flush = (): Array<{ name: string; isGlobal: boolean }> => {\n            const prevInserted = inserted;\n            inserted = [];\n            return prevInserted;\n        };\n        return { cache, flush };\n    });\n\n    useServerInsertedHTML(() => {\n        const inserted = registry.flush();\n        if (inserted.length === 0) {\n            return null;\n        }\n        let styles = \"\";\n        let dataEmotionAttribute = registry.cache.key;\n\n        const globals: Array<{\n            name: string;\n            style: string;\n        }> = [];\n\n        inserted.forEach(({ name, isGlobal }) => {\n            const style = registry.cache.inserted[name];\n\n            if (typeof style !== \"boolean\") {\n                if (isGlobal) {\n                    globals.push({ name, style });\n                } else {\n                    styles += style;\n                    dataEmotionAttribute += ` ${name}`;\n                }\n            }\n        });\n\n        return (\n            <React.Fragment>\n                {globals.map(({ name, style }) => (\n                    <style\n                        key={name}\n                        data-emotion={`${registry.cache.key}-global ${name}`}\n                        dangerouslySetInnerHTML={{ __html: style }}\n                    />\n                ))}\n                {styles !== undefined && (\n                    <style\n                        data-emotion={dataEmotionAttribute}\n                        dangerouslySetInnerHTML={{ __html: styles }}\n                    />\n                )}\n            </React.Fragment>\n        );\n    });\n\n    return <CacheProvider value={registry.cache}>{children}</CacheProvider>;\n}\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * © 2023 Nadun De Silva. All rights reserved.\n */\nimport {\n    createTheme,\n    CssBaseline,\n    StyledEngineProvider,\n    type Theme,\n    ThemeProvider,\n    useMediaQuery,\n} from \"@mui/material\";\nimport { grey, indigo } from \"@mui/material/colors\";\nimport React, { useMemo, useEffect, useState, useContext } from \"react\";\n\nimport EmotionCacheProvider from \"./EmotionCacheProvider\";\n\nexport type ColorScheme = \"dark\" | \"light\";\nconst colorSchemes = [\"dark\", \"light\"];\n\nconst COLOR_SCHEME_KEY = \"COLOR_SCHEME\";\n\nconst getStoredColorScheme = (): ColorScheme | null => {\n    let storedColorScheme: string | null;\n    try {\n        storedColorScheme = localStorage.getItem(COLOR_SCHEME_KEY);\n    } catch {\n        storedColorScheme = null;\n    }\n    return storedColorScheme !== null &&\n        colorSchemes.includes(storedColorScheme)\n        ? (storedColorScheme as ColorScheme)\n        : null;\n};\n\nconst createWebsiteTheme = (colorScheme: ColorScheme): Theme => {\n    return createTheme({\n        palette: {\n            mode: colorScheme,\n            primary: indigo,\n            secondary: indigo,\n        },\n        components: {\n            MuiLink: {\n                styleOverrides: {\n                    root: {\n                        color: grey[700],\n                        textDecoration: \"none\",\n                    },\n                },\n            },\n        },\n    });\n};\n\ninterface WebsiteThemeContext {\n    theme: Theme;\n    colorScheme: ColorScheme;\n    setColorScheme: (newColorScheme: ColorScheme) => void;\n}\n\nconst defaultColorScheme = getStoredColorScheme() ?? \"light\";\n\nconst WebsiteTheme = React.createContext<WebsiteThemeContext>({\n    theme: createWebsiteTheme(defaultColorScheme),\n    colorScheme: defaultColorScheme,\n    setColorScheme: () => {\n        throw Error(\"Setting color theme not implemented\");\n    },\n});\n\ninterface WebsiteThemeProviderProps {\n    children: React.ReactNode;\n}\n\nconst WebsiteThemeProvider = ({\n    children,\n}: WebsiteThemeProviderProps): React.ReactElement => {\n    const preferedColorScheme: ColorScheme = useMediaQuery(\n        \"(prefers-color-scheme: dark)\",\n    )\n        ? \"dark\"\n        : \"light\";\n    const initialStoredColorScheme = getStoredColorScheme();\n\n    const [colorScheme, setColorScheme] = useState<ColorScheme>(\n        initialStoredColorScheme === null\n            ? preferedColorScheme\n            : initialStoredColorScheme,\n    );\n\n    const storageListener = (): void => {\n        const storedColorScheme = getStoredColorScheme();\n        if (storedColorScheme !== null) {\n            setColorScheme(storedColorScheme);\n        }\n    };\n    useEffect(() => {\n        window.addEventListener(\"storage\", storageListener);\n        return (): void => {\n            window.removeEventListener(\"storage\", storageListener);\n        };\n    });\n\n    const theme = useMemo(() => createWebsiteTheme(colorScheme), [colorScheme]);\n    return (\n        <EmotionCacheProvider>\n            <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={theme}>\n                    <CssBaseline />\n                    <WebsiteTheme.Provider\n                        value={{\n                            theme,\n                            colorScheme,\n                            setColorScheme: (\n                                newColorScheme: ColorScheme,\n                            ): void => {\n                                try {\n                                    localStorage.setItem(\n                                        COLOR_SCHEME_KEY,\n                                        newColorScheme,\n                                    );\n                                } catch {}\n                                setColorScheme(newColorScheme);\n                            },\n                        }}\n                    >\n                        {children}\n                    </WebsiteTheme.Provider>\n                </ThemeProvider>\n            </StyledEngineProvider>\n        </EmotionCacheProvider>\n    );\n};\n\nexport const useWebsiteTheme = (): WebsiteThemeContext => {\n    return useContext(WebsiteTheme);\n};\n\nexport default WebsiteThemeProvider;\n","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__Roboto_a789c4', '__Roboto_Fallback_a789c4'\",\"fontWeight\":400,\"fontStyle\":\"normal\"},\"className\":\"__className_a789c4\"};","module.exports = require('./dist/client/components/navigation')\n"],"names":["material_GlobalStyles_GlobalStyles","props","jsx_runtime","jsx","GlobalStyles","Z","esm_extends","defaultTheme","themeId","identifier","html","theme","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","vars","colorScheme","palette","mode","body","color","text","primary","typography","body1","backgroundColor","background","default","common","white","styles","_theme$components","colorSchemeStyles","colorSchemes","Object","entries","forEach","key","scheme","_scheme$palette","getColorSchemeSelector","replace","defaultStyles","fontWeight","fontWeightBold","margin","themeOverrides","components","MuiCssBaseline","styleOverrides","CssBaseline_CssBaseline","inProps","useThemeProps","name","children","jsxs","react","Fragment","__webpack_exports__","A100","A200","A400","A700","_excluded","ThemeProvider","_ref","themeInput","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_2__","scopedTheme","_identifier__WEBPACK_IMPORTED_MODULE_3__","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","_mui_system__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_5__","undefined","maybeReactUseSyncExternalStore","react__WEBPACK_IMPORTED_MODULE_0___namespace_cache","__webpack_require__","t","react__WEBPACK_IMPORTED_MODULE_0__","useMediaQuery","queryInput","options","_mui_system__WEBPACK_IMPORTED_MODULE_2__","supportMatchMedia","window","matchMedia","defaultMatches","ssrMatchMedia","noSsr","_mui_system__WEBPACK_IMPORTED_MODULE_3__","query","match","useMediaQueryImplementation","getDefaultSnapshot","useCallback","getServerSnapshot","useMemo","matches","getSnapshot","subscribe","mediaQueryList","notify","addListener","removeListener","setMatch","useState","_utils_useEnhancedEffect__WEBPACK_IMPORTED_MODULE_1__","active","queryList","updateMatch","Promise","resolve","then","bind","getStoredColorScheme","EmotionCacheProvider","_props_CacheProvider","CacheProvider","DefaultCacheProvider","registry","React","cache","createCache","compat","prevInsert","insert","inserted","args","selector","serialized","push","isGlobal","_to_consumable_array","_","flush","prevInserted","useServerInsertedHTML","length","dataEmotionAttribute","globals","param","style","concat","map","data-emotion","dangerouslySetInnerHTML","__html","value","COLOR_SCHEME_KEY","storedColorScheme","localStorage","getItem","e","includes","createWebsiteTheme","createTheme","indigo","secondary","MuiLink","root","grey","textDecoration","defaultColorScheme","WebsiteTheme","setColorScheme","Error","useWebsiteTheme","useContext","theme_WebsiteThemeProvider","preferedColorScheme","initialStoredColorScheme","storageListener","useEffect","addEventListener","removeEventListener","StyledEngineProvider","injectFirst","CssBaseline","Provider","newColorScheme","setItem","module","exports"],"sourceRoot":""}