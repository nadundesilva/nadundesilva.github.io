{"version":3,"file":"static/chunks/4198-7d94ee74a8aa64b7.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@mui/material/Link/linkClasses.js","webpack://_N_E/./node_modules/@mui/material/Link/getTextDecoration.js","webpack://_N_E/./node_modules/@mui/material/Link/Link.js","webpack://_N_E/./node_modules/@mui/utils/esm/isFocusVisible/isFocusVisible.js","webpack://_N_E/../../../src/client/app-dir/link.tsx","webpack://_N_E/../../src/client/use-intersection.tsx"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinkUtilityClass(slot) {\n  return generateUtilityClass('MuiLink', slot);\n}\nconst linkClasses = generateUtilityClasses('MuiLink', ['root', 'underlineNone', 'underlineHover', 'underlineAlways', 'button', 'focusVisible']);\nexport default linkClasses;","import { getPath } from '@mui/system/style';\nimport { alpha } from '@mui/system/colorManipulator';\nconst getTextDecoration = ({\n  theme,\n  ownerState\n}) => {\n  const transformedColor = ownerState.color;\n  const color = getPath(theme, `palette.${transformedColor}`, false) || ownerState.color;\n  const channelColor = getPath(theme, `palette.${transformedColor}Channel`);\n  if ('vars' in theme && channelColor) {\n    return `rgba(${channelColor} / 0.4)`;\n  }\n  return alpha(color, 0.4);\n};\nexport default getTextDecoration;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { alpha } from '@mui/system/colorManipulator';\nimport elementTypeAcceptingRef from '@mui/utils/elementTypeAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport isFocusVisible from '@mui/utils/isFocusVisible';\nimport capitalize from \"../utils/capitalize.js\";\nimport { styled, useTheme } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Typography from \"../Typography/index.js\";\nimport linkClasses, { getLinkUtilityClass } from \"./linkClasses.js\";\nimport getTextDecoration from \"./getTextDecoration.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst v6Colors = {\n  primary: true,\n  secondary: true,\n  error: true,\n  info: true,\n  success: true,\n  warning: true,\n  textPrimary: true,\n  textSecondary: true,\n  textDisabled: true\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    component,\n    focusVisible,\n    underline\n  } = ownerState;\n  const slots = {\n    root: ['root', `underline${capitalize(underline)}`, component === 'button' && 'button', focusVisible && 'focusVisible']\n  };\n  return composeClasses(slots, getLinkUtilityClass, classes);\n};\nconst LinkRoot = styled(Typography, {\n  name: 'MuiLink',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`underline${capitalize(ownerState.underline)}`], ownerState.component === 'button' && styles.button];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  return {\n    variants: [{\n      props: {\n        underline: 'none'\n      },\n      style: {\n        textDecoration: 'none'\n      }\n    }, {\n      props: {\n        underline: 'hover'\n      },\n      style: {\n        textDecoration: 'none',\n        '&:hover': {\n          textDecoration: 'underline'\n        }\n      }\n    }, {\n      props: {\n        underline: 'always'\n      },\n      style: {\n        textDecoration: 'underline',\n        '&:hover': {\n          textDecorationColor: 'inherit'\n        }\n      }\n    }, {\n      props: ({\n        underline,\n        ownerState\n      }) => underline === 'always' && ownerState.color !== 'inherit',\n      style: {\n        textDecorationColor: 'var(--Link-underlineColor)'\n      }\n    }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n      props: {\n        underline: 'always',\n        color\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / 0.4)` : alpha(theme.palette[color].main, 0.4)\n      }\n    })), {\n      props: {\n        underline: 'always',\n        color: 'textPrimary'\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textSecondary'\n      },\n      style: {\n        '--Link-underlineColor': theme.vars ? `rgba(${theme.vars.palette.text.secondaryChannel} / 0.4)` : alpha(theme.palette.text.secondary, 0.4)\n      }\n    }, {\n      props: {\n        underline: 'always',\n        color: 'textDisabled'\n      },\n      style: {\n        '--Link-underlineColor': (theme.vars || theme).palette.text.disabled\n      }\n    }, {\n      props: {\n        component: 'button'\n      },\n      style: {\n        position: 'relative',\n        WebkitTapHighlightColor: 'transparent',\n        backgroundColor: 'transparent',\n        // Reset default value\n        // We disable the focus ring for mouse, touch and keyboard users.\n        outline: 0,\n        border: 0,\n        margin: 0,\n        // Remove the margin in Safari\n        borderRadius: 0,\n        padding: 0,\n        // Remove the padding in Firefox\n        cursor: 'pointer',\n        userSelect: 'none',\n        verticalAlign: 'middle',\n        MozAppearance: 'none',\n        // Reset\n        WebkitAppearance: 'none',\n        // Reset\n        '&::-moz-focus-inner': {\n          borderStyle: 'none' // Remove Firefox dotted outline.\n        },\n        [`&.${linkClasses.focusVisible}`]: {\n          outline: 'auto'\n        }\n      }\n    }]\n  };\n}));\nconst Link = /*#__PURE__*/React.forwardRef(function Link(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLink'\n  });\n  const theme = useTheme();\n  const {\n    className,\n    color = 'primary',\n    component = 'a',\n    onBlur,\n    onFocus,\n    TypographyClasses,\n    underline = 'always',\n    variant = 'inherit',\n    sx,\n    ...other\n  } = props;\n  const [focusVisible, setFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    if (!isFocusVisible(event.target)) {\n      setFocusVisible(false);\n    }\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n  const handleFocus = event => {\n    if (isFocusVisible(event.target)) {\n      setFocusVisible(true);\n    }\n    if (onFocus) {\n      onFocus(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    color,\n    component,\n    focusVisible,\n    underline,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(LinkRoot, {\n    color: color,\n    className: clsx(classes.root, className),\n    classes: TypographyClasses,\n    component: component,\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    ref: ref,\n    ownerState: ownerState,\n    variant: variant,\n    ...other,\n    sx: [...(v6Colors[color] === undefined ? [{\n      color\n    }] : []), ...(Array.isArray(sx) ? sx : [sx])],\n    style: {\n      ...other.style,\n      ...(underline === 'always' && color !== 'inherit' && !v6Colors[color] && {\n        '--Link-underlineColor': getTextDecoration({\n          theme,\n          ownerState\n        })\n      })\n    }\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Link.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the link.\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['primary', 'secondary', 'success', 'error', 'info', 'warning', 'textPrimary', 'textSecondary', 'textDisabled']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: elementTypeAcceptingRef,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * `classes` prop applied to the [`Typography`](https://mui.com/material-ui/api/typography/) element.\n   */\n  TypographyClasses: PropTypes.object,\n  /**\n   * Controls when the link should have an underline.\n   * @default 'always'\n   */\n  underline: PropTypes.oneOf(['always', 'hover', 'none']),\n  /**\n   * Applies the theme typography styles.\n   * @default 'inherit'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string])\n} : void 0;\nexport default Link;","/**\n * Returns a boolean indicating if the event's target has :focus-visible\n */\nexport default function isFocusVisible(element) {\n  try {\n    return element.matches(':focus-visible');\n  } catch (error) {\n    // Do not warn on jsdom tests, otherwise all tests that rely on focus have to be skipped\n    // Tests that rely on `:focus-visible` will still have to be skipped in jsdom\n    if (process.env.NODE_ENV !== 'production' && !/jsdom/.test(window.navigator.userAgent)) {\n      console.warn(['MUI: The `:focus-visible` pseudo class is not supported in this browser.', 'Some components rely on this feature to work properly.'].join('\\n'));\n    }\n  }\n  return false;\n}","'use client'\n\nimport type { NextRouter } from '../../shared/lib/router/router'\n\nimport React from 'react'\nimport type { UrlObject } from 'url'\nimport { formatUrl } from '../../shared/lib/router/utils/format-url'\nimport { AppRouterContext } from '../../shared/lib/app-router-context.shared-runtime'\nimport type { AppRouterInstance } from '../../shared/lib/app-router-context.shared-runtime'\nimport type { PrefetchOptions } from '../../shared/lib/app-router-context.shared-runtime'\nimport { useIntersection } from '../use-intersection'\nimport { PrefetchKind } from '../components/router-reducer/router-reducer-types'\nimport { useMergedRef } from '../use-merged-ref'\nimport { isAbsoluteUrl } from '../../shared/lib/utils'\nimport { addBasePath } from '../add-base-path'\nimport { warnOnce } from '../../shared/lib/utils/warn-once'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\ntype InternalLinkProps = {\n  /**\n   * The path or URL to navigate to. It can also be an object.\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#with-url-object\n   */\n  href: Url\n  /**\n   * Optional decorator for the path that will be shown in the browser URL bar. Before Next.js 9.5.3 this was used for dynamic routes, check our [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes) to see how it worked. Note: when this path differs from the one provided in `href` the previous `href`/`as` behavior is used as shown in the [previous docs](https://github.com/vercel/next.js/blob/v9.5.2/docs/api-reference/next/link.md#dynamic-routes).\n   */\n  as?: Url\n  /**\n   * Replace the current `history` state instead of adding a new url into the stack.\n   *\n   * @defaultValue `false`\n   */\n  replace?: boolean\n  /**\n   * Whether to override the default scroll behavior\n   *\n   * @example https://nextjs.org/docs/api-reference/next/link#disable-scrolling-to-the-top-of-the-page\n   *\n   * @defaultValue `true`\n   */\n  scroll?: boolean\n  /**\n   * Update the path of the current page without rerunning [`getStaticProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-static-props), [`getServerSideProps`](https://nextjs.org/docs/pages/building-your-application/data-fetching/get-server-side-props) or [`getInitialProps`](/docs/pages/api-reference/functions/get-initial-props).\n   *\n   * @defaultValue `false`\n   */\n  shallow?: boolean\n  /**\n   * Forces `Link` to send the `href` property to its child.\n   *\n   * @defaultValue `false`\n   */\n  passHref?: boolean\n  /**\n   * Prefetch the page in the background.\n   * Any `<Link />` that is in the viewport (initially or through scroll) will be prefetched.\n   * Prefetch can be disabled by passing `prefetch={false}`. Prefetching is only enabled in production.\n   *\n   * In App Router:\n   * - `null` (default): For statically generated pages, this will prefetch the full React Server Component data. For dynamic pages, this will prefetch up to the nearest route segment with a [`loading.js`](https://nextjs.org/docs/app/api-reference/file-conventions/loading) file. If there is no loading file, it will not fetch the full tree to avoid fetching too much data.\n   * - `true`: This will prefetch the full React Server Component data for all route segments, regardless of whether they contain a segment with `loading.js`.\n   * - `false`: This will not prefetch any data, even on hover.\n   *\n   * In Pages Router:\n   * - `true` (default): The full route & its data will be prefetched.\n   * - `false`: Prefetching will not happen when entering the viewport, but will still happen on hover.\n   * @defaultValue `true` (pages router) or `null` (app router)\n   */\n  prefetch?: boolean | null\n  /**\n   * The active locale is automatically prepended. `locale` allows for providing a different locale.\n   * When `false` `href` has to include the locale as the default behavior is disabled.\n   * Note: This is only available in the Pages Router.\n   */\n  locale?: string | false\n  /**\n   * Enable legacy link behavior.\n   * @defaultValue `false`\n   * @see https://github.com/vercel/next.js/commit/489e65ed98544e69b0afd7e0cfc3f9f6c2b803b7\n   */\n  legacyBehavior?: boolean\n  /**\n   * Optional event handler for when the mouse pointer is moved onto Link\n   */\n  onMouseEnter?: React.MouseEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is touched.\n   */\n  onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n  /**\n   * Optional event handler for when Link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>\n}\n\n// TODO-APP: Include the full set of Anchor props\n// adding this to the publicly exported type currently breaks existing apps\n\n// `RouteInferType` is a stub here to avoid breaking `typedRoutes` when the type\n// isn't generated yet. It will be replaced when the webpack plugin runs.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport type LinkProps<RouteInferType = any> = InternalLinkProps\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<Omit<InternalLinkProps, 'locale'>>\n\nfunction prefetch(\n  router: AppRouterInstance,\n  href: string,\n  options: PrefetchOptions\n): void {\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  const doPrefetch = async () => {\n    // note that `appRouter.prefetch()` is currently sync,\n    // so we have to wrap this call in an async function to be able to catch() errors below.\n    return router.prefetch(href, options)\n  }\n\n  // Prefetch the page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  doPrefetch().catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const eventTarget = event.currentTarget as HTMLAnchorElement | SVGAElement\n  const target = eventTarget.getAttribute('target')\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter | AppRouterInstance,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean\n): void {\n  const { nodeName } = e.currentTarget\n\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A'\n\n  if (isAnchorNodeName && isModifiedEvent(e)) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    const routerScroll = scroll ?? true\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        scroll: routerScroll,\n      })\n    } else {\n      router[replace ? 'replace' : 'push'](as || href, {\n        scroll: routerScroll,\n      })\n    }\n  }\n\n  React.startTransition(navigate)\n}\n\ntype LinkPropsReal = React.PropsWithChildren<\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, keyof LinkProps> &\n    LinkProps\n>\n\nfunction formatStringOrUrl(urlObjOrString: UrlObject | string): string {\n  if (typeof urlObjOrString === 'string') {\n    return urlObjOrString\n  }\n\n  return formatUrl(urlObjOrString)\n}\n\n/**\n * A React component that extends the HTML `<a>` element to provide [prefetching](https://nextjs.org/docs/app/building-your-application/routing/linking-and-navigating#2-prefetching)\n * and client-side navigation between routes.\n *\n * It is the primary way to navigate between routes in Next.js.\n *\n * Read more: [Next.js docs: `<Link>`](https://nextjs.org/docs/app/api-reference/components/link)\n */\nconst Link = React.forwardRef<HTMLAnchorElement, LinkPropsReal>(\n  function LinkComponent(props, forwardedRef) {\n    let children: React.ReactNode\n\n    const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp = null,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      onClick,\n      onMouseEnter: onMouseEnterProp,\n      onTouchStart: onTouchStartProp,\n      legacyBehavior = false,\n      ...restProps\n    } = props\n\n    children = childrenProp\n\n    if (\n      legacyBehavior &&\n      (typeof children === 'string' || typeof children === 'number')\n    ) {\n      children = <a>{children}</a>\n    }\n\n    const router = React.useContext(AppRouterContext)\n\n    const prefetchEnabled = prefetchProp !== false\n    /**\n     * The possible states for prefetch are:\n     * - null: this is the default \"auto\" mode, where we will prefetch partially if the link is in the viewport\n     * - true: we will prefetch if the link is visible and prefetch the full page, not just partially\n     * - false: we will not prefetch if in the viewport at all\n     */\n    const appPrefetchKind =\n      prefetchProp === null ? PrefetchKind.AUTO : PrefetchKind.FULL\n\n    if (process.env.NODE_ENV !== 'production') {\n      function createPropError(args: {\n        key: string\n        expected: string\n        actual: string\n      }) {\n        return new Error(\n          `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n            (typeof window !== 'undefined'\n              ? \"\\nOpen your browser's console to view the Component stack trace.\"\n              : '')\n        )\n      }\n\n      // TypeScript trick for type-guarding:\n      const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n        href: true,\n      } as const\n      const requiredProps: LinkPropsRequired[] = Object.keys(\n        requiredPropsGuard\n      ) as LinkPropsRequired[]\n      requiredProps.forEach((key: LinkPropsRequired) => {\n        if (key === 'href') {\n          if (\n            props[key] == null ||\n            (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n          ) {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: props[key] === null ? 'null' : typeof props[key],\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n\n      // TypeScript trick for type-guarding:\n      const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n        as: true,\n        replace: true,\n        scroll: true,\n        shallow: true,\n        passHref: true,\n        prefetch: true,\n        onClick: true,\n        onMouseEnter: true,\n        onTouchStart: true,\n        legacyBehavior: true,\n      } as const\n      const optionalProps: LinkPropsOptional[] = Object.keys(\n        optionalPropsGuard\n      ) as LinkPropsOptional[]\n      optionalProps.forEach((key: LinkPropsOptional) => {\n        const valType = typeof props[key]\n\n        if (key === 'as') {\n          if (props[key] && valType !== 'string' && valType !== 'object') {\n            throw createPropError({\n              key,\n              expected: '`string` or `object`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'onClick' ||\n          key === 'onMouseEnter' ||\n          key === 'onTouchStart'\n        ) {\n          if (props[key] && valType !== 'function') {\n            throw createPropError({\n              key,\n              expected: '`function`',\n              actual: valType,\n            })\n          }\n        } else if (\n          key === 'replace' ||\n          key === 'scroll' ||\n          key === 'shallow' ||\n          key === 'passHref' ||\n          key === 'prefetch' ||\n          key === 'legacyBehavior'\n        ) {\n          if (props[key] != null && valType !== 'boolean') {\n            throw createPropError({\n              key,\n              expected: '`boolean`',\n              actual: valType,\n            })\n          }\n        } else {\n          // TypeScript trick for type-guarding:\n          // eslint-disable-next-line @typescript-eslint/no-unused-vars\n          const _: never = key\n        }\n      })\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (props.locale) {\n        warnOnce(\n          'The `locale` prop is not supported in `next/link` while using the `app` router. Read more about app router internalization: https://nextjs.org/docs/app/building-your-application/routing/internationalization'\n        )\n      }\n      if (!asProp) {\n        let href: string | undefined\n        if (typeof hrefProp === 'string') {\n          href = hrefProp\n        } else if (\n          typeof hrefProp === 'object' &&\n          typeof hrefProp.pathname === 'string'\n        ) {\n          href = hrefProp.pathname\n        }\n\n        if (href) {\n          const hasDynamicSegment = href\n            .split('/')\n            .some((segment) => segment.startsWith('[') && segment.endsWith(']'))\n\n          if (hasDynamicSegment) {\n            throw new Error(\n              `Dynamic href \\`${href}\\` found in <Link> while using the \\`/app\\` router, this is not supported. Read more: https://nextjs.org/docs/messages/app-dir-dynamic-href`\n            )\n          }\n        }\n      }\n    }\n\n    const { href, as } = React.useMemo(() => {\n      const resolvedHref = formatStringOrUrl(hrefProp)\n      return {\n        href: resolvedHref,\n        as: asProp ? formatStringOrUrl(asProp) : resolvedHref,\n      }\n    }, [hrefProp, asProp])\n\n    const previousHref = React.useRef<string>(href)\n    const previousAs = React.useRef<string>(as)\n\n    // This will return the first child, if multiple are provided it will throw an error\n    let child: any\n    if (legacyBehavior) {\n      if (process.env.NODE_ENV === 'development') {\n        if (onClick) {\n          console.warn(\n            `\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`\n          )\n        }\n        if (onMouseEnterProp) {\n          console.warn(\n            `\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`\n          )\n        }\n        try {\n          child = React.Children.only(children)\n        } catch (err) {\n          if (!children) {\n            throw new Error(\n              `No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`\n            )\n          }\n          throw new Error(\n            `Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` +\n              (typeof window !== 'undefined'\n                ? \" \\nOpen your browser's console to view the Component stack trace.\"\n                : '')\n          )\n        }\n      } else {\n        child = React.Children.only(children)\n      }\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if ((children as any)?.type === 'a') {\n          throw new Error(\n            'Invalid <Link> with <a> child. Please remove <a> or use <Link legacyBehavior>.\\nLearn more: https://nextjs.org/docs/messages/invalid-new-link-with-extra-anchor'\n          )\n        }\n      }\n    }\n\n    const childRef: any = legacyBehavior\n      ? child && typeof child === 'object' && child.ref\n      : forwardedRef\n\n    const [setIntersectionRef, isVisible, resetVisible] = useIntersection({\n      rootMargin: '200px',\n    })\n\n    const setIntersectionWithResetRef = React.useCallback(\n      (el: Element) => {\n        // Before the link getting observed, check if visible state need to be reset\n        if (previousAs.current !== as || previousHref.current !== href) {\n          resetVisible()\n          previousAs.current = as\n          previousHref.current = href\n        }\n\n        setIntersectionRef(el)\n      },\n      [as, href, resetVisible, setIntersectionRef]\n    )\n\n    const setRef = useMergedRef(setIntersectionWithResetRef, childRef)\n\n    // Prefetch the URL if we haven't already and it's visible.\n    React.useEffect(() => {\n      // in dev, we only prefetch on hover to avoid wasting resources as the prefetch will trigger compiling the page.\n      if (process.env.NODE_ENV !== 'production') {\n        return\n      }\n\n      if (!router) {\n        return\n      }\n\n      // If we don't need to prefetch the URL, don't do prefetch.\n      if (!isVisible || !prefetchEnabled) {\n        return\n      }\n\n      // Prefetch the URL.\n      prefetch(router, href, {\n        kind: appPrefetchKind,\n      })\n    }, [as, href, isVisible, prefetchEnabled, router, appPrefetchKind])\n\n    const childProps: {\n      onTouchStart?: React.TouchEventHandler<HTMLAnchorElement>\n      onMouseEnter: React.MouseEventHandler<HTMLAnchorElement>\n      onClick: React.MouseEventHandler<HTMLAnchorElement>\n      href?: string\n      ref?: any\n    } = {\n      ref: setRef,\n      onClick(e) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (!e) {\n            throw new Error(\n              `Component rendered inside next/link has to pass click event to \"onClick\" prop.`\n            )\n          }\n        }\n\n        if (!legacyBehavior && typeof onClick === 'function') {\n          onClick(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onClick === 'function'\n        ) {\n          child.props.onClick(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (e.defaultPrevented) {\n          return\n        }\n\n        linkClicked(e, router, href, as, replace, shallow, scroll)\n      },\n      onMouseEnter(e) {\n        if (!legacyBehavior && typeof onMouseEnterProp === 'function') {\n          onMouseEnterProp(e)\n        }\n\n        if (\n          legacyBehavior &&\n          child.props &&\n          typeof child.props.onMouseEnter === 'function'\n        ) {\n          child.props.onMouseEnter(e)\n        }\n\n        if (!router) {\n          return\n        }\n\n        if (!prefetchEnabled || process.env.NODE_ENV === 'development') {\n          return\n        }\n\n        prefetch(router, href, {\n          kind: appPrefetchKind,\n        })\n      },\n      onTouchStart: process.env.__NEXT_LINK_NO_TOUCH_START\n        ? undefined\n        : function onTouchStart(e) {\n            if (!legacyBehavior && typeof onTouchStartProp === 'function') {\n              onTouchStartProp(e)\n            }\n\n            if (\n              legacyBehavior &&\n              child.props &&\n              typeof child.props.onTouchStart === 'function'\n            ) {\n              child.props.onTouchStart(e)\n            }\n\n            if (!router) {\n              return\n            }\n\n            if (!prefetchEnabled) {\n              return\n            }\n\n            prefetch(router, href, {\n              kind: appPrefetchKind,\n            })\n          },\n    }\n\n    // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n    // defined, we specify the current 'href', so that repetition is not needed by the user.\n    // If the url is absolute, we can bypass the logic to prepend the basePath.\n    if (isAbsoluteUrl(as)) {\n      childProps.href = as\n    } else if (\n      !legacyBehavior ||\n      passHref ||\n      (child.type === 'a' && !('href' in child.props))\n    ) {\n      childProps.href = addBasePath(as)\n    }\n\n    return legacyBehavior ? (\n      React.cloneElement(child, childProps)\n    ) : (\n      <a {...restProps} {...childProps}>\n        {children}\n      </a>\n    )\n  }\n)\n\nexport default Link\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<\n  IntersectionObserverInit,\n  'rootMargin' | 'root'\n>\n\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit & {\n    rootRef?: React.RefObject<HTMLElement | null> | null\n  }\ntype ObserveCallback = (isVisible: boolean) => void\ntype Identifier = {\n  root: Element | Document | null\n  margin: string\n}\ntype Observer = {\n  id: Identifier\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver === 'function'\n\nconst observers = new Map<Identifier, Observer>()\nconst idList: Identifier[] = []\n\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = {\n    root: options.root || null,\n    margin: options.rootMargin || '',\n  }\n  const existing = idList.find(\n    (obj) => obj.root === id.root && obj.margin === id.margin\n  )\n  let instance: Observer | undefined\n\n  if (existing) {\n    instance = observers.get(existing)\n    if (instance) {\n      return instance\n    }\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n  instance = {\n    id,\n    observer,\n    elements,\n  }\n\n  idList.push(id)\n  observers.set(id, instance)\n  return instance\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n      const index = idList.findIndex(\n        (obj) => obj.root === id.root && obj.margin === id.margin\n      )\n      if (index > -1) {\n        idList.splice(index, 1)\n      }\n    }\n  }\n}\n\nexport function useIntersection<T extends Element>({\n  rootRef,\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean, () => void] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const [visible, setVisible] = useState(false)\n  const elementRef = useRef<T | null>(null)\n  const setElement = useCallback((element: T | null) => {\n    elementRef.current = element\n  }, [])\n\n  useEffect(() => {\n    if (hasIntersectionObserver) {\n      if (isDisabled || visible) return\n\n      const element = elementRef.current\n      if (element && element.tagName) {\n        const unobserve = observe(\n          element,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { root: rootRef?.current, rootMargin }\n        )\n\n        return unobserve\n      }\n    } else {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isDisabled, rootMargin, rootRef, visible, elementRef.current])\n\n  const resetVisible = useCallback(() => {\n    setVisible(false)\n  }, [])\n\n  return [setElement, visible, resetVisible]\n}\n"],"names":["getLinkUtilityClass","slot","generateUtilityClass","linkClasses","generateUtilityClasses","theme","ownerState","getTextDecoration","transformedColor","color","getPath","channelColor","alpha","v6Colors","primary","secondary","error","info","success","warning","textPrimary","textSecondary","textDisabled","useUtilityClasses","classes","component","focusVisible","underline","slots","root","capitalize","composeClasses","LinkRoot","styled","Typography","name","overridesResolver","props","styles","button","memoTheme","variants","style","textDecoration","textDecorationColor","Object","entries","palette","filter","createSimplePaletteValueFilter","map","vars","mainChannel","main","text","primaryChannel","secondaryChannel","disabled","position","WebkitTapHighlightColor","backgroundColor","outline","border","margin","borderRadius","padding","cursor","userSelect","verticalAlign","MozAppearance","WebkitAppearance","borderStyle","React","Link","ref","useDefaultProps","inProps","useTheme","className","onBlur","onFocus","TypographyClasses","variant","sx","other","setFocusVisible","_jsx","clsx","event","handleBlur","isFocusVisible","target","handleFocus","undefined","Array","isArray","prefetch","router","href","options","window","catch","formatStringOrUrl","urlObjOrString","formatUrl","forwardRef","LinkComponent","forwardedRef","children","child","hrefProp","asProp","childrenProp","prefetchProp","replace","shallow","onMouseEnterProp","onTouchStart","onTouchStartProp","restProps","as","passHref","scroll","onClick","onMouseEnter","legacyBehavior","a","useContext","AppRouterContext","prefetchEnabled","appPrefetchKind","PrefetchKind","AUTO","FULL","useMemo","resolvedHref","previousHref","useRef","previousAs","Children","only","childRef","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","setIntersectionWithResetRef","useCallback","current","el","setRef","useMergedRef","useEffect","childProps","e","defaultPrevented","nodeName","currentTarget","toUpperCase","isModifiedEvent","getAttribute","metaKey","ctrlKey","shiftKey","altKey","nativeEvent","which","preventDefault","startTransition","navigate","routerScroll","kind","process","env","NODE_ENV","isAbsoluteUrl","type","addBasePath","cloneElement","hasIntersectionObserver","IntersectionObserver","observers","Map","idList","rootRef","isDisabled","visible","setVisible","useState","elementRef","setElement","element","tagName","unobserve","observe","callback","id","observer","elements","createObserver","instance","existing","find","obj","get","forEach","entry","isIntersecting","intersectionRatio","push","set","delete","size","disconnect","index","findIndex","splice","idleCallback","requestIdleCallback","cancelIdleCallback"],"sourceRoot":"","ignoreList":[0,1,2,3]}