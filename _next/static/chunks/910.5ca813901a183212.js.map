{"version":3,"file":"static/chunks/910.5ca813901a183212.js","mappings":"+MAyBMA,EAAuBC,CAAAA,EAAAA,EAAAA,EAAAA,EAAOC,EAAAA,CAAcA,EAG9C,GAAAC,EAAAC,CAAA,GAFAC,OAAQ,GACRC,aAAc,GACb,KAA+BC,MAAA,CAA1BC,EAAAA,CAAqBA,CAACC,GAAG,EAAK,CAChCH,aAAc,CAClB,GAgHJI,CAAAA,EAAA,QAxGe,WACX,IAIIC,EAAAA,CAAAA,EAAAA,EAAAA,EAAAA,IAHAC,EAGAD,EAHAC,GAAAA,CACAC,EAEAF,EAFAE,SAAAA,CACAC,EACAH,EADAG,MAAAA,CAqBEC,EAA2B,CAC7B,CACIC,KAAM,aACNC,WAAY,EAChB,EACA,CACID,KAAM,WACNC,WAAY,EAChB,EACA,CACID,KAAM,gBACNC,WAAY,EAChB,EACA,CACID,KAAM,sBACNC,WAAY,EAChB,EACH,CAGKC,EACFL,IAAAA,EAAkBM,KAAKC,GAAG,CAACN,EAFC,GAEyB,GAAK,EACxDO,EACFR,KAAAA,EACMM,KAAKG,GAAG,CAACR,EALa,GAKa,GAAM,GACzC,EACJS,EAAmB,SAACC,CAAAA,EACtB,IAAMC,EAAU,SAESlB,MAAA,CAFAiB,EAAMR,IAAI,CAC9BU,WAAW,GACXC,OAAO,CAAC,MAAO,KAAK,sBACzB,MACI,GAAAC,EAAAC,IAAA,EAACC,EAAAA,EAAIA,CAAAA,CAACC,KAAI,GAACC,GAAI,GAAIC,GAAI,EAAGC,MAAO,CAAEC,QAASd,CAAe,YACvD,GAAAO,EAAAQ,GAAA,EAACC,EAAAA,CAAUA,CAAAA,CAACC,GAAIb,EAASc,GAAI,CAAEC,WAAY,MAAO,WAC7ChB,EAAMR,IAAI,GAEf,GAAAY,EAAAC,IAAA,EAACC,EAAAA,EAAIA,CAAAA,CACDW,UAAS,GACTC,QAAS,EACTC,eAAe,SACfC,WAAW,mBAEX,GAAAhB,EAAAQ,GAAA,EAACN,EAAAA,EAAIA,CAAAA,CAACC,KAAI,GAACC,GAAI,EAAGa,GAAI,YAClB,GAAAjB,EAAAQ,GAAA,EAACpC,EAAAA,CACG8C,kBAAiBrB,EACjBsB,QAAQ,cACRC,gBAAe,EACfC,gBAAe,IACfC,gBAAe1B,EAAMP,UAAU,CAC/BkC,MAAO3B,EAAMP,UAAU,CAAGC,MAGlC,GAAAU,EAAAC,IAAA,EAACC,EAAAA,EAAIA,CAAAA,CAACC,KAAI,GAACC,GAAI,EAAGa,GAAI,YACjBrB,EAAMP,UAAU,CAAC,aAKtC,EAEA,MACI,GAAAW,EAAAQ,GAAA,EAACN,EAAAA,EAAIA,CAAAA,CACDlB,IAAKwC,EACLX,UAAS,GACTC,QAAS,EACTC,eAAe,SACfC,WAAW,kBAEVS,CApFL,CACIrC,KAAM,cACNC,WAAY,EAChB,EACA,CACID,KAAM,uBACNC,WAAY,EAChB,EACA,CACID,KAAM,YACNC,WAAY,EAChB,EACA,CACID,KAAM,kBACNC,WAAY,EAChB,EACH,CAoEuBqC,GAAG,CAAC,SAACC,CAAAA,CAAeC,CAAAA,QAChC,GAAA5B,EAAAC,IAAA,EAAC4B,EAAAA,QAAc,YACVlC,EAAiBgC,GACjBC,EAAQzC,EAAgB2C,MAAM,CACzBnC,EAAiBR,CAAe,CAACyC,EAAM,EACvC,OAJWD,EAAcvC,IAAI,KASvD","sources":["webpack://_N_E/./app/(home)/_content/sections/Skills.tsx","webpack://_N_E/./components/layout/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * © 2023 Nadun De Silva. All rights reserved.\n */\nimport {\n    Grid,\n    LinearProgress,\n    styled,\n    Typography,\n    linearProgressClasses,\n} from \"@mui/material\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\n\nconst BorderLinearProgress = styled(LinearProgress)({\n    height: 10,\n    borderRadius: 5,\n    [`&.${linearProgressClasses.bar}`]: {\n        borderRadius: 5,\n    },\n});\n\ninterface Skill {\n    name: string;\n    percentage: number;\n}\n\nconst Skills = (): React.ReactElement => {\n    const {\n        ref: rootRef,\n        direction,\n        offset,\n    } = useScrollOffset<HTMLDivElement>();\n\n    const leftSideSkills: Skill[] = [\n        {\n            name: \"Programming\",\n            percentage: 90,\n        },\n        {\n            name: \"Time-series Analysis\",\n            percentage: 80,\n        },\n        {\n            name: \"Databases\",\n            percentage: 85,\n        },\n        {\n            name: \"Cloud Computing\",\n            percentage: 80,\n        },\n    ];\n    const rightSideSkills: Skill[] = [\n        {\n            name: \"Leadership\",\n            percentage: 80,\n        },\n        {\n            name: \"Teamwork\",\n            percentage: 95,\n        },\n        {\n            name: \"Communication\",\n            percentage: 95,\n        },\n        {\n            name: \"Attention to Detail\",\n            percentage: 90,\n        },\n    ];\n\n    const animationOffset: number = 0.2;\n    const currentOffset =\n        direction === 1 ? Math.min(offset + animationOffset, 1) : 1;\n    const currentOpacity =\n        direction === -1\n            ? Math.max(offset - animationOffset, 0) / (1 - animationOffset)\n            : 1;\n    const renderPercentage = (skill: Skill): React.ReactElement => {\n        const labelId = `skill-${skill.name\n            .toLowerCase()\n            .replace(/\\s/g, \"-\")}-progressbar-label`;\n        return (\n            <Grid item xs={12} md={6} style={{ opacity: currentOpacity }}>\n                <Typography id={labelId} sx={{ fontWeight: \"bold\" }}>\n                    {skill.name}\n                </Typography>\n                <Grid\n                    container\n                    spacing={3}\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                >\n                    <Grid item xs={8} sm={10}>\n                        <BorderLinearProgress\n                            aria-labelledby={labelId}\n                            variant=\"determinate\"\n                            aria-valuemin={0}\n                            aria-valuemax={100}\n                            aria-valuenow={skill.percentage}\n                            value={skill.percentage * currentOffset}\n                        />\n                    </Grid>\n                    <Grid item xs={4} sm={2}>\n                        {skill.percentage} %\n                    </Grid>\n                </Grid>\n            </Grid>\n        );\n    };\n\n    return (\n        <Grid\n            ref={rootRef}\n            container\n            spacing={3}\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            {leftSideSkills.map((leftSideSkill, index) => (\n                <React.Fragment key={leftSideSkill.name}>\n                    {renderPercentage(leftSideSkill)}\n                    {index < rightSideSkills.length\n                        ? renderPercentage(rightSideSkills[index])\n                        : null}\n                </React.Fragment>\n            ))}\n        </Grid>\n    );\n};\n\nexport default Skills;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * © 2023 Nadun De Silva. All rights reserved.\n */\nimport Layout from \"./Layout\";\nimport RouterBreadcrumbs from \"./RouterBreadcrumbs\";\nimport useScrollOffset from \"./scrolling\";\n\nexport default Layout;\n\nexport { RouterBreadcrumbs, useScrollOffset };\n"],"names":["BorderLinearProgress","styled","LinearProgress","_swc_helpers_define_property__WEBPACK_IMPORTED_MODULE_5__","_","height","borderRadius","concat","linearProgressClasses","bar","__webpack_exports__","useScrollOffset","ref","direction","offset","rightSideSkills","name","percentage","currentOffset","Math","min","currentOpacity","max","renderPercentage","skill","labelId","toLowerCase","replace","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Grid","item","xs","md","style","opacity","jsx","Typography","id","sx","fontWeight","container","spacing","justifyContent","alignItems","sm","aria-labelledby","variant","aria-valuemin","aria-valuemax","aria-valuenow","value","rootRef","leftSideSkills","map","leftSideSkill","index","React","length"],"sourceRoot":""}