{"version":3,"file":"static/chunks/928.1706f0ce88631602.js","mappings":"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","sources":["webpack://_N_E/./app/(home)/_content/sections/Profiles.tsx","webpack://_N_E/./components/layout/Layout.tsx","webpack://_N_E/./components/layout/RouterBreadcrumbs.tsx","webpack://_N_E/./components/layout/index.tsx","webpack://_N_E/./components/layout/scrolling.tsx","webpack://_N_E/./constants/metadata.ts","webpack://_N_E/./constants/routes.ts"],"sourcesContent":["/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport {\n    Facebook,\n    GitHub,\n    Instagram,\n    LinkedIn,\n    Article,\n    Twitter,\n    School,\n} from \"@mui/icons-material\";\nimport {\n    Container,\n    Grid2 as Grid,\n    Grow,\n    Link,\n    type SvgIcon,\n    Typography,\n} from \"@mui/material\";\nimport React from \"react\";\n\nimport { useScrollOffset } from \"@/components/layout\";\n\ninterface Profile {\n    name: string;\n    Icon: typeof SvgIcon;\n    link: string;\n}\n\nconst Profiles = (): React.ReactElement => {\n    const { ref: rootRef, offset } = useScrollOffset<HTMLDivElement>();\n\n    const profiles: Profile[] = [\n        {\n            name: \"LinkedIn\",\n            Icon: LinkedIn,\n            link: \"https://www.linkedin.com/in/nadundesilva\",\n        },\n        {\n            name: \"GitHub\",\n            Icon: GitHub,\n            link: \"https://github.com/nadundesilva\",\n        },\n        {\n            name: \"Medium\",\n            Icon: Article,\n            link: \"https://medium.com/@nadundesilva\",\n        },\n        {\n            name: \"Google Scholar\",\n            Icon: School,\n            link: \"https://scholar.google.com/citations?user=CdXo_YQAAAAJ&hl=en&oi=ao\",\n        },\n        {\n            name: \"Facebook\",\n            Icon: Facebook,\n            link: \"https://www.facebook.com/nadunrds\",\n        },\n        {\n            name: \"Instagram\",\n            Icon: Instagram,\n            link: \"https://www.instagram.com/nadunrds\",\n        },\n        {\n            name: \"Twitter\",\n            Icon: Twitter,\n            link: \"https://twitter.com/nadunrds\",\n        },\n    ];\n\n    return (\n        <Grid\n            ref={rootRef}\n            container\n            justifyContent=\"center\"\n            alignItems=\"center\"\n        >\n            {profiles.map(({ name, Icon, link }) => (\n                <Grid size={{ xs: 12, sm: 3 }} key={name}>\n                    <Link target={\"_blank\"} href={link} aria-label={name}>\n                        <Grid\n                            container\n                            direction=\"column\"\n                            justifyContent=\"center\"\n                            alignItems=\"center\"\n                            sx={{\n                                \"padding\": (theme) => theme.spacing(4),\n                                \"cursor\": \"pointer\",\n                                \"&:hover\": {\n                                    background: (theme) =>\n                                        theme.palette.mode === \"light\"\n                                            ? \"#cccccc\"\n                                            : \"#444444\",\n                                },\n                                \"color\": (theme) =>\n                                    theme.palette.mode === \"light\"\n                                        ? \"black\"\n                                        : \"white\",\n                            }}\n                        >\n                            <Grow in={offset > 0.5} timeout={1000}>\n                                <Container disableGutters>\n                                    <Grid\n                                        size={6}\n                                        sx={{\n                                            margin: \"auto\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n                                        <Icon\n                                            sx={{\n                                                margin: 1,\n                                            }}\n                                            fontSize=\"large\"\n                                        />\n                                    </Grid>\n                                    <Grid\n                                        size={6}\n                                        sx={{\n                                            margin: \"auto\",\n                                            textAlign: \"center\",\n                                        }}\n                                    >\n                                        <Typography sx={{ fontWeight: \"bold\" }}>\n                                            {name}\n                                        </Typography>\n                                    </Grid>\n                                </Container>\n                            </Grow>\n                        </Grid>\n                    </Link>\n                </Grid>\n            ))}\n        </Grid>\n    );\n};\n\nexport default Profiles;\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport {\n    DarkMode,\n    KeyboardArrowUp,\n    LightMode,\n    Menu as MenuIcon,\n} from \"@mui/icons-material\";\nimport {\n    AppBar,\n    Box,\n    Button,\n    Container,\n    Drawer,\n    Fab,\n    IconButton,\n    List,\n    ListItemButton,\n    ListItemText,\n    Toolbar,\n    Tooltip,\n    Typography,\n    useScrollTrigger,\n    Zoom,\n} from \"@mui/material\";\nimport { useColorScheme } from \"@mui/material/styles\";\nimport Link from \"next/link\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { FULL_NAME } from \"@/constants/metadata\";\nimport { Routes } from \"@/constants/routes\";\n\ninterface LayoutProps {\n    children: React.ReactNode;\n}\n\nconst Layout = ({ children }: LayoutProps): React.ReactElement | null => {\n    const [windowObject, setWindowObject] = useState<Window | undefined>(\n        undefined,\n    );\n    useEffect(() => {\n        if (typeof window !== \"undefined\") {\n            setWindowObject(window);\n        }\n    }, []);\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n        target: windowObject,\n    });\n\n    const scrollToTopRef = useRef<HTMLDivElement>(null);\n\n    const [isDrawerOpen, setDrawerOpen] = useState<boolean>(false);\n    const toggleDrawer = (): void => {\n        setDrawerOpen(!isDrawerOpen);\n    };\n\n    const { colorScheme, setColorScheme } = useColorScheme();\n    const nextColorScheme = colorScheme === \"light\" ? \"dark\" : \"light\";\n\n    const drawer = (\n        <React.Fragment>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={toggleDrawer}\n                edge=\"start\"\n                sx={{\n                    mr: 2,\n                    display: {\n                        xs: \"block\",\n                        md: \"none\",\n                    },\n                }}\n            >\n                <MenuIcon />\n            </IconButton>\n            <Drawer anchor={\"top\"} open={isDrawerOpen} onClose={toggleDrawer}>\n                <Box\n                    sx={{ width: \"auto\" }}\n                    onClick={toggleDrawer}\n                    onKeyDown={toggleDrawer}\n                >\n                    <List>\n                        {Object.values(Routes).map((route) => (\n                            <Link key={route.path} href={route.path} passHref>\n                                <ListItemButton sx={{ pl: { xs: 2, md: 5 } }}>\n                                    <ListItemText primary={route.name} />\n                                </ListItemButton>\n                            </Link>\n                        ))}\n                    </List>\n                </Box>\n            </Drawer>\n        </React.Fragment>\n    );\n\n    const appBar = React.cloneElement(\n        <AppBar data-testid={\"app-bar\"}>\n            <Toolbar>\n                {drawer}\n                <Typography sx={{ fontSize: 23 }}>{FULL_NAME}</Typography>\n                <Box sx={{ flexGrow: 1 }} />\n                <Box sx={{ display: { xs: \"none\", md: \"block\" } }}>\n                    {Object.values(Routes).map((route) => (\n                        <Link\n                            key={route.path}\n                            href={route.path}\n                            passHref={true}\n                        >\n                            <Button\n                                variant=\"text\"\n                                color=\"primary\"\n                                disableElevation\n                                sx={{ color: \"#ffffff\", pl: 2 }}\n                            >\n                                {route.name}\n                            </Button>\n                        </Link>\n                    ))}\n                </Box>\n                <Tooltip title={`Change to ${nextColorScheme} theme`}>\n                    <IconButton\n                        sx={{ ml: 5 }}\n                        size=\"small\"\n                        onClick={() => setColorScheme(nextColorScheme)}\n                    >\n                        {nextColorScheme === \"dark\" ? (\n                            <DarkMode />\n                        ) : (\n                            <LightMode />\n                        )}\n                    </IconButton>\n                </Tooltip>\n            </Toolbar>\n        </AppBar>,\n        {\n            elevation: trigger ? 4 : 0,\n        },\n    );\n\n    const handleClick = (): void => {\n        scrollToTopRef.current?.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"start\",\n        });\n    };\n\n    return colorScheme ? (\n        <React.Fragment>\n            {appBar}\n            <Toolbar ref={scrollToTopRef} />\n            <Container\n                maxWidth={false}\n                disableGutters\n                sx={{ overflowX: \"hidden\" }}\n            >\n                {children}\n            </Container>\n            <Container\n                maxWidth={false}\n                sx={{\n                    textAlign: \"center\",\n                    paddingTop: 10,\n                    paddingBottom: 5,\n                    color: \"#666666\",\n                }}\n            >\n                &copy; 2021 {FULL_NAME}\n            </Container>\n            <Zoom in={trigger}>\n                <Box\n                    onClick={handleClick}\n                    role=\"presentation\"\n                    sx={{\n                        position: \"fixed\",\n                        bottom: 10,\n                        right: 10,\n                    }}\n                >\n                    <Fab\n                        color=\"primary\"\n                        size=\"small\"\n                        aria-label=\"scroll back to top\"\n                    >\n                        <KeyboardArrowUp />\n                    </Fab>\n                </Box>\n            </Zoom>\n        </React.Fragment>\n    ) : null;\n};\n\nexport default Layout;\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport { KeyboardArrowRight } from \"@mui/icons-material\";\nimport { Breadcrumbs, Typography } from \"@mui/material\";\nimport type { Route as NextRoute } from \"next\";\nimport Link from \"next/link\";\nimport { usePathname } from \"next/navigation\";\nimport React from \"react\";\n\nimport { Routes, type Route } from \"@/constants/routes\";\n\nconst RouterBreadcrumbs = (): React.ReactElement | null => {\n    const pathname = usePathname();\n    const pathnames =\n        pathname == null ? [] : pathname.split(\"/\").filter((x) => x);\n\n    const breadcrumbs: Array<{ name: string; path?: NextRoute<string> }> = [\n        {\n            name: \"Home\",\n            path: pathnames.length > 0 ? \"/\" : undefined,\n        },\n    ];\n    if (pathnames.length > 0) {\n        const visitRoutes = (\n            currentRoutes: Record<string, Route>,\n            currentPathnames: string[],\n            currentBasePath: string,\n        ): void => {\n            if (currentPathnames.length > 0) {\n                const currentSubPath =\n                    currentBasePath + \"/\" + currentPathnames[0];\n                if (currentSubPath in currentRoutes) {\n                    const route = currentRoutes[currentSubPath];\n                    if (currentPathnames.length > 1) {\n                        breadcrumbs.push({\n                            name: route.name,\n                            path: currentSubPath as NextRoute<string>,\n                        });\n                        if (route.subRoutes !== undefined) {\n                            visitRoutes(\n                                route.subRoutes,\n                                currentPathnames.slice(1),\n                                currentSubPath,\n                            );\n                        }\n                    } else {\n                        breadcrumbs.push({\n                            name: route.name,\n                        });\n                    }\n                }\n            }\n        };\n        visitRoutes(Routes, pathnames, \"\");\n    }\n\n    return (\n        <Breadcrumbs\n            aria-label=\"breadcrumb\"\n            sx={{ margin: 3 }}\n            separator={<KeyboardArrowRight />}\n        >\n            {breadcrumbs.map((breadcrumb) => {\n                return breadcrumb.path === undefined ? (\n                    <Typography color=\"textPrimary\" key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Typography>\n                ) : (\n                    <Link passHref href={breadcrumb.path} key={breadcrumb.name}>\n                        {breadcrumb.name}\n                    </Link>\n                );\n            })}\n        </Breadcrumbs>\n    );\n};\n\nexport default RouterBreadcrumbs;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport Layout from \"./Layout\";\nimport RouterBreadcrumbs from \"./RouterBreadcrumbs\";\nimport useScrollOffset from \"./scrolling\";\n\nexport default Layout;\n\nexport { RouterBreadcrumbs, useScrollOffset };\n","\"use client\";\n/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport { type MutableRefObject, useEffect, useState, useRef } from \"react\";\n\n// -1 -> div partially or completely above viewport\n//  0 -> div visible in viewport\n//  1 -> div partially or completely below viewport\ntype Direction = -1 | 0 | 1;\n\ninterface UseScrollOffsetReturnValue<T> {\n    ref: MutableRefObject<T | null>;\n    direction: Direction;\n    offset: number;\n}\n\nfunction useScrollOffset<T extends Element>(): UseScrollOffsetReturnValue<T> {\n    const ref = useRef<T>(null);\n    const [direction, setDirection] = useState<Direction>(0);\n    const [offset, setOffset] = useState<number>(0);\n\n    const updateOffset = (): void => {\n        if (ref.current !== null) {\n            const refBBox = ref.current.getBoundingClientRect();\n            const viewportHeight = window.innerHeight;\n\n            let direction: Direction;\n            let newOffset: number;\n            if (refBBox.top >= viewportHeight) {\n                direction = 1;\n                newOffset = 0;\n            } else if (refBBox.bottom <= 0) {\n                direction = -1;\n                newOffset = 0;\n            } else if (refBBox.top > viewportHeight / 2) {\n                const fullPageHeight = document.documentElement.offsetHeight;\n                const yOffset = window.scrollY;\n                const pageBottomOffset =\n                    (yOffset + viewportHeight * 1.5 - fullPageHeight) /\n                    (viewportHeight / 2);\n                const clientRectOffset = 2 - refBBox.top / (viewportHeight / 2);\n\n                direction = 1;\n                newOffset = Math.max(pageBottomOffset, clientRectOffset);\n            } else if (refBBox.bottom < viewportHeight / 2) {\n                direction = -1;\n                newOffset = refBBox.bottom / (viewportHeight / 2);\n            } else {\n                direction = 0;\n                newOffset = 1;\n            }\n            setDirection(direction);\n            setOffset(newOffset);\n        } else {\n            setDirection(0);\n            setOffset(0);\n        }\n    };\n\n    const handleScroll = (): void => {\n        window.requestAnimationFrame(updateOffset);\n    };\n\n    useEffect(() => {\n        window.requestAnimationFrame(updateOffset);\n        window.addEventListener(\"scroll\", handleScroll);\n        return (): void => {\n            window.removeEventListener(\"scroll\", handleScroll);\n        };\n    });\n\n    return {\n        ref,\n        direction,\n        offset: Math.min(Math.max(offset, 0), 1),\n    };\n}\n\nexport default useScrollOffset;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2024 Nadun De Silva. All rights reserved.\n */\n\nexport const FULL_NAME = \"Nadun De Silva\";\nexport const MAIN_DESCRIPTION = `${FULL_NAME} is an aspiring Software Engineer interested in Deep Learning, Observability, Anomaly Detection &amp; Cloud Technologies.`;\n\nconst unsanitizedWebsiteUrl =\n    process.env.PUBLIC_URL ?? \"https://nadundesilva.github.io\";\nexport const WEBSITE_PUBLIC_URL = unsanitizedWebsiteUrl.endsWith(\"/\")\n    ? unsanitizedWebsiteUrl.substring(0, unsanitizedWebsiteUrl.length - 1)\n    : unsanitizedWebsiteUrl;\n","/*\n * Nadun De Silva - All Rights Reserved\n *\n * This source code and its associated files are the\n * confidential and proprietary information of Nadun De Silva.\n * Unauthorized reproduction, distribution, or disclosure\n * in any form, in whole or in part, is strictly prohibited\n * except as explicitly provided under a separate license\n * agreement with Nadun De Silva.\n *\n * Website: https://nadundesilva.github.io\n *\n * Â© 2023 Nadun De Silva. All rights reserved.\n */\nimport type { Route as NextRoute } from \"next\";\n\n/*\n * Internal model for type safety starts here\n */\n\ninterface _Route {\n    name: string;\n    path: NextRoute<string>;\n    subRoutes?: _Route[];\n}\n\nconst _Routes: _Route[] = [\n    {\n        name: \"Experience\",\n        path: \"/experience\",\n    },\n    {\n        name: \"Achievements\",\n        path: \"/achievements\",\n    },\n    {\n        name: \"Projects\",\n        path: \"/projects\",\n        subRoutes: [\n            {\n                name: \"Personal Projects\",\n                path: \"/projects/personal\",\n            },\n        ],\n    },\n    {\n        name: \"Testimonials\",\n        path: \"/testimonials\",\n    },\n    {\n        name: \"Blog Articles\",\n        path: \"/blog-articles\",\n    },\n    {\n        name: \"Education\",\n        path: \"/education\",\n        subRoutes: [\n            {\n                name: \"Certifications\",\n                path: \"/education/certifications\",\n            },\n        ],\n    },\n];\n\n/*\n * Internal model for type safety ends here\n */\n\nexport interface Route {\n    name: string;\n    path: NextRoute<string>;\n    subRoutes?: Record<string, Route>;\n}\n\nconst buildRoutes = (currentRoutes: _Route[]): Record<string, Route> => {\n    const routesMap: Record<string, Route> = {};\n    currentRoutes.forEach((route) => {\n        routesMap[route.path] = {\n            name: route.name,\n            path: route.path,\n            subRoutes:\n                route.subRoutes === undefined\n                    ? undefined\n                    : buildRoutes(route.subRoutes),\n        };\n    });\n    return routesMap;\n};\n\nexport const Routes: Record<string, Route> = buildRoutes(_Routes);\n"],"names":["__webpack_exports__","ref","rootRef","offset","useScrollOffset","profiles","name","Icon","LinkedIn","link","GitHub","Article","School","Facebook","Instagram","Twitter","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Grid","container","justifyContent","alignItems","map","param","size","xs","sm","Link","target","href","aria-label","direction","sx","theme","spacing","background","palette","mode","Grow","in","timeout","jsxs","Container","disableGutters","margin","textAlign","fontSize","Typography","fontWeight","children","windowObject","setWindowObject","useState","undefined","useEffect","window","trigger","useScrollTrigger","disableHysteresis","threshold","scrollToTopRef","useRef","isDrawerOpen","setDrawerOpen","toggleDrawer","colorScheme","setColorScheme","useColorScheme","nextColorScheme","drawer","React","IconButton","color","onClick","edge","mr","display","md","MenuIcon","Drawer","anchor","open","onClose","Box","width","onKeyDown","List","Object","values","Routes","route","path","passHref","ListItemButton","pl","ListItemText","primary","appBar","AppBar","data-testid","Toolbar","FULL_NAME","flexGrow","Button","variant","disableElevation","Tooltip","title","concat","ml","DarkMode","LightMode","elevation","maxWidth","overflowX","paddingTop","paddingBottom","Zoom","current","scrollIntoView","behavior","block","role","position","bottom","right","Fab","KeyboardArrowUp","pathname","usePathname","pathnames","split","filter","x","breadcrumbs","length","visitRoutes","currentRoutes","currentPathnames","currentBasePath","currentSubPath","push","subRoutes","slice","Breadcrumbs","separator","KeyboardArrowRight","breadcrumb","setDirection","setOffset","updateOffset","newOffset","refBBox","getBoundingClientRect","viewportHeight","innerHeight","top","fullPageHeight","document","documentElement","offsetHeight","yOffset","scrollY","clientRectOffset","Math","max","handleScroll","requestAnimationFrame","addEventListener","removeEventListener","min","process","unsanitizedWebsiteUrl","env","PUBLIC_URL","WEBSITE_PUBLIC_URL","endsWith","substring","buildRoutes","routesMap","forEach"],"sourceRoot":""}